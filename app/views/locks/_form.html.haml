= form_for @lock, html: { class: "form-horizontal" } do |f|
  #lock-form
    - ulock_type = LockType.friendly_find('u-lock')
    - chain_type = LockType.friendly_find('chain-with-lock')
    - cable_type = LockType.friendly_find('cable')
    - skewer_type = LockType.friendly_find('locking-skewer')
    - other_type = LockType.friendly_find('other-style')
    - ebike_type = LockType.friendly_find('battery-or-e-bike-key')
    - lock_types = [ulock_type, chain_type, cable_type, skewer_type, other_type, ebike_type]

    .row
      - lock_types.each do |lock_type|
        .col-xs-4.col-md-2
          = f.label "lock_type_id_#{lock_type.id}", class: "cursor-pointer" do
            = f.radio_button :lock_type_id, lock_type.id
            %span.d-block= lock_type.name
            - unless lock_type.slug == "battery-or-e-bike-key"
              = image_tag "locks/#{lock_type.slug}.jpg"

    .row.mt-4
      .col-md-6
        .related-fields
          .form-group.unfancy.fancy-select.manufacturer-select{ data: { otherid: Manufacturer.other.id } }
            = f.label :manufacturer_id, class: "form-label"
            = f.collection_select(:manufacturer_id, Manufacturer.all, :id, :name, { required: true, prompt: t(".choose_manufacturer") }, class: 'form-control')
          .hidden-other.form-group
            = f.label :manufacturer_other, t(".other_lock_manufacturer"), class: "form-label"
            = f.text_field :manufacturer_other, class: 'form-control'

        .form-group
          %label.checkbox-inline.mr-4
            = f.check_box :has_key, class: "checkbox"
            = t(".has_key")

          %label.checkbox-inline
            = f.check_box :has_combination, class: "checkbox"
            = t(".has_combination")

        #serial-group.form-group
          .form-label
            = f.label :key_serial
            = f.text_field :key_serial, class: 'form-control'
        .form-group.submit-button
          - if @lock.id.present?
            = submit_tag t(".update_the_lock"), class: 'btn btn-success btn-lg'
          - else
            = submit_tag t(".add_the_lock"), class: 'btn btn-success btn-lg'

      .col-md-6
        #combination.form-group.initially-hidden
          .form-label
            = f.label :combination
            = f.text_field :combination, class: 'form-control'

        - if @lock.id.present?
          .form-group
            .form-label
              = f.label :lock_model
              = f.text_field :lock_model, class: 'form-control'

          .form-group.lock-notes
            %label.form-label{ for: 'notes' }
              = t(".additional_notes")
            .controls
              = f.text_area :notes, toolbar: t(".basic"), class: 'ckeditor, form-control'


    .card.lock-pictures
      .card-block
        %h3.card-title
          = t(".examples_of_serial_numbers_found_on_diffe")
        %section
          %a.lock-picture{ data: { target: image_path('locks/krypto_small_key.jpg') } }
            = image_tag('locks/krypto_small_key.jpg', alt: t(".small_kryptonite_key"))
          %p= t(".small_kryptonite_key")
        %section
          %a.lock-picture{ data: { target: image_path('locks/krypto_large_key.jpg') } }
            = image_tag('locks/krypto_large_key.jpg', alt: t(".large_kryptonite_key"))
          %p= t(".large_kryptonite_key")
        %section
          %a.lock-picture{ data: { target: image_path('locks/pinhead_key.jpg') } }
            = image_tag('locks/pinhead_key.jpg', alt: t(".pinhead_key"))
          %p= t(".pinhead_locking_skewer_key")
