.admin-subnav
  .col-md-4
    %h1 Banned Email Domains
  .col-md-8
    %ul
      %li.nav-item
        = link_to "New Banned Domain", new_admin_banned_email_domain_path

  .row.mt-4.mb-4
    .card.ml-auto.mr-auto.col-8
      .card-body
        %p
          In 2024 we started getting spam signups - of 10s of thousands of users a week, from junk domains.
        %p
          I'm unclear on what the exploit is, but this costs us money (to send the emails) and slows down all operations involving users (realistically, this is every page load for a signed in user). So I added this functionality to silently block them ðŸ¤· (and every night a job runs to delete any that exist).
        %p
          Emails that end in these domains are deleted right after sign up and aren't sent a confirmation (but they still are shown the page that says they need to confirm their email, just like a normal user).


= render partial: "/shared/admin/current_header"

= render partial: "/shared/admin/pagination", locals: {collection: @banned_email_domains}

.full-screen-table.mt-4
  %table.table.table-striped.table-bordered.table-sm.without-exterior-border
    %thead.small-header
      %th= sortable "created_at"
      %th= sortable "domain"
      %th= sortable "creator_id"
      -# lazy hack for extra visibility - loads really slow ;)
      - if params[:matching_users].present?
        %th Matching Users
      %th
        &nbsp;

    %tbody
      - @banned_email_domains.each do |banned_email_domain|
        %tr
          %td
            %span.convertTime= l(banned_email_domain.created_at, format: :convert_time)
            - if display_dev_info?
              %code.small.only-dev-visible= banned_email_domain.id
          %td= banned_email_domain.domain
          %td
            = render partial: "/shared/admin/user_cell", locals: {user: banned_email_domain.creator, user_id: banned_email_domain.creator_id, cache: false}
          - if params[:matching_users].present?
            %td
              = number_with_delimiter(User.matching_domain(banned_email_domain.domain).count)
          %td
            %small.float-right= link_to "remove block", admin_banned_email_domain_path(banned_email_domain), method: :delete

= render partial: "/shared/admin/pagination", locals: {collection: @banned_email_domains, skip_total: true}
