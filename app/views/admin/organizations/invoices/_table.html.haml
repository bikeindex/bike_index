- render_sortable ||= false
- display_organization ||= false

.full-screen-table
  %table.table.table-striped.table-bordered.sortable{ class: render_sortable ? "" : "table-sm" }
    %thead.thead-light
      %th
        - if render_sortable
          = sortable "id", "#"
        - else
          \#
      - if display_organization
        %th
          - if render_sortable
            = sortable "organization_id"
          - else
            Organization
      %th
        - if render_sortable
          = sortable "subscription_start_at", "Start"
        - else
          Start
      %th
        - if render_sortable
          = sortable "subscription_end_at", "End"
        - else
          End
      %th
        %small
          - if render_sortable
            = sortable "amount_due_cents", "$ Due"
          - else
            $&nbsp;Due
      %th
        - if render_sortable
          = sortable "amount_paid_cents", "$ Paid"
        - else
          $&nbsp;paid
      %th
        Discount
      %th
        Features
    %tbody
      - invoices.each do |invoice|
        - organization = Organization.unscoped.find(invoice.organization_id)
        %tr
          %td
            - if organization.present?
              = link_to invoice.display_name, edit_admin_organization_invoice_path(organization_id: organization.to_param, id: invoice.to_param)
            - if invoice.active?
              %small.text-success{ style: "display: block;" }
                Active
            - if invoice.previous_invoice.present?
              %small.less-strong{ style: "display: block; margin-top: 1rem;" }
                Follows ##{invoice.previous_invoice.id}
          - if display_organization
            %td
              - if organization.present?
                = link_to organization.short_name, admin_invoices_path(organization_id: organization.to_param)
                - unless invoice.organization.present?
                  %small.text-danger
                    organization is deleted!
          %td
            - if invoice.subscription_start_at.present?
              %span.convertTime
                = l invoice.subscription_start_at, format: :convert_time
          %td
            - if invoice.endless?
              %small.less-strong endless
            - elsif invoice.subscription_end_at.present?
              %span.convertTime{ class: invoice.subscription_end_at < Time.current ? "text-danger" : "" }
                = l invoice.subscription_end_at, format: :convert_time
          %td
            = invoice.amount_due_formatted
          %td
            %span{ class: invoice.paid_in_full? ? "text-success" : "" }
              = invoice.amount_paid_formatted
            - if invoice.payments.any?
              %ul
                - invoice.payments.each do |payment|
                  %li{ style: "font-size: 80%;" }
                    #{link_to "#{payment.amount_formatted} #{payment.payment_method}", admin_payment_path(payment)},
                    %span.convertTime
                      = l payment.created_at, format: :convert_time
          %td
            %span{ class: invoice.discount_cents > 0 ? "text-danger" : "" }
              = invoice.discount_formatted
          %td
            %ul{ style: "font-size: 80%;" }
              - invoice.organization_features.each do |organization_feature|
                %li
                  = link_to organization_feature.name, edit_admin_organization_feature_path(organization_feature)
                  %em{ style: "font-size: 70%;" }
                    = organization_feature.kind

            %small
              = safe_join(invoice.feature_slugs.map { |slug| content_tag(:code, slug) }, ", ")
