- if @organization.errors.any?
  = render partial: "/shared/errors", locals: { name: "Organization", obj: @organization}


.row
  .form-group.col-md-6
    = f.label :name
    = f.text_field :name, required: true, class: "form-control"

  .form-group.col-md-6
    = f.label :available_invitation_count, "Available invitations"
    = f.number_field :available_invitation_count, class: "form-control"
    %p.text-success
      = "Invitations sent: #{@organization.sent_invitation_count}"
.row
  .col-md-6
    .form-group
      = f.label :short_name, "Short name (30 letters or less)"
      = f.text_field :short_name, class: "form-control"
  .col-md-6
    .form-group
      = f.label :ascend_name
      = f.text_field :ascend_name, class: "form-control"

.row
  .col-md-6
    .form-group
      = f.label :website
      = f.text_field :website, class: "form-control"
  .col-6.col-lg-3
    %fieldset{:disabled => "disabled"}
      .form-group
        = f.label :slug, "Slug:"
        %p
          = @organization.slug
  - if current_user.developer?
    .col-6.col-lg-3
      .form-group
        = f.label :previous_slug do
          Previous Slug
          %em.small.text-warning
            Rarely unnecessary
        = f.text_field :previous_slug, class: "form-control"

.row
  .col-md-6
    .form-group#js-organization-type
      %strong
        %label
          Organization Type
      .row
        - Organization.kinds.each do |kind|
          .col-6
            .form-check
              = f.radio_button "kind", kind, class: "form-check-input"
              = f.label "kind_#{kind}", kind.humanize, class: "form-check-label"

  .col-md-6
    .form-group
      = f.label :search_radius, "Search radius (mi)"
      = f.number_field :search_radius, {class: "form-control"}
      %em.small
        %pre.d-inline organizations_nearby
        will search within this radius for other organizations in the same area

  .col-md-6
    .form-group
      = f.check_box :show_on_map
      = f.label :show_on_map
    .form-group
      = f.check_box :lock_show_on_map
      = f.label :lock_show_on_map, 'Lock shown on map'
      %small.less-strong
        Restrict org from updating show on map above (e.g. they're known bad actors)
    .form-group
      = f.check_box :api_access_approved
      = f.label :api_access_approved
      %small.less-strong
        to be able to post updates via API, check this too
    .form-group
      = f.check_box :approved
      = f.label :approved, 'Validated & approved'

  - if current_user.developer?
    .col-md-6.mt-4
      %label.less-strong.d-block
        Manually set POS kind
        %span.text-danger
          Warning - you can break things here!
      .form-check.form-check-inline
        = f.radio_button "manual_pos_kind", nil, class: "form-check-input"
        %strong
          = f.label "manual_pos_kind", "not set", class: "form-check-label"
      - Organization.pos_kinds.each do |pos_kind|
        .form-check.form-check-inline.small
          = f.radio_button "manual_pos_kind", pos_kind, class: "form-check-input"
          = f.label "manual_pos_kind_#{pos_kind}", pos_kind.humanize, class: "form-check-label"
      .mb-4

.row
  .col-md-6
    .form-group.fancy-select.unfancy
      = f.label :parent_organization_id
      = f.collection_select(:parent_organization_id, Organization.all, :id, :name, { prompt: "Choose organization", required: false }, class: "form-control")
  - if @organization.id.present?
    .col-md-6
      - emails = @organization.users.pluck(:email)
      - emails << ENV['AUTO_ORG_MEMBER'] unless emails.any?
      .form-group.fancy-select.unfancy
        = f.label :embedable_user_email
        = f.select :embedable_user_email, emails, {prompt: "Select email", selected: @embedable_email}, class: "form-control"
        %small.less-strong
          - if @organization.memberships.count == 0
            You can use #{ENV['AUTO_ORG_MEMBER']} if
            there are no members of the organization

  / .control-group.padded
  /   .control-label
  /     = f.label :is_suspended
  /   .controls
  /     = f.check_box :is_suspended
