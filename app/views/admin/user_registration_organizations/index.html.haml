.admin-subnav
  .col-md-5
    %h1
      User Registration Organizations
  .col-md-7
    %ul
      %li.nav-item
        = link_to "With registration info", url_for(sortable_search_params.merge(search_with_registration_info: !@with_registration_info)), class: "nav-link #{@with_registration_info ? 'active' : ''}"
      %li.nav-item
        = link_to "Render organization counts", url_for(sortable_search_params.merge(search_org_counts: !@render_org_counts)), class: "nav-link #{@render_org_counts ? 'active' : ''}"
      %li.nav-item
        = link_to "graph", url_for(sortable_search_params.merge(render_chart: !@render_chart)), class: "nav-link #{@render_chart ? 'active' : ''}"
  = render partial: "/shared/admin_current_header", locals: { viewing: "User Registration Organizations" }

- if @render_org_counts
  .row.mt-4.mb-4
    .col-md-6.offset-md-3
      .card
        .card-body
          %h3 Organizations
          %table.table-list.wide-definition
            %tbody
              - org_ids = matching_user_registration_organizations.distinct.pluck(:organization_id)
              - org_data = Organization.where(id: org_ids).pluck(:name, :id)
              -# Add counts in and sort by the counts
              - org_data = org_data.map { |org_name, org_id| [org_name, org_id, matching_user_registration_organizations.where(organization_id: org_id).count] }.sort { |a, b| b[2] <=> a[2] }
              - org_data.each do |org_name, org_id, org_reg_count|
                %tr
                  %td
                    = link_to org_name, url_for(sortable_search_params.merge(organization_id: org_id))
                  %td
                    = admin_number_display(org_reg_count)

- if @render_chart
  = column_chart time_range_counts(collection: matching_user_registration_organizations, column: @time_range_column), stacked: true, thousands: ","
= render partial: "/shared/period_select"

= render partial: "/shared/pagination", locals: {collection: @user_registration_organizations, count: matching_user_registration_organizations.size}

- render_sortable ||= true
.full-screen-table
  %table.table.table-striped.table-bordered.table-sm
    %thead
      %th= sortable "created_at", render_sortable: render_sortable
      %th.small= sortable "updated_at", render_sortable: render_sortable
      %th= sortable "user_id", render_sortable: render_sortable
      %th= sortable "organization_id", render_sortable: render_sortable
      %th
        %small Registration info
      %th.small All Bikes
      %th.small Can edit claimed
      %th Bikes
    %tbody
      - @user_registration_organizations.each do |user_registration_organization|
        %tr
          %td
            %span.convertTime
              = l user_registration_organization.created_at, format: :convert_time
          %td
            %small.convertTime
              = l user_registration_organization.updated_at, format: :convert_time
          %td
            - if user_registration_organization.user_id.present?
              = link_to user_registration_organization.user&.display_name, admin_user_path(user_registration_organization.user_id)
            - else
              Missing ID: "#{user_registration_organization.user_id}"
          %td
            - if user_registration_organization.organization.present?
              = link_to user_registration_organization.organization.name, admin_organization_path(user_registration_organization.organization_id)
          %td.small.data-cell.only-data
            - if user_registration_organization.registration_info.present?
              = pretty_print_json(user_registration_organization.registration_info)
          %td.table-cell-check
            = check_mark if user_registration_organization.all_bikes?
          %td.table-cell-check
            = check_mark if user_registration_organization.can_edit_claimed
          %td
            = admin_number_display(user_registration_organization.bikes.count)
