- if @user.banned? || @user.deleted?
  .row.mb-4
    - if @user.deleted?
      .col-sm-10.offset-sm-1.col-md-6.offset-md-3.mt-4
        .alert.alert-danger.mb-4
          %h4.text-danger User deleted
          Deleted:
          %span.convertTime.preciseTime
            = l @user.deleted_at, format: :convert_time
    - if @user.banned?
      - user_ban = @user.user_ban
      .col-md-8.offset-md-2.mt-4
        %h4.text-danger
        %strong User banned
        %table.table-list
          %tbody
            %tr
              %td Banned at
              %td.convertTime.preciseTime
                - time = user_ban&.created_at || @user.updated_at
                = l time, format: :convert_time
            %tr
              %td By
              %td
                - if user_ban&.creator.present?
                  = user_ban.creator.display_name
                - elsif user_ban&.creator_id.present?
                  User ##{user_ban.creator_id} (unknown user)
            %tr
              %td Reason
              %td= user_ban&.reason&.humanize
            %tr
              %td Notes
              %td= user_ban&.description
.row
  .col-md-6
    %h1
      %small
        Editing
      = @user.display_name
      - if display_dev_info?
        %em.small.less-strong.only-dev-visible
          id: #{@user.id}
    %table.table-list
      %tbody
        %tr
          %td
            Tags
          %td
            = user_icon(@user, full_text: true)
        %tr
          %td
            Created
          %td.convertTime.preciseTime
            = l @user.created_at, format: :convert_time
        %tr
          %td
            Updated
          %td.convertTime.preciseTime
            = l @user.updated_at, format: :convert_time
        %tr
          %td
            Last&nbsp;login
          %td
            - if @user.last_login_at.present?
              %span.convertTime.preciseTime
                = l @user.last_login_at, format: :convert_time
            - if @user.last_login_ip.present?
              %small.less-strong
                = @user.last_login_ip
        - if display_dev_info?
          %tr.only-dev-visible
            %td No Address
            %td
              - if @user.no_address?
                %strong.text-success TRUE
              - else
                %small.less-strong address permitted
        %tr
          %td
            Superuser
          %td
            - if @user.developer?
              %span.only-dev-visible developer
            - superuser_abilities = @user.superuser_abilities
            - if @user.superuser?
              %strong full superuser
              - superuser_ability = superuser_abilities.universal.first
              - if superuser_ability.present?
                %small.less-strong
                  since
                  %span.convertTime.preciseTime
                    = l superuser_ability.created_at, format: :convert_time
            - elsif superuser_abilities.any?
              = link_to "limited", admin_superuser_abilities_path(user_id: @user.id), class: "text-info"
              %ul.small.mb-0
                - superuser_abilities.each do |superuser_ability|
                  %li
                    - if superuser_ability.universal?
                      %strong full superuser
                    - else
                      Can access
                      - if superuser_ability.action_name.present?
                        %em= superuser_ability.action_name
                        in
                      = superuser_ability.controller_name
        %tr
          %td Emails
          %td
            .row
              .col-4
                %small.d-block.border-bottom{title: "Receive Bike Index newsletters"}
                  Newsletters
                - if @user.notification_newsletters
                  = check_mark
                - else
                  %small.less-strong false
              .col-4
                %small.d-block.border-bottom{title: "Receive non-stolen theft emails"}
                  Unstolen
                - if @user.notification_unstolen
                  = check_mark
                - else
                  %small.text-danger.less-strong false
              .col-4
                %small.d-block.border-bottom{title: "No non theft emails"}
                  NONE
                - if @user.no_non_theft_notification
                  %span.text-danger= check_mark
                - else
                  %small.less-strong false

  .col-md-6.mt-auto
    %table.table-list
      %tr
        %td Confirmed?
        %td
          - if @user.confirmed?
            = check_mark
          - else
            %small.less-strong false
      %tr
        %td email
        %td
          = @user.email
          - if @user.secondary_emails.any?
            %small
              = @user.secondary_emails.join(", ")
      %tr
        %td Name
        %td
          = @user.name
      %tr
        %td Photo
        %td
          - if @user.avatar?
            = @user.avatar
      %tr
        %td Social
        %td
          %small
            - if @user.show_bikes?
              = link_to "Bike Index profile page", "/users/#{@user.username}", class: "gray-link"
              - if @user.twitter.present?
                %br
            - if @user.twitter.present?
              Twitter: #{link_to @user.twitter, "https://twitter.com/#{@user.twitter}"}
      %tr
        %td Phone
        %td
          - display_phone = @user.phone.present?
          - if display_phone || @user.user_phones.any?
            %ul.mb-0
              - @user.user_phones.each do |user_phone|
                %li
                  = phone_display(user_phone.phone)
                  %small.less-strong{ class: user_phone.confirmed? ? "text-success" : "text-warning" }
                    = user_phone.confirmed? ? "confirmed" : "unconfirmed"
                  %small.less-strong.convertTime.withPreposition= l user_phone.created_at, format: :convert_time
                  - if display_phone && Phonifyer.phonify(user_phone.phone) == Phonifyer.phonify(@user.phone)
                    - display_phone = false

              - if display_phone
                %li
                  = phone_display(@user.phone)
                  %small.less-strong.text-warning unconfirmed
            - unless Flipper.enabled?(:phone_verification)
              %em.small.less-strong Phone verification is currently disabled, users don't see the option to confirm their phones
      %tr
        %td Website
        %td
          = @user.mb_link_target
      %tr
        %td Address
        %td
          %small= @user.address
      %tr
        %td Vendor terms?
        %td
          - if @user.when_vendor_terms_of_service.present?
            %span.convertTime.preciseTime
              = l @user.when_vendor_terms_of_service, format: :convert_time


- if @user.ambassador?
  %h4.mt-4 Ambassador Tasks
  - ambassador = Ambassador.find(@user.id)
  %p
    %strong= "#{ambassador.progress_count} complete"

  %table.table.table-striped.table-bordered.ambassador-tasks-table
    %thead.small-header.thead-light
      %tr
        %th Task
        %th Completed at
    %tbody
      - ambassador.ambassador_task_assignments.each do |task|
        %tr
          %td
            %strong= task.title
          %td
            - if task.completed_at
              %span.convertTime= l task.completed_at, format: :convert_time
- else
  %h4.mt-4
    Ambassador
    %small.less-strong false

%h4.mt-4
  Bikes
  %small= link_to admin_number_display(@bikescount), admin_bikes_path(user_id: @user.id)

- if @bikescount > 0
  = render partial: "admin/bikes/table", locals: {bikes: @bikes, skip_user: true}

- user_alerts = @user.user_alerts.order(created_at: :desc)
%h4.mt-4
  = "Active Alert".pluralize(user_alerts.active.count)
  = admin_number_display(user_alerts.active.count)
  %em.small.ml-2= link_to "#{user_alerts.count} total", admin_user_alerts_path(user_id: @user.id)
- if user_alerts.any?
  = render partial: "admin/user_alerts/table", locals: {user_alerts: user_alerts.active, skip_user: true}


- payments = @user.payments.reorder(created_at: :desc)
%h4.mt-4
  Donations/payments
  %small
    = link_to admin_number_display(payments.count), admin_payments_path(user_id: @user.id, period: "all")
    - if payments.count > 5
      %em (only first 5 shown)
- if payments.any?
  = render partial: "/admin/payments/table", locals: {payments: payments.limit(5), skip_user: true}

%h4.mt-4
  Memberships
  %small.less-strong.mr-3= admin_number_display(@user.memberships.count)
  %small.d-inline-block.less-strong
    - reg_orgs_count = @user.user_registration_organizations.count
    = link_to admin_user_registration_organizations_path(user_id: @user.id) do
      = admin_number_display(reg_orgs_count)
    = "registration org".pluralize(reg_orgs_count)
- if @user.memberships.count > 0
  = render partial: "/admin/memberships/table", locals: {memberships: @user.memberships}

- notifications = Notification.notifications_sent_or_received_by(@user)
%h4.mt-4
  Notifications
  %small= link_to admin_number_display(notifications.count), admin_notifications_path(user_id: @user.id)
- if notifications.count > 0
  = render partial: "/admin/notifications/table", locals: {notifications: notifications, skip_user: true}

- feedbacks = Feedback.where(user_id: @user.id)
%h4.mt-4
  Feedbacks
  %small= link_to admin_number_display(feedbacks.count), admin_feedbacks_path(user_id: @user.id)
- if feedbacks.count > 0
  = render partial: "/admin/feedbacks/table", locals: {feedbacks: feedbacks, skip_user: true}


%h4.mt-4 User emails
.full-screen-table
  %table.table.table-striped.table-bordered.table-sm
    %thead
      %th
        Created&nbsp;<small class="convertTimezone"></small>
      %th
      %th
        Confirmed
      %th
        Primary
      %th
        Old User Id
    %tbody
      - @user.user_emails.each do |user_email|
        %tr
          %td
            .less-strong-hold
              %span.less-strong-right.medium-screens
                = user_email.id
              %span.convertTime
                = l user_email.created_at, format: :convert_time
          %td= user_email.email
          %td
            - if user_email.confirmed?
              = check_mark
            - else
              %small.less-strong false
          %td
            - if user_email.primary?
              = check_mark
            - else
              %small.less-strong false
          %td
            = user_email.old_user_id

%hr.mt-4
- mailchimp_datum = @user.mailchimp_datum
%h4
  - if mailchimp_datum.blank?
    No
  Mailchimp data
  - if mailchimp_datum.present?
    %em.small
      %a.small{href: ".mailchimpRawData", "aria-expanded" => "false", "data-toggle" => "collapse"}
        show raw data
- if mailchimp_datum.present?
  .row
    .col-md-6
      %table.table-list
        %tbody
          - if display_dev_info?
            %tr.only-dev-visible.collapse.mailchimpRawData
              %td.small ID
              %td.small= mailchimp_datum.id
          %tr
            %td Status
            %td= @user.mailchimp_datum.status
          %tr
            %td Lists
            %td= @user.mailchimp_datum.lists.join(", ")
          %tr
            %td Mailchimp updated
            %td
              - if mailchimp_datum.mailchimp_updated_at.present?
                %span.convertTime
                  = l(mailchimp_datum.mailchimp_updated_at, format: :convert_time)
          %tr.collapse.small.mailchimpRawData
            %td Feedbacks
            %td= safe_join(mailchimp_datum.feedbacks.map { |f| link_to(f.kind_humanized, admin_feedback_path(f), class: "small") }, ", ")
    .col-md-6
      .collapse.small.mailchimpRawData= pretty_print_json(mailchimp_datum.data)



%hr.mt-4
%h4 Edit
= form_for [:admin, @user] do |f|
  - if @user.errors.any?
    = render partial: "/shared/errors", locals: { name: "User", obj: @user }
  .row.mt-4
    .col-md-6
      .form-group
        = f.label :name
        = f.text_field :name, class: "form-control"
    .col-md-6
      .form-group
        = f.label :email
        = f.email_field :email, class: "form-control"
  .row
    .col-md-6
      .form-group
        = f.label :username
        = f.text_field :username, class: "form-control"
    .col-md-6
      .form-group
        = f.label :secondary_emails
        = text_area_tag :secondary_emails, @user.secondary_emails.join(", "), disabled: true, rows: 1, class: "form-control"
  .row
    .col-md-6
      .form-group
        = f.label :phone
        = f.text_field :phone, class: "form-control"
    .col-lg-3.col-6
      .form-group
        .form-check
          = f.check_box :confirmed, disabled: @user.confirmed, class: "form-check-input"
          = f.label :confirmed, class: "form-check-label"
      .form-group
        .form-check.form-check-inline
          = f.check_box :can_send_many_stolen_notifications, class: "form-check-input"
          = f.label :can_send_many_stolen_notifications, class: "form-check-label"
    .col-lg-3.col-6
      .form-group
        .form-check.form-check-inline
          = f.check_box :superuser, class: "form-check-input"
          = f.label :superuser, class: "form-check-label"
      .form-group
        - if display_dev_info?
          .form-check.form-check-inline.only-dev-visible
            = f.check_box :developer, class: "form-check-input"
            = f.label :developer, class: "form-check-label"
  .row.mt-3
    .col-6
      .form-group
        = f.submit 'Save', class: 'btn btn-success'
    .col-6.pt-2
      .form-group
        .form-check
          = f.check_box :banned, class: "form-check-input"
          = f.label :banned, class: "form-check-label"

  - unless @user.user_ban&.reason.present?
    - @user.build_user_ban unless @user.user_ban.present?
    = f.fields_for :user_ban do |user_ban|
      .row.collapse#userBanFields
        .col-md-8.offset-md-2.mt-3
          .card.bg-light
            .card-body
              .row
                .col-sm-6
                  %h4 Ban information
                .col-sm-6
                  .form-group
                    - opt_vals = UserBan.reasons.map { |b| [b.humanize, b]  }
                    = user_ban.select :reason, options_for_select(opt_vals), {prompt: "Reason for ban"}, class: 'form-control userBanReasonSelect'
              .form-group
                = user_ban.label :description, "Description/notes"
                = user_ban.text_area :description, class: "form-control"


%hr{style: "margin-top: 60px;"}
.mt-4.mb-4.row
  .col-sm-6.mb-4
    = link_to "Delete #{@user.email}!", admin_user_url(@user.to_param), method: :delete, data: { confirm: "Are you sure?" }, class: "btn btn-danger less-strong"
  .col-sm-6.mb-4
    .text-right
      %a.gray-link{ href: "#forceMergeEmail", data: { toggle: "collapse", target: "#forceMergeEmail" } }
        Force merge with another email
    #forceMergeEmail.collapse.mt-2
      .card
        .card-body
          %p
            Add another email to this user.
          %p
            %span.text-danger WARNING
            this does not send a confirmation email or check that they have access to the email you merge with.
          %p
            %span.text-warning We can <strong>not</strong> undo this.
          = form_for [:admin, @user] do |f|
            .row.mt-2
              .col-md-8
                .form-group
                  = email_field_tag :force_merge_email, "", placeholder: "Email to merge", class: "form-control"
                  %small.less-strong Email must be another user account on Bike Index
              .col-md-4
                = f.submit "Merge", class: 'btn btn-outline-danger'
