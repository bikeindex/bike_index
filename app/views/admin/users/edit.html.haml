.row
  .col-md-6
    %h1
      %small
        Editing
      = @user.display_name
      - if display_dev_info?
        %em.small.less-strong.only-dev-visible
          id: #{@user.id}
    %table.table-list
      %tbody
        %tr
          %td
            Donor
          %td
            - if @user.donor?
              <span class="donor-icon">D</span><span class="less-strong">onor</span>
              - if @user.paid_org?
                %br
            - if @user.paid_org?
              <span class="less-strong">Paid</span> <span class="paid-org-icon">O</span><span class="less-strong">rganization member</span>
        %tr
          %td
            Email: Newsletters
          %td
            = check_mark if @user.notification_newsletters
        %tr
          %td
            Vendor terms?
          %td
            - if @user.when_vendor_terms_of_service.present?
              %span.convertTime.preciseTime
                = l @user.when_vendor_terms_of_service, format: :convert_time
        %tr
          %td
            Email: Unstolen
          %td
            = check_mark if @user.notification_unstolen
        %tr
          %td
            Created
          %td.convertTime.preciseTime
            = l @user.created_at, format: :convert_time
        %tr
          %td
            Updated
          %td.convertTime.preciseTime
            = l @user.updated_at, format: :convert_time
        %tr
          %td
            Last&nbsp;login
          %td
            - if @user.last_login_at.present?
              %span.convertTime.preciseTime
                = l @user.last_login_at, format: :convert_time
            - if @user.last_login_ip.present?
              %small.less-strong
                = @user.last_login_ip
  .col-md-6.mt-auto
    %table.table-list
      %tr
        %td
          Confirmed?
        %td
          - if @user.confirmed?
            = check_mark
      %tr
        %td
          email
        %td
          = @user.email
          - if @user.secondary_emails.any?
            %small
              = @user.secondary_emails.join(", ")
      %tr
        %td
          Name
        %td
          = @user.name
      %tr
        %td
          Photo
        %td
          - if @user.avatar?
            = @user.avatar
      %tr
        %td
          Social
        %td
          %small
            - if @user.show_bikes?
              = link_to "Bike Index profile page", "/users/#{@user.username}", class: "gray-link"
              - if @user.twitter.present?
                %br
            - if @user.twitter.present?
              Twitter: #{link_to @user.twitter, "https://twitter.com/#{@user.twitter}"}
      %tr
        %td
          Ambassador?
        %td
          = check_mark if @user.ambassador?
      %tr
        %td
          Phone
        %td
          - display_phone = @user.phone.present?
          - if display_phone || @user.user_phones.any?
            %ul
              - @user.user_phones.each do |user_phone|
                %li
                  = phone_display(user_phone.phone)
                  %small.less-strong{ class: user_phone.confirmed? ? "text-success" : "text-warning" }
                    = user_phone.confirmed? ? "confirmed" : "unconfirmed"
                  - if display_phone && Phonifyer.phonify(user_phone.phone) == Phonifyer.phonify(@user.phone)
                    - display_phone = false
              - if display_phone
                %li
                  = phone_display(@user.phone)
                  %small.less-strong.text-warning unconfirmed
      %tr
        %td
          Website
        %td
          = @user.website
      %tr
        %td
          City
        %td
          = @user.city

- if @user.ambassador?
  %h2 Ambassador Tasks
  - ambassador = Ambassador.find(@user.id)
  %p
    %strong= "#{ambassador.progress_count} complete"

  %table.table.table-striped.table-bordered.ambassador-tasks-table
    %thead.small-header.thead-light
      %tr
        %th Task
        %th Completed at
    %tbody
      - ambassador.ambassador_task_assignments.each do |task|
        %tr
          %td
            %strong= task.title
          %td
            - if task.completed_at
              %span.convertTime= l task.completed_at, format: :convert_time
.row.mt-4
  .col-md-6
    %h4
      User has #{ pluralize(@bikescount, "bike") }
  .col-md-6.text-right
    = link_to "Show all user bikes", admin_bikes_path(user_id: @user.id)

= render partial: "admin/bikes/table", locals: { bikes: @bikes }

%h4.mt-4
  Donations/payments
.full-screen-table
  %table.table.table-striped.table-bordered.table-sm
    %thead
      %th
        Date
      %th
        Amount
      %th
        Payment?
    - @user.payments.reorder(created_at: :desc).each do |payment|
      %tr
        %td
          = link_to l(payment.created_at, format: :convert_time), admin_payment_path(payment), class: "convertTime"
          %small.convertTimezone.preciseTime
        %td
          = payment.amount
        %td
          = payment.display_kind

.row
  .col-md-6
    %h4.mt-4
      = @user.memberships.count
      Memberships
- if @user.memberships.count > 0
  = render partial: "/admin/memberships/table", locals: { memberships: @user.memberships }


%h4.mt-4 User emails
.full-screen-table
  %table.table.table-striped.table-bordered.table-sm
    %thead
      %th
        Created&nbsp;<small class="convertTimezone"></small>
      %th
      %th
        Confirmed
      %th
        Primary
      %th
        Old User Id
    %tbody
      - @user.user_emails.each do |user_email|
        %tr
          %td
            .less-strong-hold
              %span.less-strong-right.medium-screens
                = user_email.id
              %span.convertTime
                = l user_email.created_at, format: :convert_time
          %td= user_email.email
          %td
            = check_mark if user_email.confirmed?
          %td
            = check_mark if user_email.primary?
          %td
            = user_email.old_user_id

%hr.mt-4
- mailchimp_datum = @user.mailchimp_datum
%h4
  Mailchimp data
  - if mailchimp_datum.present?
    %em.small
      %a.small{href: ".mailchimpRawData", "aria-expanded" => "false", "data-toggle" => "collapse"}
        show raw data
- if mailchimp_datum.blank?
  %p No Mailchimp data
- else
  .row
    .col-md-6
      %table.table-list
        %tbody
          - if display_dev_info?
            %tr.only-dev-visible.collapse.mailchimpRawData
              %td.small ID
              %td.small= mailchimp_datum.id
          %tr
            %td Status
            %td= @user.mailchimp_datum.status
          %tr
            %td Lists
            %td= @user.mailchimp_datum.lists.join(", ")
          %tr
            %td Mailchimp updated
            %td
              - if mailchimp_datum.mailchimp_updated_at.present?
                %span.convertTime
                  = l(mailchimp_datum.mailchimp_updated_at, format: :convert_time)
          %tr.collapse.small.mailchimpRawData
            %td Feedbacks
            %td= safe_join(mailchimp_datum.feedbacks.map { |f| link_to(f.humanized_kind, admin_feedback_path(f), class: "small") }, ", ")
    .col-md-6
      .collapse.small.mailchimpRawData= pretty_print_json(mailchimp_datum.data)



%hr.mt-4
%h4 Edit
= form_for [:admin, @user] do |f|
  - if @user.errors.any?
    = render partial: "/shared/errors", locals: { name: "User", obj: @user }
  .row.mt-4
    .col-md-6
      .form-group
        = f.label :name
        = f.text_field :name, class: "form-control"
    .col-md-6
      .form-group
        = f.label :email
        = f.email_field :email, class: "form-control"
  .row
    .col-md-6
      .form-group
        = f.label :username
        = f.text_field :username, class: "form-control"
    .col-md-6
      .form-group
        = f.label :secondary_emails
        = text_area_tag :secondary_emails, @user.secondary_emails.join(", "), disabled: true, rows: 1, class: "form-control"
  .row
    .col-md-6
      .form-group
        = f.label :phone
        = f.text_field :phone, class: "form-control"
    .col-lg-3.col-6
      .form-group
        .form-check
          = f.check_box :confirmed, disabled: @user.confirmed, class: "form-check-input"
          = f.label :confirmed, class: "form-check-label"
      .form-group
        .form-check
          = f.check_box :banned, class: "form-check-input"
          = f.label :banned, class: "form-check-label"
      .form-group
        .form-check.form-check-inline
          = f.check_box :can_send_many_stolen_notifications, class: "form-check-input"
          = f.label :can_send_many_stolen_notifications, class: "form-check-label"
    .col-lg-3.col-6
      .form-group
        .form-check.form-check-inline
          = f.check_box :superuser, class: "form-check-input"
          = f.label :superuser, class: "form-check-label"
      .form-group
        - if display_dev_info?
          .form-check.form-check-inline.only-dev-visible
            = f.check_box :developer, class: "form-check-input"
            = f.label :developer, class: "form-check-label"
    .col-6
      .form-group.mt-2
        = f.submit 'Save', class: 'btn btn-success'

%hr{ style: "margin-top: 60px;" }
.mt-4.mb-4.row
  .col-sm-6.mb-4
    = link_to "Delete #{@user.email}!", admin_user_url(@user.to_param), method: :delete, data: { confirm: "Are you sure?" }, class: "btn btn-danger less-strong"
  .col-sm-6.mb-4
    .text-right
      %a.gray-link{ href: "#forceMergeEmail", data: { toggle: "collapse", target: "#forceMergeEmail" } }
        Force merge with another email
    #forceMergeEmail.collapse.mt-2
      .card
        .card-body
          %p
            Add another email to this user.
          %p
            %span.text-danger WARNING
            this does not send a confirmation email or check that they have access to the email you merge with.
          %p
            %span.text-warning We can <strong>not</strong> undo this.
          = form_for [:admin, @user] do |f|
            .row.mt-2
              .col-md-8
                .form-group
                  = email_field_tag :force_merge_email, "", placeholder: "Email to merge", class: "form-control"
                  %small.less-strong Email must be another user account on Bike Index
              .col-md-4
                = f.submit "Merge", class: 'btn btn-outline-danger'
