- blogs ||= @blogs
- skip_kind ||= false
- tags_no_link ||= false

.full-screen-table
  %table.table.table-striped.table-bordered.table-sm
    %thead.thead-light
      %th= sortable "created_at"
      %th.d-none.d-lg-table-cell= sortable "user_id", "Creator"
      %th.small.d-none.d-lg-table-cell= sortable "updated_at"
      %th= sortable "title", "Content"
      - unless skip_kind
        %th Kind
      %th Language
      %th= sortable "published_at"
    %tbody
      - tags_param = params[:search_tags] || []
      - blogs.each do |blog|
        %tr
          %td
            %small.convertTime
              = l blog.created_at, format: :convert_time
            - if display_dev_info?
              %small.less-strong-right.only-dev-visible
                = blog.id
          %td.d-none.d-lg-table-cell
            = blog.user&.name || blog.user&.email
          %td
            %small.convertTime= l blog.updated_at, format: :convert_time
          %td
            %p.blog-index
              = link_to blog.title, edit_admin_news_url(blog)
              %br
              = blog.body_abbr.html_safe if blog.body_abbr
              - if blog.content_tag_names.any?
                %small.d-block
                  %span.less-strong Tags:
                  - if tags_no_link
                    = blog.content_tag_names.join(", ")
                  - else
                    = safe_join(blog.content_tags.name_ordered.map { |c| link_to(c.name, sortable_search_params.merge(search_tags: tags_param + [c.to_param]), class: "less-strong") }, ", ")
          - unless skip_kind
            %td
              - if !blog.blog?
                %span.text-info= blog.kind.humanize
          %td
            = t(blog.language, scope: [:locales])
          %td
            - if blog.published? && blog.published_at.present?
              %small.convertTime= l blog.published_at, format: :convert_time
