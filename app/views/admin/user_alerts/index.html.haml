.admin-subnav
  .col-md-5
    %h1
      User Alerts
  .col-md-7
    %ul
      %li.nav-item.dropdown
        %a.nav-link.dropdown-toggle{ href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@activeness != "all" ? "active" : "") }
          - if @activeness == "all"
            Active and Inactive
          - else
            = @activeness.titleize
        .dropdown-menu
          = link_to "Active and Inactive", url_for(sortable_search_params.merge(search_activeness: nil)), class: "dropdown-item #{@activeness == 'all' ? 'active' : '' }"
          = link_to "Only Active", url_for(sortable_search_params.merge(search_activeness: "active")), class: "dropdown-item #{@activeness == 'active' ? 'active' : '' }"
          = link_to "Only Inactive", url_for(sortable_search_params.merge(search_activeness: "inactive")), class: "dropdown-item #{@activeness == 'inactive' ? 'active' : '' }"
          .dropdown-divider
          = link_to "Resolved", url_for(sortable_search_params.merge(search_activeness: "resolved")), class: "dropdown-item #{@activeness == 'resolved' ? 'active' : '' }"
          = link_to "Dismissed", url_for(sortable_search_params.merge(search_activeness: "dismissed")), class: "dropdown-item #{@activeness == 'dismissed' ? 'active' : '' }"
      %li.nav-item.dropdown
        %a.nav-link.dropdown-toggle{ href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@kind != "all" ? "active" : "") }
          #{@kind.titleize} #{@kind == "all" ? "kinds" : "kind"}
        .dropdown-menu
          = link_to "All kinds", url_for(sortable_search_params.merge(search_kind: nil)), class: "dropdown-item #{@kind == 'all' ? 'active' : '' }"
          .dropdown-divider
          - UserAlert.kinds.each do |kind|
            = link_to "#{kind.humanize} kind", url_for(sortable_search_params.merge(search_kind: kind)), class: "dropdown-item #{@kind == kind ? 'active' : '' }"
      %li.nav-item
        = link_to "Notified", url_for(sortable_search_params.merge(search_with_notification: !@with_notification)), class: "nav-link #{@with_notification ? 'active' : ''}"
      %li.nav-item
        = link_to "Render kind counts", url_for(sortable_search_params.merge(search_kind_counts: !@render_kind_counts)), class: "nav-link #{@render_kind_counts ? 'active' : ''}"
      %li.nav-item
        = link_to "graph", url_for(sortable_search_params.merge(render_chart: !@render_chart)), class: "nav-link #{@render_chart ? 'active' : ''}"
  = render partial: "/shared/admin_current_header", locals: { viewing: "User Alerts" }

-# Only render stacked kinds if rendering type counts
- colors = ["#B60205", "#D93F0B", "#FBCA04", "#0E8A16", "#006B75", "#1D76DB", "#0052CC", "#5319E7", "#D4C5F9", "#2C3E50", "#F9D0C4", "#C2E0C6", "#C5DEF5", "#7DCABB"]
- if @render_chart
  - if @render_kind_counts
    - user_alert_counts = UserAlert.kinds.map { |k| {name: UserAlert.kind_humanized(k), data: time_range_counts(collection: matching_user_alerts.where(kind: k), column: @time_range_column)} }
  - else
    - user_alert_counts = time_range_counts(collection: matching_user_alerts)
  = column_chart user_alert_counts, stacked: true, thousands: ",", defer: true, colors: colors

- if @render_kind_counts
  .row.mt-4.mb-4
    .col-md-6.offset-md-3
      .card
        .card-body
          %h3 Kinds
          %table.table-list.wide-definition
            %tbody
              - UserAlert.kinds.each_with_index do |kind, index|
                - count = matching_user_alerts.where(kind: kind).count
                - next unless count > 0
                %tr
                  %td
                    - color = colors[index]
                    %div{style: "width: 1em; height: 1em; background: #{color}; float: right; margin-left: 0.4rem;"}
                    = link_to UserAlert.kind_humanized(kind), url_for(sortable_search_params.merge(search_kind: kind))
                  %td
                    = admin_number_display(count)
              - nil_count = matching_user_alerts.where(kind: nil).count
              - if nil_count > 0
                %tr
                  %td
                    Nil
                  %td
                    = admin_number_display(nil_count)

= render partial: "/shared/period_select"

.row.mb-4.mt-4
  .col-sm-6.col-lg-4.mt-4
    = number_with_delimiter(matching_user_alerts.count)
    = "matching User Alert".pluralize(matching_user_alerts.count)
    %em
      = humanized_time_range_column(@time_range_column)
      = humanized_time_range(@time_range)
  .col-lg-4
    = paginate @user_alerts, views_prefix: "admin"

= render partial: "/admin/user_alerts/table", locals: {render_sortable: true, user_alerts: @user_alerts, skip_user: @user.present?}
