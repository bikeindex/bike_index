- render_method = ParamsNormalizer.boolean(params[:search_render_method])

.admin-subnav
  .col-md-5
    %h1
      Payments
  .col-md-7
    %ul
      %li.nav-item
        = link_to "New payment", new_admin_payment_url, class: "nav-link"
      %li.nav-item
        = link_to "Show method", url_for(sortable_search_params.merge(search_render_method: !render_method)), class: "nav-link small #{render_method ? 'active' : ''}"
      %li.nav-item.dropdown.dropleft
        %a.nav-link.dropdown-toggle{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@incompleteness != "paid" ? "active" : "")}
          - if @kind.blank?
            All kinds
          - else
            #{@kind.titleize} only
        .dropdown-menu
          = link_to "All kinds", url_for(sortable_search_params.merge(search_kind: "all")), class: "dropdown-item #{@kind.present? ? 'active' : ''}"
          .dropdown-divider
          - Payment.kinds.each do |kind|
            = link_to "#{kind.titleize} only", url_for(sortable_search_params.merge(search_kind: kind)), class: "dropdown-item #{@kind == kind ? 'active' : ''}"

      %li.nav-item.dropdown.dropleft
        %a.nav-link.dropdown-toggle{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@incompleteness != "paid" ? "active" : "")}
          - if @incompleteness == "all"
            Paid and Incomplete
          - else
            #{@incompleteness.titleize} only
        .dropdown-menu
          = link_to "Paid and Incomplete", url_for(sortable_search_params.merge(search_incompleteness: "all")), class: "dropdown-item #{@incompleteness == 'all' ? 'active' : ''}"
          .dropdown-divider
          = link_to "Paid only", url_for(sortable_search_params.merge(search_incompleteness: "paid")), class: "dropdown-item #{@incompleteness == 'paid' ? 'active' : ''}"
          = link_to "Incomplete only", url_for(sortable_search_params.merge(search_incompleteness: "incomplete")), class: "dropdown-item #{@incompleteness == 'incomplete' ? 'active' : ''}"
      %li.nav-item
        = link_to "graph", admin_payments_path(sortable_search_params.merge(render_chart: !@render_chart)), class: "nav-link #{@render_chart ? 'active' : ''}"
  = render partial: "/shared/admin_current_header", locals: {viewing: "Payments"}

:ruby
  payments_counts = Payment.kinds.map do |kind|
    payments_of_kind = matching_payments.where(kind: kind)
    next unless payments_of_kind.count > 0
    {
      kind: kind,
      name: Payment.kind_humanized(kind),
      data: time_range_counts(collection: payments_of_kind),
      data_money: time_range_amounts(collection: payments_of_kind, convert_to_dollars: true),
      count: payments_of_kind.count,
      money: MoneyFormater.money_format(payments_of_kind.sum(:amount_cents)),
    }
  end.compact

- if @render_chart
  %h4.mt-2 Counts
  = column_chart payments_counts.map { |c| {name: c[:name], data: c[:data]} }, stacked: true, thousands: ","
  %h4.mt-2 Amounts
  = column_chart payments_counts.map { |c| {name: c[:name], data: c[:data_money]} }, stacked: true, thousands: ",", prefix: "$", round: 2

.mt-4.mb-4
  = render partial: "/shared/period_select"

.row.mb-4
  .col-sm
    %p.mt-2
      %strong
        = number_with_delimiter(matching_payments.count)
        = "matching payment".pluralize(matching_payments.count)
      %em
        = humanized_time_range_column(@time_range_column)
        = humanized_time_range(@time_range)
      %small
        for a total of
        = MoneyFormater.money_format(matching_payments.sum(:amount_cents))
  - if payments_counts.present?
    .col-sm
      .full-screen-table
        %table.table.table-striped.table-bordered.table-sm.text-center
          %thead
            - payments_counts.each do |payment_count|
              %th
                = payment_count[:name].pluralize
                - if params[:search_kind].present?
                  = link_to "view all kinds", admin_payments_path(sortable_search_params.merge(search_kind: "")), class: "small em"
                - else
                  = link_to "view", admin_payments_path(sortable_search_params.merge(search_kind: payment_count[:kind])), class: "small em"
          %tbody
            %tr
              - payments_counts.each do |payment_count|
                %td
                  %em.less-strong
                    #{number_with_delimiter(payment_count[:count])} -
                  #{payment_count[:money]}
                  - if payment_count[:name] == "payment" && payment_count[:count] > 0
                    %br
                    %small.text-warning There shouldn't be payments without invoices

.row
  .col-md-5
    = form_tag admin_payments_path, method: :get, class: "form-inline" do
      = render partial: "/shared/hidden_search_fields"
      = hidden_field_tag :search_render_method, params[:search_render_method]
      = hidden_field_tag :search_incompleteness, params[:search_incompleteness]
      .form-group.mr-2.mb-2
        = text_field_tag :query, params[:query], placeholder: "Search by referral", class: "form-control"
      = submit_tag "Search", name: "search", class: "btn btn-primary mb-2"


= paginate @payments, views_prefix: "admin"

= render partial: "table", locals: {payments: @payments, render_sortable: true, skip_paid_at: @incompleteness == "paid", render_method: render_method}

= paginate @payments, views_prefix: "admin"
