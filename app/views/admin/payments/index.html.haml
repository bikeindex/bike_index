.admin-subnav
  .col-md-5
    %h1
      Payments
  .col-md-7
    %ul
      %li.nav-item
        = link_to "New payment", new_admin_payment_url, class: "nav-link"
      %li.nav-item
        = link_to "graph", admin_payments_path(sortable_search_params.merge(render_chart: !@render_chart)), class: "nav-link #{@render_chart ? 'active' : ''}"

- if @render_chart
  :ruby
    payments_counts = Payment.kinds.map do |kind|
      payments_of_kind = matching_payments.where(kind: kind)
      {
        name: kind,
        data: time_range_counts(collection: payments_of_kind),
        count: payments_of_kind.count,
        sum: Payment.money_formatted(payments_of_kind.sum(:amount_cents)),
      }
    end

  .col-12.mt-2
    = column_chart payments_counts, stacked: true, thousands: ",", defer: true

.col-12.mb-4.mt-2
  .row.justify-content-end
    = render partial: "/shared/period_select"

.row.mb-4
  .col
    %h4
      = pluralize(@payments.total_count, "matching payment")
  .col
    .full-screen-table
      %table.table.table-striped.table-bordered.table-sm.text-center
        %thead
          - payments_counts.each do |payment_count|
            %th
              = payment_count.name
        %tbody
          %tr
            - theft_alert_plans.each do |theft_alert_plan|
              %td
                = matching_payments.where(theft_alert_plan: theft_alert_plan).count
= paginate @payments, views_prefix: "admin"


.full-screen-table
  %table.table.table-striped.table-bordered.sortable.table-sm
    %thead.thead-light
      %th
        = sortable "created_at", "Paid"
      %th
        = sortable "user_id"
      %th
        = sortable "organization_id"
      %th
        = sortable "invoice_id"
      %th
        = sortable "payment_method", "method"
      %th
        = sortable "amount_cents", "Amount"
    %tbody
      - @payments.each do |payment|
        %tr
          %td
            %a.convertTime{ href: edit_admin_payment_path(payment) }
              = l payment.created_at, format: :convert_time
          %td
            - if payment.user.present?
              = link_to payment.user.display_name, edit_admin_user_path(payment.user)
            - elsif payment.email.present?
              = payment.email
              %small.less-strong
                no user

          %td
            - if payment.organization.present?
              = link_to payment.organization.short_name, admin_organization_path(payment.organization)
          %td
            - if payment.invoice.present? && payment.organization.present?
              #{link_to payment.invoice.display_name, edit_admin_organization_invoice_path(organization_id: payment.organization.to_param, id: payment.invoice.id)}
              - if payment.invoice.subscription_start_at
                %small.convertTime
                  = l payment.invoice.subscription_start_at, format: :convert_time
          %td
            %small
              - if payment.stripe?
                = link_to "Stripe", "https://dashboard.stripe.com/payments/#{payment.stripe_id}"
              - else
                = payment.payment_method.humanize
          %td
            = payment.amount_formatted
= paginate @payments, views_prefix: "admin"
