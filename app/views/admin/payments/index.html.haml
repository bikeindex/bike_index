.admin-subnav
  .col-md-5
    %h1
      Payments
  .col-md-7
    %ul
      %li.nav-item
        = link_to "New payment", new_admin_payment_url, class: "nav-link"
      %li.nav-item
        = link_to "graph", admin_payments_path(sortable_search_params.merge(render_chart: !@render_chart)), class: "nav-link #{@render_chart ? 'active' : ''}"
:ruby
  payments_counts = Payment.kinds.map do |kind|
    payments_of_kind = matching_payments.where(kind: kind)
    next unless payments_of_kind.count > 0
    {
      kind: kind,
      name: Payment.display_kind(kind),
      data: time_range_counts(collection: payments_of_kind),
      data_money: time_range_amounts(collection: payments_of_kind),
      count: payments_of_kind.count,
      money: Payment.money_formatted(payments_of_kind.sum(:amount_cents)),
    }
  end.compact

- if @render_chart
  %h4.mt-2 Counts
  = column_chart payments_counts.map { |c| { name: c[:name], data: c[:data] } }, stacked: true, thousands: ",", defer: true
  %h4.mt-2 Amounts
  = column_chart payments_counts.map { |c| { name: c[:name], data: c[:data_money] } }, stacked: true, thousands: ",", prefix: "$", round: 2, defer: true


= render partial: "/shared/period_select"

.row.mb-4
  .col-sm
    %h4.mt-2
      = pluralize(number_with_delimiter(matching_payments.count), "matching payment")
      %small
        for a total of
        = Payment.money_formatted(matching_payments.sum(:amount_cents))
  - if payments_counts.present?
    .col-sm
      .full-screen-table
        %table.table.table-striped.table-bordered.table-sm.text-center
          %thead
            - payments_counts.each do |payment_count|
              %th
                = payment_count[:name].pluralize
                - if params[:search_kind].present?
                  = link_to "view all kinds", admin_payments_path(sortable_search_params.merge(search_kind: "")), class: "small em"
                - else
                  = link_to "view", admin_payments_path(sortable_search_params.merge(search_kind: payment_count[:kind])), class: "small em"
          %tbody
            %tr
              - payments_counts.each do |payment_count|
                %td
                  %em.less-strong
                    #{number_with_delimiter(payment_count[:count])} -
                  #{payment_count[:money]}
                  - if payment_count[:name] == "payment" && payment_count[:count] > 0
                    %br
                    %small.text-warning There shouldn't be payments without invoices

= paginate @payments, views_prefix: "admin"


.full-screen-table
  %table.table.table-striped.table-bordered.sortable.table-sm
    %thead.thead-light
      %th
        = sortable "created_at", "Paid"
      %th
        = sortable "user_id"
      %th
        = sortable "kind"
      %th
        %small= sortable "organization_id"
      %th
        %small= sortable "invoice_id"
      %th
        %small= sortable "payment_method", "method"
      %th
        = sortable "amount_cents", "Amount"
    %tbody
      - @payments.each do |payment|
        %tr
          %td
            %a.convertTime{ href: edit_admin_payment_path(payment) }
              = l payment.created_at, format: :convert_time
          %td
            - if payment.user.present?
              = link_to payment.user.display_name, edit_admin_user_path(payment.user)
            - elsif payment.email.present?
              = payment.email
              %small.less-strong
                no user
          %td
            - if payment.theft_alert?
              = link_to "Promoted alert", edit_admin_theft_alert_path(payment.theft_alert)
            - else
              = payment.display_kind
          %td
            - if payment.organization.present?
              = link_to payment.organization.short_name, admin_organization_path(payment.organization)
          %td
            - if payment.invoice.present? && payment.organization.present?
              #{link_to payment.invoice.display_name, edit_admin_organization_invoice_path(organization_id: payment.organization.to_param, id: payment.invoice.id)}
              - if payment.invoice.subscription_start_at
                %small.convertTime
                  = l payment.invoice.subscription_start_at, format: :convert_time
          %td
            %small
              - if payment.stripe?
                = link_to "stripe", "https://dashboard.stripe.com/payments/#{payment.stripe_id}"
              - else
                = payment.payment_method.humanize.downcase
          %td
            = payment.amount_formatted
= paginate @payments, views_prefix: "admin"
