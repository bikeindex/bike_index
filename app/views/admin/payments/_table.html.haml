- render_sortable ||= false
- skip_user ||= false
- skip_paid_at ||= false
- skip_kind ||= false
- render_method ||= false

.full-screen-table
  %table.table.table-striped.table-bordered.sortable.table-sm
    %thead.thead-light
      %th
        = sortable "created_at", render_sortable: render_sortable
      - unless skip_paid_at
        %th.small
          = sortable "first_payment_date", "Paid", render_sortable: render_sortable
      - unless skip_user
        %th= sortable "user_id", render_sortable: render_sortable
      %th= sortable "referral_source", render_sortable: render_sortable
      - unless skip_kind
        %th
          = sortable "kind", render_sortable: render_sortable
      %th
        %small
          = sortable "organization_id", render_sortable: render_sortable
      %th
        %small
          = sortable "invoice_id", render_sortable: render_sortable
      - if render_method
        %th.small= sortable "payment_method", "method", render_sortable: render_sortable
      %th
        = sortable "amount_cents", "Amount", render_sortable: render_sortable
    %tbody
      - payments.each do |payment|
        %tr
          %td
            %a.convertTime{href: edit_admin_payment_path(payment)}
              = l payment.created_at, format: :convert_time
          - unless skip_paid_at
            %td
              - if payment.first_payment_date.present?
                %small.convertTime
                  = l payment.first_payment_date, format: :convert_time
          - unless skip_user
            %td
              = render partial: "/shared/admin_user_cell", locals: {email: payment.email, user: payment.user, render_search: render_sortable, cache: true}
          %td
            - if payment.referral_source.present?
              %code.small= payment.referral_source
              - if render_sortable
                %small= link_to search_emoji, url_for(sortable_search_params.merge(query: payment.referral_source))
          - unless skip_kind
            %td
              - if payment.theft_alert?
                = link_to "Promoted alert", edit_admin_theft_alert_path(payment.theft_alert)
              - else
                = payment.kind_humanized
              - if render_sortable
                %small= link_to search_emoji, url_for(sortable_search_params.merge(search_kind: payment.kind))
          %td
            - if payment.organization.present?
              = link_to payment.organization.short_name, admin_organization_path(payment.organization)
              - if render_sortable && current_organization.blank?
                %small= link_to search_emoji, url_for(sortable_search_params.merge(organization_id: payment.organization_id))
          %td
            - if payment.invoice.present? && payment.organization.present?
              #{link_to payment.invoice.display_name, edit_admin_organization_invoice_path(organization_id: payment.organization.to_param, id: payment.invoice.id)}
              - if payment.invoice.subscription_start_at
                %small.convertTime
                  = l payment.invoice.subscription_start_at, format: :convert_time
          - if render_method
            %td
              %small
                - if payment.stripe?
                  = link_to "stripe", "https://dashboard.stripe.com/payments/#{payment.stripe_id}"
                - else
                  = payment.payment_method.humanize.downcase
          %td
            = payment.amount_formatted
