.admin-subnav
  .col-md-12
    %h1
      Email Domain
      %strong #{@email_domain.domain}

.row.mt-4
  .col-md-6
    %table.table-list
      %tbody
        %tr
          %td
            Creator
          %td
            = render partial: "/shared/admin/user_cell", locals: {user: @email_domain.creator, user_id: @email_domain.creator_id}
        %tr.small
          %td
            Created
          %td
            %span.convertTime.preciseTime
              = l @email_domain.created_at, format: :convert_time
        %tr.small
          %td
            Updated
          %td
            %span.convertTime.preciseTime
              = l @email_domain.updated_at, format: :convert_time
        %tr.small
          %td
            Changed status at
          %td
            - if @email_domain.status_changed_after_create?
              %span.convertTime.preciseTime
                = l @email_domain.status_changed_at, format: :convert_time
        %tr
          %td TLD
          %td
            - if @matching_tld.present?
              = link_to @matching_tld.domain, admin_email_domain_path(@matching_tld.id)
            - elsif @email_domain.tld?
              %small.less-strong this is record is a TLD
            - else
              = @email_domain.tld
        %tr
          %td
            Extra
          %td
            = render partial: "data_details", locals: {email_domain: @email_domain}
        %tr
          %td
            Status
          %td
            - status_class = "text-danger" if @email_domain.status.match?("ban")
            - status_class = "text-warning font-weight-bold" if @email_domain.ignored?
            %span{class: status_class}
              = @email_domain.status_humanized
            - if @email_domain.ignored?
              %small.less-strong will not match any new users

  .col-md-6
    %table.table-list
      %tbody

        %tr.small
          %td
            Ban Blockers
          %td
            = @email_domain.has_ban_blockers? ? check_mark : cross_mark
            %small.ml-2
              - if @email_domain.auto_bannable?
                %span.text-warning auto bannable
              - else
                not auto banable
                - if @email_domain.below_email_count_blocker?
                  %em.ml-2{title: "NOTE: this also checks against notifications / 10"}
                    Below email min count (#{EmailDomain::EMAIL_MIN_COUNT})
                - if @email_domain.bike_count_blocker?
                  %em.ml-2 Bike count
                - if @email_domain.organization_role_blocker?
                  %em.ml-2 Org Roles
                - if @email_domain.calculated_subdomains.permitted.count > 0
                  %em.ml-2 Permitted subdomains


        %tr
          %td Spam score
          %td
            %strong
              #{@email_domain.spam_score} / 10
            %small.less-strong below #{EmailDomain::SPAM_SCORE_AUTO_BAN} is auto-bannable (with no blockers)
            %small.d-block
              %span
                %strong= admin_number_display(@email_domain.spam_score_our_records)
                our records,
              %span.ml-2
                %strong= admin_number_display(@email_domain.spam_score_domain_resolution)
                domain resolution,
              %span.ml-2
                %strong= admin_number_display(@email_domain.spam_score_sendgrid_validations)
                sendgrid

        %tr
          %td
            Bikes
          %td
            = link_to admin_number_display(@email_domain.bike_count), admin_bikes_path(search_domain: @email_domain.domain, render_chart: true)
            %small.ml-2
              POS:
              %strong= admin_number_display(@email_domain.data["bike_count_pos"])

        %tr.small
          %td
            BParam
          %td
            = admin_number_display(@email_domain.b_param_count)
        %tr
          %td
            Notifications
          %td
            = link_to admin_number_display(@email_domain.notification_count), admin_notifications_path(query: @email_domain.domain, render_chart: true)
        %tr
          %td
            Users
          %td
            = link_to admin_number_display(@email_domain.user_count), admin_users_path(search_domain: @email_domain.domain, render_chart: true)
            %small.ml-2
              Donors:
              = admin_number_display(@email_domain.data["user_count_donated"] || 0)


.row.mt-4.mb-4.pb-4
  .col-md-4.pt-3
    .only-dev-visible.small= pretty_print_json(@email_domain.data)
  .col-md-68.pt-3
    = render "form",
      email_domain: @email_domain,
      action: admin_email_domain_path(@email_domain),
      method: :patch,
      submit_label: "Save"



- if @subdomains.present?
  = render partial: "table", locals: {collection: @subdomains, render_sortable: false}
