- nav_header_list_items = capture_haml do
  %li.nav-item.dropdown
    %a.nav-link.dropdown-toggle{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@ignored == "active" ? "" : "active")}
      - if @ignored == "all"
        Ignored and not
      - else
        = @ignored.humanize
    .dropdown-menu
      - ignorable_options.each do |kind|
        = link_to kind.titleize, url_for(sortable_search_params.merge(search_ignored: kind)), class: "dropdown-item #{@ignored == kind ? 'active' : ''}"
  %li.nav-item.dropdown
    %a.nav-link.dropdown-toggle{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@status.present? ? "active" : "")}
      - if @status.blank?
        All statuses
      - else
        #{@status.titleize} only
    .dropdown-menu
      = link_to "All statuses", url_for(sortable_search_params.merge(search_status: nil)), class: "dropdown-item #{@status.present? ? '' : 'active'}"
      .dropdown-divider
      - searchable_statuses.each do |kind|
        = link_to "#{kind.titleize} only", url_for(sortable_search_params.merge(search_status: kind)), class: "dropdown-item #{@status == kind ? 'active' : ''}"
  %li.nav-item.dropdown
    %a.nav-link.dropdown-toggle{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@tld.present? ? "active" : "")}
      - if @tld.blank?
        TLD and subs
      - else
        = @tld.humanize
    .dropdown-menu
      = link_to "TLD and subs", url_for(sortable_search_params.merge(search_tld: nil)), class: "dropdown-item #{@tld.present? ? '' : 'active'}"
      .dropdown-divider
      - %w[only_tld only_subdomain].each do |kind|
        = link_to kind.titleize, url_for(sortable_search_params.merge(search_tld: kind)), class: "dropdown-item #{@tld == kind ? 'active' : ''}"
  %li.nav-item
    = link_to "New Email Domain", new_admin_email_domain_path, class: "nav-link"

- admin_search_form = capture_haml do
  .row.mt-4
    .col
      = form_tag admin_email_domains_path, method: :get, class: "form-inline" do
        = render partial: "/shared/hidden_search_fields"
        = hidden_field_tag :search_tld, params[:search_tld]
        .form-group.ml-auto.mr-2.mb-2
          = text_field_tag :query, params[:query], placeholder: "Search domains", class: "form-control"
        = submit_tag "Search", name: "search", class: "btn btn-primary mb-2"

- table_view = render partial: "table", locals: {collection: @email_domains, render_sortable: true}

= render partial: "/shared/admin/index_skeleton", locals: {collection: @email_domains, nav_header_list_items:, admin_search_form:, chart_collection: @render_chart && matching_email_domains}
