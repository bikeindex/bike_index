- nav_header_list_items = capture_haml do
  %li.nav-item.dropdown
    %a.nav-link.dropdown-toggle{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@status.present? ? "active" : "")}
      - if @status.blank?
        All statuses
      - elsif @status == "removed_or_sold"
        Removed or sold
      - else
        #{@status.titleize} only
    .dropdown-menu
      = link_to "All statuses", url_for(sortable_search_params.merge(search_status: nil)), class: "dropdown-item #{@status.present? ? '' : 'active'}"
      = link_to "Removed or sold", url_for(sortable_search_params.merge(search_status: "removed_or_sold")), class: "dropdown-item #{@status == 'removed_or_sold' ? 'active' : ''}"
      .dropdown-divider
      - (searchable_statuses - ['removed_or_sold']).each do |kind|
        = link_to "#{kind.titleize} only", url_for(sortable_search_params.merge(search_status: kind)), class: "dropdown-item #{@status == kind ? 'active' : ''}"

= render partial: "/shared/admin/index_skeleton", locals: {chart_collection: @render_chart && matching_marketplace_listings, nav_header_list_items:}
