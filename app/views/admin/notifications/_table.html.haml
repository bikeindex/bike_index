- render_sortable ||= false
- skip_user ||= false
- skip_bike ||= false
- skip_sender ||= false
- skip_error ||= false
- show_message_preview ||= false

- unless display_dev_info?
  <style>.only-dev-visible {display: none !important;} </style>

- if skip_user
  <style>.user-cell {display: none !important;} </style>
- if skip_bike
  <style>.bike-cell {display: none !important;} </style>
- if skip_sender
  <style>.sender-cell {display: none !important;} </style>
- if skip_error
  <style>.error-cell {display: none !important;} </style>
- unless show_message_preview
  <style>.message-preview {display: none !important;} </style>

.full-screen-table
  %table.table.table-striped.table-bordered.table-sm.without-exterior-border#recordsTable
    %thead.small-header.hidden-md-down
      %th
        = sortable "created_at", render_sortable: render_sortable
      %th.small
        = sortable "updated_at", render_sortable: render_sortable
      %th
        = sortable "kind", render_sortable: render_sortable
      %th.small Method
      %th.user-cell
        = sortable "user_id", render_sortable: render_sortable
      %th.small Delivered?
      %th.bike-cell
        = sortable "bike_id", render_sortable: render_sortable
      %th Object
      %th.sender-cell Sender
      %th.error-cell
        Delivery Errors
    %tbody
      - notifications.each do |notification|
        - cache(["admin_notifications_table-1", notification]) do
          %tr
            %td
              %span.convertTime
                = l(notification.created_at, format: :convert_time)
              %code.small.only-dev-visible= notification.id
            %td
              %small.convertTime
                = l(notification.updated_at, format: :convert_time)
            %td= notification.kind_humanized&.titleize
            %td
              %small.less-strong= notification.message_channel
            %td.user-cell
              - if notification.user_id.present?
                = render partial: "/shared/admin/user_cell", locals: {user: notification.user, email: notification.message_channel_target || notification.user&.email, render_search: render_sortable, cache: false}
              - else
                = notification.message_channel_target
                %small.less-strong no user
            %td.text-center
              = notification_delivery_display(notification.delivery_status)
            %td.bike-cell
              - if notification.bike_id.present?
                %code= link_to "#{notification.bike_id}", admin_bike_path(notification.bike_id), class: "less-strong"
                - if render_sortable && params[:search_bike_id].blank?
                  %small
                    = link_to search_emoji, admin_notifications_path(sortable_search_params.merge(search_bike_id: notification.bike_id)), class: "small"
            %td
              - if notification.notifiable.present?
                = link_to admin_path_for_object(notification.notifiable) do
                  = notification.notifiable.class.to_s.titleize
                  %code.text-link.small= "##{notification.notifiable_id}"
                -# TODO: include more previews
                - if notification.notifiable.is_a?(MarketplaceMessage)
                  - notification_text = notification.notifiable.body
                  %small.message-preview.d-block{title: notification_text}
                    = notification_text.truncate(100)
            %td.sender-cell
              - sender_display_name = notification.sender_display_name
              - if notification.sender.is_a?(User)
                = link_to sender_display_name, admin_user_path(notification.sender&.id)
              - else
                %span{class: (sender_display_name == "auto" ? "less-strong" : "")}
                  = sender_display_name
            %td.error-cell
              - if notification.delivery_error_spam?
                An Email sent to this address was marked as spam
              - elsif notification.delivery_error_invalid?
                Invalid email address
              - else
                = notification.delivery_error

