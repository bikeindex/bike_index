- render_sortable ||= false
- skip_user ||= false
- skip_bike ||= false
- skip_channel ||= false
- skip_sender ||= false

.full-screen-table
  %table.table.table-striped.table-bordered.table-sm.without-exterior-border#recordsTable
    %thead.small-header.hidden-md-down
      %th
        = sortable "created_at", render_sortable: render_sortable
      %th.small
        = sortable "updated_at", render_sortable: render_sortable
      %th
        = sortable "kind", render_sortable: render_sortable
      - unless skip_channel
        %th.small Method
      - unless skip_user
        %th
          = sortable "user_id", render_sortable: render_sortable
      %th.small Delivered?
      - unless skip_bike
        %th
          = sortable "bike_id", render_sortable: render_sortable
      %th Object
      - unless skip_sender
        %th Sender
    %tbody
      - notifications.each do |notification|
        %tr
          %td
            %span.convertTime
              = l(notification.created_at, format: :convert_time)
            - if display_dev_info?
              %code.small.only-dev-visible= notification.id
          %td
            %small.convertTime
              = l(notification.updated_at, format: :convert_time)
          %td= notification.kind_humanized&.titleize
          %td
            %small.less-strong= notification.message_channel
          - unless skip_user
            %td
              -# Avoid using calculated_email because it calculates in line rather than in the cached template
              = render partial: "/shared/admin_user_cell", locals: {user: notification.user, email: notification.user_id.present? ? nil : notification.calculated_email, render_search: render_sortable, cache: true}
          %td.text-center
            - if notification.delivered?
              %small.less-strong= check_mark
            - else
              %span.text-danger= notification.delivered?
          - unless skip_bike
            %td
              - if notification.bike_id.present?
                %code= link_to "#{notification.bike_id}", admin_bike_path(notification.bike_id), class: "less-strong"
                - if render_sortable && params[:search_bike_id].blank?
                  %small
                    = link_to search_emoji, admin_notifications_path(sortable_search_params.merge(search_bike_id: notification.bike_id)), class: "small"
          %td
            - if notification.notifiable.present?
              = link_to admin_path_for_object(notification.notifiable) do
                = notification.notifiable.class.to_s.titleize
                %code.text-link.small= "##{notification.notifiable_id}"

          %td
            - sender_display_name = notification.sender_display_name
            - if notification.sender.is_a?(User)
              = link_to sender_display_name, admin_user_path(notification.sender&.id)
            - else
              %span{class: (sender_display_name == "auto" ? "less-strong" : "")}
                = sender_display_name

