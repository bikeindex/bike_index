.admin-subnav
  .col-md-5
    %h1
      Impound Records
  .col-md-7
    %ul
      %li.nav-item
        %a.nav-link.dropdown-toggle{ href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@search_status == available_statuses.first ? "" : "active") }
          - if @search_status != "current" && ImpoundRecord.statuses.include?(@search_status)
            = ImpoundRecord.statuses_humanized[@search_status.to_sym]
          - elsif @search_status == "all"
            All statuses
          - else
            #{@search_status.titleize} records
        .dropdown-menu
          - available_statuses.each do |status|
            - if status != "current" && ImpoundRecord.statuses.include?(status)
              - display_status = ImpoundRecord.statuses_humanized[status.to_sym]
            - elsif status == "all"
              - display_status = "All statuses"
            - else
              - display_status = "#{status.titleize} records"
            - status_active = @search_status == status
            - status_link_params = sortable_search_params.merge(search_status: (status_active ? nil : status))
            = link_to display_status, url_for(status_link_params), class: "dropdown-item #{status_active ? 'active' : ''}"
            - if status == "resolved" # Add a divider before all
              .dropdown-divider
      %li.nav-item
        = link_to "with claims", url_for(sortable_search_params.merge(search_with_claims: !@with_claims)), class: "nav-link #{@with_claims ? 'active' : ''}"
      %li.nav-item
        = link_to "graph", url_for(sortable_search_params.merge(render_chart: !@render_chart)), class: "nav-link #{@render_chart ? 'active' : ''}"

  = render partial: "/shared/admin_current_header", locals: {viewing: "Impound Record"}

.row.mt-4.mb-4
  .col-sm-6
    = number_with_delimiter(@impound_records.total_count)
    matching Impound Records
    %em
      = humanized_time_range(@time_range)
    - if current_organization.present?
      %strong
        from
        = link_to current_organization.short_name, admin_organization_path(current_organization)

- if @render_chart
  = column_chart time_range_counts(collection: matching_impound_records), stacked: true, thousands: ","
  - unless params[:organization_id].present?
    .row.mt-4
      .col-md-6.offset-md-3
        %table.table-list.wide-definition
          %tbody
            - matching_impound_record_per_org_id = matching_impound_records.distinct.pluck(:organization_id).map { |id| [id, matching_impound_records.where(organization_id: id).count] }
            - matching_impound_record_per_org_id.sort_by { |id, number| number }.each do |id, number|
              - organization = Organization.unscoped.find_by_id(id) if id.present?
              %tr
                %td
                  - if organization.present?
                    = link_to organization.short_name, url_for(sortable_search_params.merge(organization_id: id)), class: (organization.deleted? ? "text-danger" : "")
                  - else
                    = link_to "no organization", url_for(sortable_search_params.merge(organization_id: "none")), class: "gray-link"
                %td
                  = number_with_delimiter(number)

.mt-4.mb-4
  = render partial: "/shared/period_select"

= render partial: "/shared/pagination", locals: {collection: @impound_records}

= render partial: "table", locals: {impound_records: @impound_records, render_sortable: true, skip_organization: current_organization.present?}
