.admin-subnav
  .col-md-5
    %h1
      Manage Bikes
  .col-md-7
    %ul
      %li.nav-item
        %a.nav-link#showStatusesSearch{href: "#", class: (@not_default_statuses ? "active" : "")}
          Search statuses
      %li.nav-item
        = link_to "multi-delete", url_for(sortable_search_params.merge(search_multi_delete: !@multi_delete)), class: "nav-link #{@multi_delete ? 'active' : ''}"
      %li.nav-item
        = link_to "Unknown Mnfgs", missing_manufacturer_admin_bikes_path, class: "nav-link #{@unknown ? 'active' : ''}"
      %li.nav-item
        - any_origin_active = @origin_search_type.blank?
        %a.nav-link.dropdown-toggle{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (any_origin_active ? "" : "active")}
          - if any_origin_active
            Origin
          - else
            = @origin_search_type.humanize
        .dropdown-menu
          = link_to "Any Origin", url_for(sortable_search_params.merge(search_origin: nil)), class: "dropdown-item #{any_origin_active ? 'active' : ''}"
          .dropdown-divider
          - Ownership.origins.each do |origin|
            - origin_active = @origin_search_type == origin
            = link_to origin.humanize, url_for(sortable_search_params.merge(search_origin: origin_active ? nil : origin)), class: "dropdown-item #{origin_active ? 'active' : ''}"
      %li.nav-item
        %a.nav-link.dropdown-toggle{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false", class: (@pos_search_type.present? ? "active" : "")}
          - if @pos_search_type.present?
            = @pos_search_type.humanize
          - else
            POS
        .dropdown-menu
          - ascend_active = @pos_search_type == "ascend_pos"
          = link_to "Ascend", url_for(sortable_search_params.merge(search_pos: ascend_active ? nil : "ascend_pos")), class: "dropdown-item #{ascend_active ? 'active' : ''}"
          - lightspeed_active = @pos_search_type == "lightspeed_pos"
          = link_to "Lightspeed", url_for(sortable_search_params.merge(search_pos: lightspeed_active ? nil : "lightspeed_pos")), class: "dropdown-item #{lightspeed_active ? 'active' : ''}"
          .dropdown-divider
          - any_pos_active = @pos_search_type == "any_pos"
          = link_to "Any POS", url_for(sortable_search_params.merge(search_pos: any_pos_active ? nil : "any_pos")), class: "dropdown-item #{any_pos_active ? 'active' : ''}"
          - no_pos_active = @pos_search_type == "no_pos"
          = link_to url_for(sortable_search_params.merge(search_pos: no_pos_active ? nil : "no_pos")), class: "dropdown-item #{no_pos_active ? 'active' : ''}" do
            <strong>Not</strong> POS
      %li.nav-item
        -# If looking at year or all period, graphs aren't detailed
        - search_period = %w[all year].include?(@period) ? "month" : @period
        = link_to "Detailed graphs", admin_graphs_path(sortable_search_params.merge(search_kind: "bikes", period: search_period)), class: "nav-link"
      %li.nav-item
        = link_to "graph", url_for(sortable_search_params.merge(render_chart: !@render_chart)), class: "nav-link #{@render_chart ? 'active' : ''}"

- if @render_chart
  .col-12.mt-2.mb-4
    - if @user || @search_email
      %hr
      %h2.mt-4.text-warning Can't graph with user search
    - else
      = column_chart time_range_counts(collection: available_bikes, column: "bikes.created_at"), stacked: true, thousands: ","

= render partial: "/shared/period_select"

- unless admin_nav_display_view_all
  %p
    There are currently #{number_with_delimiter(PublicImage.count)} bike images
    %em
      (#{PublicImage.where("created_at >= ?", Time.current.beginning_of_day).count} today)

  %p
    = number_with_delimiter(Bike.count)
    publicly registered,
    %em
      (#{Bike.where("created_at >= ?", Time.current.beginning_of_day).count} today)
    = number_with_delimiter(Ownership.where(current: true).where(claimed: true).count)
    are claimed

.row.mt-4
  .col-md-6.order-2.order-md-1
    .row
      = render partial: "/shared/admin_current_header", locals: {viewing: "Bikes"}
    - if current_organization.present?
      %p
        - if params[:search_only_creation_organization].present?
          Viewing only bikes created by
          %em= current_organization.name
          = link_to "view all associated bikes", url_for(sortable_search_params.merge(search_only_creation_organization: nil))
        - else
          Viewing all associated
          %em= current_organization.name
          bikes -
          = link_to "view only bikes created by", url_for(sortable_search_params.merge(search_only_creation_organization: true))
        \| #{link_to "org bikes view", organization_bikes_path(organization_id: current_organization.to_param)}
    - if @search_email.present?
      %p
        Viewing only bikes
        %strong sent to
        %code= @search_email
        = link_to "view sent to any emails", url_for(sortable_search_params.merge(search_email: nil)), class: "gray-link small"
    - if params[:search_manufacturer].present?
      %p
        - if @manufacturer.present?
          Made by
          = link_to @manufacturer.name, admin_manufacturer_path(@manufacturer)
          - if @manufacturer.official_organization.present?
            %small.less-strong
              (view #{link_to "official org", admin_organization_path(@manufacturer.official_organization.to_param)})
        - else
          No manufacturer found for
          %code
            = params[:search_manufacturer]
        = link_to "view all manufacturer bikes", url_for(sortable_search_params.merge(search_manufacturer: nil)), class: "gray-link small"
  .col-md-6.order-1.order-md-2
    = form_tag admin_bikes_path, method: :get, class: "" do
      = render partial: "/shared/hidden_search_fields"
      = hidden_field_tag :search_example, params[:search_example]

      = hidden_field_tag :search_pos, params[:search_pos]
      = hidden_field_tag :search_origin, params[:search_origin]
      = hidden_field_tag :search_only_creation_organization, params[:search_only_creation_organization]
      .search-statuses.mb-1{class: (@not_default_statuses ? "" : "collapse")}
        :javascript
          window.statusesSearchDefault = #{!@not_default_statuses};
        %p.mb-1
          %em Include bikes that are:
        .row
          .col-6
            .form-check
              = check_box_tag :search_status_stolen, true, @searched_statuses.include?("stolen"), class: "form-check-input"
              = label_tag :search_status_stolen, "Stolen"
            .form-check
              = check_box_tag :search_status_with_owner, true, @searched_statuses.include?("with_owner"), class: "form-check-input"
              = label_tag :search_status_with_owner do
                With owner
                %small.less-strong (not stolen)
            .form-check
              = check_box_tag :search_status_abandoned, true, @searched_statuses.include?("abandoned"), class: "form-check-input"
              = label_tag :search_status_abandoned, "Abandoned"
            .form-check
              = check_box_tag :search_status_impounded, true, @searched_statuses.include?("impounded"), class: "form-check-input"
              = label_tag :search_status_impounded, "Impounded"
            .form-check
              = check_box_tag :search_status_unregistered_parking_notification, true, @searched_statuses.include?("unregistered_parking_notification"), class: "form-check-input"
              = label_tag :search_status_unregistered_parking_notification, "Parking Notifications"

          .col-6
            .form-check
              - if @searched_statuses.include?("deleted_only")
                = check_box_tag :search_status_deleted_only, true, @searched_statuses.include?("deleted_only"), class: "form-check-input"
                = label_tag :search_status_deleted_only do
                  Deleted
                  %strong Only
              - else
                = check_box_tag :search_status_deleted, true, @searched_statuses.include?("deleted"), class: "form-check-input"
                = label_tag :search_status_deleted, "Deleted"
                = link_to "only", url_for(sortable_search_params.merge(search_status_deleted: nil, search_status_deleted_only: true)), class: "gray-link"
            .form-check
              - if @searched_statuses.include?("spam_only")
                = check_box_tag :search_status_spam_only, true, @searched_statuses.include?("spam_only"), class: "form-check-input"
                = label_tag :search_status_spam_only do
                  likely Spam
                  %strong Only
              - else
                = check_box_tag :search_status_spam, true, @searched_statuses.include?("spam"), class: "form-check-input"
                = label_tag :search_status_spam, "Likely Spam"
                = link_to "only", url_for(sortable_search_params.merge(search_status_spam: nil, search_status_spam_only: true)), class: "gray-link"
                - if current_user.su_option?(:no_hide_spam) && display_dev_info?
                  %small.less-strong.only-dev-visible
                    on by default because <code>su_option</code>
            .form-check
              - if @searched_statuses.include?("example_only")
                = check_box_tag :search_status_example_only, true, @searched_statuses.include?("example_only"), class: "form-check-input"
                = label_tag :search_status_example_only do
                  Test / Example
                  %strong Only
              - else
                = check_box_tag :search_status_example, true, @searched_statuses.include?("example"), class: "form-check-input"
                = label_tag :search_status_example, "Test / Example"
                = link_to "only", url_for(sortable_search_params.merge(search_status_example: nil, search_status_example_only: true)), class: "gray-link"

            - if @not_default_statuses
              - status_keys = sortable_search_params.keys.select { |k| k.match?(/\Asearch_status/) }
              .text-right.small
                = link_to "reset to default statuses", url_for(sortable_search_params.merge(status_keys.map { |k| [k, nil] }.to_h))

      .form-inline
        .form-group.ml-auto.mr-2.mb-2
          = text_field_tag :search_phone, params[:search_phone], placeholder: "Find by phone", class: "form-control"
        .form-group.mr-2.mb-2
          = text_field_tag :search_email, params[:search_email], placeholder: "Search bikes by email", class: "form-control"
        = submit_tag "Search", name: "search", class: "btn btn-primary mb-2"

-# %code= @searched_statuses
-# %pre.small= pretty_print_json(sortable_search_params.as_json)

= render partial: "/shared/pagination", locals: {collection: @bikes, count: @bikes.total_count}

= render partial: "/admin/bikes/table", locals: {render_sortable: true, render_multi_check: @multi_delete}

= render partial: "/shared/pagination", locals: {collection: @bikes, count: @bikes.total_count, name: "Bike", skip_total: true}
