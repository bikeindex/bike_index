-# Requires collection
-# total_count is pagination method. Handle non-paginated collections, in case this is used to display count and time range
- count ||= defined?(collection.total_count) ? collection.total_count : collection.count

- skip_total ||= false
- skip_today ||= false
- skip_pagination ||= false
-# Override to enable converting "Created" to "Imported", etc
- humanized_time_range_column_override ||= nil
-# Currently only used in admin, but worth preparing for the future
- views_prefix ||= controller_namespace == "admin" ? "admin" : nil
- viewing ||= collection.table_name.humanize

.row.mt-4.mb-4
  - unless skip_total
    .col-md-5
      %p.pagination-number
        %strong= number_with_delimiter(count)
        Matching #{viewing.pluralize(count)}

        - if defined?(@time_range) && @period != "all"
          %em
            - if defined?(@time_range_column)
              %strong
                - if humanized_time_range_column_override.present?
                  = humanized_time_range_column_override
                - else
                  = humanized_time_range_column(@time_range_column)
            = humanized_time_range(@time_range)
        - elsif !skip_total && defined?(collection.total_count)
          %em.less-strong
            (#{number_with_delimiter(collection.where("#{collection.table_name}.created_at >= ?", Time.current.beginning_of_day).total_count)} today)
  - unless skip_pagination
    .pagination-flex.justify-content-md-end{class: (skip_total ? "col-12" : "col-md-7")}
      = paginate collection, views_prefix: views_prefix

      - if views_prefix == "admin" && count > @per_page.to_i
        - per_pages = [10, 25, 50, 100, @per_page.to_i].uniq.sort
        = select_tag :per_page_select, options_for_select(per_pages.map { |i| ["#{i} / page", i] }, selected: @per_page), {class: "form-control per-page-select"}
