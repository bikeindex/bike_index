%p
  We provide a way to add bikes via JSON posts to our API.

%p
  Here are the things that need to be sent in the request:

%article.code
  %table.table
    %tbody
      %tr
        %td
          %code
            organization_slug
        %td
          string
        %td
          The slug for the organization registering the bike.
      %tr
        %td
          %code
            access_token
        %td
          string
        %td
          The access token for the organization registering the bike.
      %tr
        %td
          %code
            bike
        %td
          hash
        %td
          An object containing key value pairs of the bike's attributes
      %tr
        %td
          %code
            stolen_record
        %td
          hash
        %td
          Optional. An object with information about the bike theft.
      %tr
        %td
          %code
            components
        %td
          array
        %td
          Optional. An array of objects with attributes for the bike's components.

          
      
%h3#org_access
  Organization and access tokens

%p
  You have to submit an organization and an access token to post bikes to the Index.

%p
  We provide a test organization to add bikes via our API, so you can get started and try adding bikes without having an organization access token.

%article
  .alert
    Test bikes behave like normal bikes on the Index in most ways. You can view them and you can edit them if the owner_email is the email you are logged in with. There are some important differences though:
    %ul.key-differences
      %li
        No email is sent when they are created
      %li
        Are not visible in searches
      %li
        They're deleted every day or so.

- org = Organization.find_by_name('Example organization')


%dl.dl-horizontal.dl-wider-dt
  %dt#example_organization{ data: {slug: org.slug, token: org.access_token}}
    Test organization slug
  %dd
    = org.slug
  %dt
    Access token
  %dd
    = org.access_token

%h3#bike_hash
  Bike object (hash)

%p
  The following keys are required for a valid
  %code
    bike

%article.code
  %table.table
    %tbody
      %tr
        %td
          %code
            serial_number
        %td
          string
        %td
          The bike's serial. Set to "absent" if the bike doesn't have a serial number.
      %tr
        %td
          %code
            manufacturer
        %td
          string
        %td
          The name of the #{ link_to "frame manufacturer", "#manufacturers_ref", class: "scroll-to-ref"}.
      %tr
        %td
          %code
            color
        %td
          string
        %td
          The color of the frame
      %tr
        %td
          %code
            rear_wheel_bsd
        %td
          integer
        %td
          Rear wheel size, the tire's #{link_to "BSD", "#wheel_sizes_ref", class: "scroll-to-ref"}
      %tr
        %td
          %code
            rear_tire_narrow
        %td
          boolean
        %td
          Whether the tire width is less than 32mm
      %tr
        %td
          %code
            owner_email
        %td
          string
        %td
          email that should receive the registration

%article.code
  %p.code-label
    Basic post

  - request_url = @root + api_v1_bikes_path
  %pre
    :plain
      $.ajax({
        type: "POST",
        url: "#{request_url}",
        data: {
          "organization_slug": "#{org.slug}",
          "access_token": "#{org.access_token}",
          "bike": {
            "serial_number": "XOXO <3",
            "manufacturer": "Surly",
            "color": "Blue",
            "frame_model": "Cross Check",
            "rear_wheel_bsd": 622,
            "rear_tire_narrow": false,
            "owner_email": "new_bike_owner@bikeindex.org"
          }
        },
        success: function(data, textStatus, jqXHR) {
          $('#bike_basic').text(JSON.stringify(data,undefined,2))
        }
      });
  %p.code-label
    Response
  %pre#bike_basic{ data: {url: request_url }}
    - if Rails.env.production?
      :plain
        {
          "bike": {
            "web_url": "#{link_to "https://bikeindex.org/bikes/1520", "https://bikeindex.org/bikes/1520"}",
            "api_url": "#{ link_to "https://bikeindex.org/api/v1/bikes/1520", "https://bikeindex.org/api/v1/bikes/1520"}"
          }
        }
%p
  The 
  %code
    bike
  object accepts some optional additional attributes. Include them if you want!
%article.code
  %table.table
    %tbody
      %tr
        %td
          %code
            description
        %td
          text
        %td
          A description of the bike. This is searched, so it's a good idea add any distinguishing features
      %tr
        %td
          %code
            year
        %td
          integer
        %td
          The model year of the bike's frame
      %tr
        %td
          %code
            cycle_type_slug
        %td
          string
        %td
          Can be any of the names from the list of #{link_to "cycle_types", "#cycle_types_ref", class: "scroll-to-ref"}. Defaults to "bike"
      %tr
        %td
          %code
            frame_material
        %td
          string
        %td
          The type of material the frame is made from, chosen from #{link_to "frame_materials","#frame_materials_ref", class: "scroll-to-ref"}
      %tr
        %td
          %code
            handlebar_type_slug
        %td
          string
        %td
          The slug of the handlebar type, chosen from the list of #{link_to "handlebar_types", "#handlebar_types_ref", class: "scroll-to-ref"}

/ description: "Has an under-seat beer opener and a handlebar flower vase",

%p
  Check the #{link_to "components post", "#bike_components", class: "scroll-to-ref"} for an example with optional attributes included in the 
  %code
    bike 
  object.
%h3#components_for_bikes
  Adding components and photos to bikes

%p
  You can submit an array of urls of photos along with the bike if you'd like.
%p
  You can also submit an array of component objects along with the bike.
%p
  The
  %code
    component
  object has these key value pairs:
%article.code
  %table.table
    %tbody
      %tr
        %td
          %code
            manufacturer
        %td
          string
        %td
          Required. The name of the component manufacturer
      %tr
        %td
          %code
            component_type
        %td
          string
        %td
          Required. What type of component is this? #{ link_to "Component types", "#component_types_ref", class: "scroll-to-ref" } we recognize.
      %tr
        %td
          %code
            model_name
        %td
          string
        %td
          The component's model
      %tr
        %td
          %code
            year
        %td
          integer
        %td
          The model year for this component.
      %tr
        %td
          %code
            front_or_rear
        %td
          string
        %td
          Can be "front", "rear", or "both". For component_types that
          %code
            have_multiple
      %tr
        %td
          %code
            serial_number
        %td
          string
        %td
          Part serial number
      %tr
        %td
          %code
            description
        %td
          text
        %td
          A description of the component

%article
  .alert
    There are only two required attributes for components: 
    %code
      manufacturer
    &
    %code
      component_type
    
    

%article.code
  %p.code-label
    Bike POST with components

  - request_url = @root + api_v1_bikes_path
  %pre
    :plain
      $.ajax({
        type: "POST",
        url: "#{request_url}",
        data: {
          "organization_slug": "#{org.slug}",
          "access_token": "#{org.access_token}",
          "bike": {
            "serial_number": "XOXO :)",
            "manufacturer": "WorkCycles",
            "color": "Red",
            "rear_wheel_bsd": 559,
            "rear_tire_narrow": false,
            "owner_email": "cargo_bike_owner@bikeindex.org",
            "cycle_type_slug": "cargo",
            "frame_material": "steel",
            "handlebar_type_slug": "flat",
            "description": "Amazing cargo bike. Has made me car free!"
          },
          "photos": [
            "http://i.imgur.com/lybYl1l.jpg",
            "http://i.imgur.com/3BGQeJh.jpg"
          ],
          "components": [
            {
              "manufacturer": "SRAM",
              "year": "2013",
              "component_type": "crankset",
              "description": "2X10 crankset",
              "model_name": "X0"
            },
            {
              "manufacturer": "Chris King",
              "component_type": "hub",
              "model_name": "Bumble Bee",
              "front_or_rear": "both"
            }
          ]
        },
        success: function(data, textStatus, jqXHR) {
          $('#bike_components').text(JSON.stringify(data,undefined,2))
        }
      });
  %p.code-label
    Response
  %pre#bike_components{ data: {url: request_url }}
    - if Rails.env.production?
      :plain
        {
          "bike": {
            "web_url": "#{link_to "https://bikeindex.org/bikes/1541", "https://bikeindex.org/bikes/1541"}",
            "api_url": "#{ link_to "https://bikeindex.org/api/v1/bikes/1541", "https://bikeindex.org/api/v1/bikes/1541"}"
          }
        }
%h3#stolen_bikes
  Adding stolen bikes

%p
  To create a stolen bike, you have to add two keys pairs to your
  %code
    bike

%article.code
  %table.table

    %tbody
      %tr
        %td
          %code
            stolen
        %td
          boolean
        %td
          %code
            true
      %tr
        %td
          %code
            phone
        %td
          string
        %td
          Phone number of the stolen bike owner. Format doesn't matter

%p
  You can also add information about the bike theft to create a more accurate record. You put this information in the
  %code
    stolen_record
  object.

%p
  The keys available for the
  %code
    stolen_record

%article.code
  %table.table

    %tbody
      %tr
        %td
          %code
            date_stolen
        %td
          string
        %td
          Format mm-dd-yyyy. Defaults to the current date.
      %tr
        %td
          %code
            theft_description
        %td
          text
        %td
          Description of the theft
      %tr
        %td
          %code
            country
        %td
          string
        %td
          #{link_to "Country code", "https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements"}, required if submitting location information.
      %tr
        %td
          %code
            street
        %td
          string
        %td
          Address or intersection where the theft occurred.
      %tr
        %td
          %code
            zipcode
        %td
          string
        %td
          Postal zipcode
      %tr
        %td
          %code
            state
        %td
          string
        %td
          State postal code, if in the US

      %tr
        %td
          %code
            police_report_number
        %td
          string
        %td
          Police crime report number for this theft
      %tr
        %td
          %code
            police_report_department
        %td
          string
        %td
          Police department where the theft was reported
%article
  .alert.alert-info
    %strong
      Remember:
    Only the two attributes from the
    %code
      bike
    object are required to create a stolen bike record, the rest is icing on the cupcake.

%p
  Here is an example post with all the possible attributes.

%article.code
  %p.code-label
    Stolen Bike POST

  - request_url = @root + api_v1_bikes_path
  %pre
    :plain
      $.ajax({
        type: "POST",
        url: "#{request_url}",
        data: {
          "organization_slug": "#{org.slug}",
          "access_token": "#{org.access_token}",
          "bike": {
            "stolen": true,
            "phone": "(124) 534-6339",
            "serial_number": "XXXX :(",
            "manufacturer": "Jamis",
            "color": "Black",
            "rear_wheel_bsd": 622,
            "rear_tire_narrow": false,
            "owner_email": "stolen_bike_owner@bikeindex.org"
          },
          "stolen_record": {
            "date_stolen": "03-01-2013",
            "theft_description": "This bike was stolen and that's no fair.",
            "country": "US",
            "street": "Cortland and Ashland",
            "city": "Chicago",
            "zipcode": "60622",
            "state": "IL",
            "police_report_number": "99999999",
            "police_report_department": "Chicago"
          },
        },
        success: function(data, textStatus, jqXHR) {
          $('#bike_stolen').text(JSON.stringify(data,undefined,2))
        }
      });

  %p.code-label
    Response
  %pre#bike_stolen{ data: {url: request_url }}
    - if Rails.env.production?
      :plain
        {
          "bike": {
            "web_url": "#{link_to "https://bikeindex.org/bikes/1532", "https://bikeindex.org/bikes/1532"}",
            "api_url": "#{ link_to "https://bikeindex.org/api/v1/bikes/1532", "https://bikeindex.org/api/v1/bikes/1532"}"
          }
        }
