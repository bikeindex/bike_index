- show_sticker_modal = false

.card.organized-access-panel
  .card-block
    .card-title
      .row
        .col-xs-6
          %h3.header-font-alt
            %span.hidden-sm-down
              = passive_organization.short_name
            Access Panel
        .col-xs-6
          - if @bike.organized?(passive_organization)
            %p.text-success.text-right
              %span.hidden-md-down
                This #{@bike.type} is registered with #{passive_organization.short_name}
              %span.hidden-lg-up
                reged with #{passive_organization.short_name}
          - else
            %p.text-warning.text-right
              %span.hidden-md-down
                This #{@bike.type} is <em>not</em> registered with #{passive_organization.short_name}
              %span.hidden-lg-up
                <em>not</em> reged with #{passive_organization.short_name}
    .card-body
      .row
        - display_unstolen_notification_form = !@bike.stolen? && passive_organization.paid_for?("unstolen_notifications")
        - if @bike.authorized_by_organization?(org: passive_organization)
          .col-xs-12.mb-2
            .text-right.less-strong
              %em
                %span.hidden-md-down
                  #{passive_organization.short_name} registered this #{@bike.type} and it is
              not claimed yet,
              %em
                so you can
              = link_to "Edit it", edit_bike_path(@bike), class: "btn btn-success btn-sm"
        - elsif current_user.ambassador?
          .col-xs-12.mb-2
            .text-right.less-strong
              %em
                %span.hidden-md-down
                  This #{@bike.type} is not claimed yet. As a Bike Index ambassador,
              %em
                you can edit it to mark it as returned:
              = link_to "EDIT", edit_bike_path(@bike), class: "btn btn-success btn-sm"

        .mb-2{ class: display_unstolen_notification_form ? "col-md-7" : "col-sm-12" }
          %ul.attr-list{ class: display_unstolen_notification_form ? "" : "split-sm" }
            - if passive_organization.paid_for?("bike_codes") # Always display stickers if org has paid for them
              %li
                %span.attr-title
                  Sticker:
                - @bike.bike_codes.each do |bike_code|
                  - if bike_code.organization.present?
                    = link_to bike_code.code, edit_organization_sticker_path(id: bike_code.code, organization_id: bike_code.organization&.to_param)
                  - else
                    = bike_code.code
                - if @bike.bike_codes.none?
                  - show_sticker_modal = true
                  %a{ href: "#", style: "opacity: 0.8; text-align: right;", data: { toggle: "modal", target: "#assignStickerModal" } }
                    Link Sticker
            - if @bike.organized?(passive_organization) # Only display information about the bike if bike is registered through org
              = @bike.attr_list_item(@bike.user&.name, "Owner name", with_colon: true)
              = @bike.attr_list_item(@bike.owner_email, "Owner email", with_colon: true)
              %li
                %span.attr-title Registered:
                %span.convertTime
                  = l @bike.created_at, format: :convert_time
              %li
                %span.attr-title Claimed:
                = @bike.claimed?
              %li
                %span.attr-title Creator:
                = @bike.creator&.display_name
                %em.small.less-strong
                  = @bike.creation_description
              - passive_organization.additional_registration_fields.each do |reg_field|
                - bike_attr = Export.additional_registration_fields[reg_field.to_sym]
                - if bike_attr == "registration_address"
                  %li
                    %span.attr-title
                      Entered address:
                    = @bike.b_params.map { |bp| bp.bike["address"] }.reject(&:blank?).first
                  %li
                    %span.attr-title{ style: "line-height: 1.25;" }
                      Formatted address:
                    - address = @bike.registration_address
                    - if address.present?
                      %br
                      &nbsp;&nbsp;&nbsp;#{address["address"]}
                      %br
                      &nbsp;&nbsp;&nbsp;#{address["city"]}, #{address["state"]} #{address["zipcode"]}
                - else
                  %li
                    %span.attr-title
                      #{(bike_attr || reg_field).humanize}:
                    - if reg_field == "reg_secondary_serial"
                      = @bike.additional_registration
                    - elsif reg_field == "phone"
                      = @bike.phone
                    - elsif reg_field == "reg_affiliation"
                      = @bike.organization_affiliation

          - if !@bike.organized?(passive_organization) # Apologize, bike isn't organizations
            %p.less-strong.mt-4
              %em
                Unable to display additional information because #{@bike.type} is not registered with #{passive_organization.name}
        - if display_unstolen_notification_form
          .col-md-5.unstolen-notification-box
            %p
              %em
                #{@bike.type.titleize} is not marked stolen.
              %strong
                Believe it is anyway?
            %h3
              Contact the owner
            - redirect = new_session_url(return_to: "/bikes/#{@bike.id}?contact_owner=true") unless current_user.present?
            #write_them_a_message.collapse{ class: ("in" unless @contact_owner_open), data: { redirect: redirect } }
              %a.btn.btn-primary.btn-lg{ href: '#new_stolen_message', 'aria-controls' => 'new_stolen_message', 'data-toggle' => 'collapse' }
                Write them a message

            .collapse#new_stolen_message{ class: ("in" if @contact_owner_open) }
              - @stolen_notification ||= StolenNotification.new(bike: @bike)
              = form_for @stolen_notification do |f|
                = f.hidden_field :bike_id, value: @bike.id
                = f.text_area :message, required: true, placeholder: "Where did you see this #{@bike.type}? If you're contacting about an ad you found online, include a link in the field below", rows: 6, class: "form-control"
                = f.text_field :reference_url, placeholder: 'Link url', class: "form-control additional-field"

                .send-message
                  = f.submit "Send message", class: 'btn btn-primary btn-lg'

  - if passive_organization.message_kinds.any?
    .geomessages-wrap
      %span
        Send
      - passive_organization.message_kinds.each do |kind|
        / %a.btn.btn-secondary.openMessageModal{ target: "#organizationMessageModal", "data-kind" => kind, "data-toggle" => "modal" }
        %a.btn.btn-secondary.openMessageModal{ "data-kind" => kind }
          - if kind == "geolocated_messages"
            GeoMessage
          - else
            #{kind.humanize}

- if passive_organization.message_kinds.any?
  - modal_body = capture_haml do
    .modal-body
      = form_for OrganizationMessage.new(bike_id: @bike.id), url: organization_messages_path(organization_id: passive_organization) do |f|
        = f.hidden_field :bike_id
        = f.hidden_field :kind_slug
        = f.hidden_field :latitude
        = f.hidden_field :longitude
        = f.hidden_field :accuracy
        .form-group
          = f.label :body, "Additional message"
          = f.text_area :body, class: 'form-control'
        .modal-btn-footer
          = submit_tag "Send message", class: "btn btn-success", id: "submitMessageBtn", disabled: true
          %span.less-strong#waitingOnLocationText
            Waiting on device location

  = render partial: "/shared/modal", locals: { title: "Message #{@bike.type} owner", modal_body: modal_body, id: "organizationMessageModal" }

- if show_sticker_modal
  - sticker_modal_body = capture_haml do
    .modal-body
      = form_for BikeCode.new, { url: organization_sticker_path(id: "code", organization_id: passive_organization.to_param), action: "update", method: "PUT" } do |f|
        = f.hidden_field :bike_id, value: @bike.id
        .form-group
          = f.label :code, "Sticker Code", class: "org-form-label"
          = f.text_field :code, required: true, class: "form-control"
        .modal-btn-footer
          .form-submit-button
            = f.submit "Assign sticker", class: "btn btn-success btn-lg"

  = render partial: "/shared/modal", locals: { title: "Assign sticker", modal_body: sticker_modal_body, id: "assignStickerModal" }
