.col-md-8
  .bike-photos.horizontal-thumbnails
    - bike_image = @bike.public_images.first
    - if bike_image.present? && bike_image.image_url.present?
      #selected-photo{ class: "image-holder #{"just1photo" if @bike.public_images.count == 1}" }
        .current-photo{ id: "image#{bike_image.id}"}
          = image_tag(bike_image.image_url(:large), alt: t(".bike_photo", bike_type: @bike.type_titleize), id: "i|#{@bike.public_images.first.listing_order}", data: { action: "zoom", original: bike_image.image_url })
      - if @bike.public_images.count > 1
        %span.thumbnail-shadow
        %span.thumbnail-shadow-r
        #thumbnail-photos.photo-list
          %ul#thumbnails
            - @bike.public_images.select(&:image_url).each_with_index do |public_image, index|
              - thumb_class = index == 0 ? 'current-thumb' : '' # make the first image current
              %li
                %a.clickable-image{ class: thumb_class, data: { id: "image#{public_image.id}", img: public_image.image_url(:large), link: public_image.image.url } }
                  = image_tag public_image.image_url(:small), alt: "#{public_image.name}", id: "i|#{public_image.listing_order}"
        :plain
          <script id="current-photo-template" type="x-tmpl-mustache">
            <div id="{{id}}" style="display: none;">
              <img alt="{{alt}}" src="{{src}}" id="{{image_id}}" data-action="zoom" data-fullsize="{{fullsize}}" class="initially-hidden">
            </div>
          </script>
    - elsif @bike.stock_photo_url.present?
      #selected-photo.image-holder.just1photo
        %h3.stock-photo
          = t(".stock_photo", year: @bike.year, model: @bike.frame_model)
          %em= t(".color_may_not_match")
        .current-photo#stock_photo_img
          = image_tag(@bike.stock_photo_url, alt: t(".bike_photo", bike_type: @bike.type_titleize), id: "i|0", data: {action: 'zoom', original: @bike.stock_photo_url})

  .show-bike-details
    %ul.attr-list.split-sm
      - unless @bike.version?
        %li
          %strong.attr-title #{t(".serial")}:
          = @bike.serial_display(current_user)
          - if @bike.serial_hidden?
            %em.small.less-strong
              - if @bike.authorized?(current_user)
                = t(".hidden_for_unauthorized_users")
              = t(".hidden_because_status", bike_type: @bike.type, status: @bike.status_humanized_translated)
        - unless @bike.serial_hidden?
          = attr_list_item(@bike.extra_registration_number, t(".other_serial"))
      - unless @bike.type == "bike"
        = attr_list_item(@bike.type_titleize, t(".cycle_type"))

      %li
        %strong.attr-title #{t(".manufacturer")}:
        -# We want to display the whole manufacturer name here, not just the
        -# simple name. So only use mnfg_name if it's other (which sanitizes)
        - if @bike.manufacturer&.name == "Other"
          = @bike.mnfg_name
        - else
          = @bike.manufacturer&.name
      = attr_list_item(@bike.name, t(".name"))
      = attr_list_item(@bike.frame_model, t(".model"))
      = attr_list_item(@bike.year.to_s, t(".year"))
      %li.color-attrs
        %strong.attr-title #{t(".primary_colors")}:
        = @bike.frame_colors.to_sentence
        - if BikeDisplayer.paint_description?(@bike)
          .paint-description
            %strong.attr-title
              #{t(".paint_description")}:
            = @bike.paint_description

      = attr_list_item(@bike.frame_size&.upcase, t(".frame_size"))

      - if @bike.front_wheel_size_id.present?
        - front_tire_width = @bike.front_tire_narrow ? '(Narrow tire)' : '(Wide tire)'
        - if @bike.front_wheel_size_id == @bike.rear_wheel_size_id
          = attr_list_item(@bike.front_wheel_size&.name, t('.wheel_diameter'))
        - else
          = attr_list_item(@bike.front_wheel_size&.name, t(".front_wheel_diameter"))
          - rear_tire_width = @bike.rear_tire_narrow ? '(Narrow tire)' : '(Wide tire)'
          = attr_list_item(@bike.rear_wheel_size&.name, t(".rear_wheel_diameter"))

      = attr_list_item(@bike.frame_material_name, t(".frame_material"))
      = attr_list_item(@bike.handlebar_type_name, t(".handlebar_type"))
    - if @bike.description.present?
      %h3
        = t(".distinguishing_features")
      %p
        = @bike.description

    - if @bike.status_stolen? && @stolen_record.present?
      %h3
        = t(".stolen_details")
      .row
        - if @bike.current_stolen_record.latitude.present?
          = render partial: "stolen_map", locals: { mapping_record: @stolen_record }
        .col-md-4
          %ul.attr-list.separate-lines
            = attr_list_item(@stolen_record.address(skip_default_country: true), t(".location"))
            = attr_list_item(@stolen_record.locking_description, t(".locking_description"))
            = attr_list_item(@stolen_record.lock_defeat_description, t(".locking_circumvented"))
            %li
              %strong.attr-title
                #{t(".stolen_at")}:&nbsp;
              %span.convertTime= l @stolen_record.date_stolen, format: :convert_time
            = attr_list_item(@stolen_record.police_report_number, t(".police_report"))
            = attr_list_item(@stolen_record.police_report_department, t(".department_city"))
      - if @stolen_record.theft_description.present?
        %h3= t(".description_of_incident")
        %p= @stolen_record.theft_description
    - elsif !@bike.version? && @bike.current_impound_record.present?
      - impound_record = @bike.current_impound_record
      %h3
        This is an abandoned #{@bike.type} that was #{impound_record.kind}
      .row
        - if impound_record.latitude.present?
          = render partial: "stolen_map", locals: { mapping_record: impound_record }
        .col-md-4
          %ul.attr-list.separate-lines
            = attr_list_item(impound_record.address, t(".location"))
            %li
              %strong.attr-title
                - if @bike.status_found?
                  = t(".found_at")
                - else
                  = t(".impounded_at")
                \:&nbsp;
              %span.convertTime.preciseTime= l impound_record.impounded_at, format: :convert_time
              %span.convertTimezone
      - if impound_record.impounded_description.present?
        %h3= t(".description_of_incident")
        %p= impound_record.impounded_description

  - cgroups = @bike.cgroup_array.map { |id| { name: Cgroup.find(id).name, id: id } }
  - if cgroups.any?
    %ul.nav.nav-tabs.component-types{ role: 'tablist' }
      - cgroups.each_with_index do |cgroup, index|
        %li.nav-item
          - link_class = index == 0 ? 'active' : ''
          %a.nav-link{ class: link_class, href: "#cgroup_#{cgroup[:id]}", data: { toggle: 'tab', role: 'tab' } }
            = cgroup[:name]
    .tab-content.component-group-wrap
      - cgroups.each_with_index do |cgroup, index|
        - tab_class = index == 0 ? 'active' : ''
        .tab-pane.component-group{ id: "cgroup_#{cgroup[:id]}", class: tab_class }
          %h3.cgroup-name
            = cgroup[:name]
          %ul.attr-list
            - @components.each do |component|
              - next unless component.cgroup_id == cgroup[:id]
              %li
                %strong.attr-title
                  - if component.front && component.rear
                    = t(".front_rear")
                  - elsif component.front
                    = t(".front")
                  - elsif component.rear
                    = t(".rear")
                  - if component.component_type == "unknown"
                    = t(".other")
                  - else
                    = component.component_type.titleize if component.component_type.present?
                = component.description
                - if component.year.present? || component.component_model.present? || component.manufacturer.present?
                  = component.component_model
                  = t(".componentyear", componentyear: component.year) if component.year.present?
                  = "(#{component.mnfg_name})"
