- serial_page_link = link_to(t(".our_serial_page"), serials_url, target: '_blank')
- serial_help_content = t(".serial_help_content_html", serial_page_link: serial_page_link)
- type_html = content_tag(:span, CycleType.slug_translation(@bike.cycle_type).downcase, class: "cycleTypeText")

:javascript
  window.cycleTypeTranslations = #{CycleType.slug_translation_hash_lowercase_short.to_json};
  window.cycleTypesPedals = #{CycleType::PEDAL.to_json};
  window.cycleTypesAlwaysMotorized = #{CycleType::ALWAYS_MOTORIZED.to_json};
  window.cycleTypesNeverMotorized = #{CycleType::NEVER_MOTORIZED.to_json};
  window.cycleTypesNot = #{CycleType::NOT_CYCLE_TYPE.to_json};

.form-well-header.container
  %h1.uncap
    - if @bike.status_stolen?
      = t(".enter_stolen_bike_type_details_html", type_html: type_html)
    - elsif @bike.status_impounded?
      = t(".enter_found_bike_type_details_html", type_html: type_html)
    - else
      = t(".enter_bike_type_details_html", type_html: type_html)

= form_for @bike, multipart: true do |f|
  = f.hidden_field :b_param_id_token, value: @b_param&.id_token
  - if @bike_sticker.present?
    -# Hacky way to assign sticker during creation
    = hidden_field_tag :bike_sticker, @bike_sticker.code
  - if @organization.present?
    = f.hidden_field :creation_organization_id, value: @organization.id
  - if @bike.status_stolen?
    = f.hidden_field :date_stolen, value: Time.current.to_i

  .form-well-container.container
    .row
      .col-lg-8.offset-lg-2.form-well
        .form-wrap
          .form-group.row.unnested-field
            = f.label :serial_number, class: 'form-well-label'
            .form-well-input
              #serial-input
                = f.text_field :serial_number, required: true, autocomplete: 'off', autocorrect: 'off', autocapitalize: 'off', placeholder: t('.required'), class: 'form-control'
                %a.inline-input-help{title: t(".serial_help"), data: {toggle: 'popover', content: serial_help_content}}
                  ?
              #made-without-serial-input
                %label
                  = f.check_box :made_without_serial
                  = t(".without_serial_html", type_html: type_html)
              .below-input-help#made-without-serial-help
                .hidden-other
                  %a{data: {toggle: 'modal', target: '#made-without-serial-modal'}}
                    = t(".without_serial_number_html", type_html: type_html)
            .right-input-help
              %label.cursor-pointer.made-without-serial-checkbox
                = check_box_tag :has_no_serial, true, @bike.serial_unknown?, tabindex: -1
                = t(".missing_serial")

          .related-fields
            .form-group.row
              = f.label :cycle_type, t(".this_is_a"), class: 'form-well-label'
              .form-well-input
                - if @bike.cycle_type == "bike"
                  %label.collapse.in.pt-1.pl-1.cursor-pointer
                    = check_box_tag :traditional_bike_checkbox, true, true
                    = t(".traditional_bike")
                    %em= t(".traditional_bike_definition")

                .cycle-type-select.fancy-select.unfancy{class: @bike.cycle_type == "bike" ? "collapse" : ""}
                  = select(:bike, :cycle_type, CycleType.select_options, {prompt: false}, {required: true, class: 'form-control'})
                %label#motorizedWrapper.cursor-pointer.mt-1.mb-0.pl-1
                  = check_box_tag :propulsion_type_motorized, true
                  %strong ⚡️
                  = t(".electric")
                  (motorized)
                #propulsionTypeFields.collapse.pl-1
                  %label.checkbox-inline.mr-2
                    = check_box_tag :propulsion_type_throttle, true, @bike.propulsion_type_throttle?
                    Throttle
                  %label.checkbox-inline
                    = check_box_tag :propulsion_type_pedal_assist, true, @bike.propulsion_type_pedal_assist?
                    Pedal assist

          .related-fields
            .form-group.row
              = f.label :manufacturer_id, t(".manufacturer"), class: 'form-well-label'
              .form-well-input
                - initial = @bike.manufacturer && {id: @bike.manufacturer.id, text: @bike.manufacturer.name}.to_json
                = f.text_field :manufacturer_id, value: @bike.manufacturer && @bike.manufacturer.name, class: 'form-control unfancy', data: {initial: initial}
                %span.below-input-help
                  = t(".select_other")

            .form-group.hidden-other.row
              = f.label :manufacturer_other, t(".other_manufacturer"), class: 'form-well-label'
              .form-well-input
                = f.text_field :manufacturer_other, class: 'form-control'

          .form-group.row.fancy-select.unfancy.unnested-field
            = f.label :year, t(".model_year"), class: 'form-well-label'
            .form-well-input
              - years = (1900..Time.current.year+1).to_a.reverse.map { |i| [i,i] }
              = f.select :year, years, prompt: t(".unsure_or_unknown"), selected: @bike.year || Time.current.year
            .right-input-help
              %label.cursor-pointer
                %input#bike_unknown_year{type: 'checkbox', tabindex: -1}
                = t(".unknown_year")

          .form-group.row.unnested-field
            = f.label :frame_model, class: 'form-well-label'
            .form-well-input
              = f.text_field :frame_model, class: 'form-control'

          - classname = (@b_param.display_email? ? '' : 'no-divider-row')
          = render partial: '/bikes_edit/bike_fields/revised_colors', locals: {f: f, classname: classname}

          -# Show the phone if the bike is stolen, the organization requires phone
          -# only show the phone for impounded records if the current user doesn't have a confirmed phone
          - if @bike.status_stolen? || include_field_reg_phone?(@organization, current_user) || @bike.status_impounded? && !current_user.phone_confirmed?
            .form-group.row.unnested-field
              = f.label :phone,
                registration_field_label(@organization, "reg_phone") || t(".phone"),
                class: "form-well-label"
              .form-well-input
                = f.text_field :phone, required: true, value: current_user&.phone, class: "form-control"

          - if @bike.status_stolen?
            = fields_for @bike.stolen_records.last do |srecord|
              = render partial: '/bikes_edit/bike_fields/stolen_location', locals: {srecord: srecord}

          - if @bike.status_impounded?
            = fields_for @bike.impound_records.last do |irecord|
              = render partial: '/bikes_edit/bike_fields/stolen_location', locals: {srecord: irecord}

          - if include_field_reg_address?(@organization, current_user) && BikeDisplayer.display_edit_address_fields?(@bike, current_user)
            .related-fields
              .form-group.row
                -# Set all the bike address attrs
                - @bike.attributes = {street: @b_param.address("address"),
                  city: @b_param.address("city"),
                  zipcode: @b_param.address("zipcode"),
                  state: @b_param.address("state")}

                = f.label :street,
                  registration_field_label(@organization, "reg_address") || t(".mailing_address"),
                  class: 'form-well-label'

                .form-well-input
                  = f.text_field :street,
                    required: true,
                    placeholder: registration_field_address_placeholder(@organization),
                    class: 'form-control'

                  = registration_address_required_below_helper(@organization)

              .form-group.row
                %label.form-well-label
                .form-well-input
                  = f.text_field :city,
                    required: true,
                    placeholder: t(".city"),
                    class: "form-control"

              .form-group.row
                %label.form-well-label
                .form-well-input
                  = f.text_field :zipcode,
                    required: true,
                    placeholder: t(".zipcode"),
                    class: "form-control"

              .form-group.row.fancy-select-placeholder.unfancy
                %label.form-well-label
                .form-well-input
                  = f.collection_select(:state, State.all, :abbreviation, :name,
                    {include_blank: true, required: true, prompt: t(".state")},
                    {class: "form-control"})

          - if include_field_reg_extra_registration_number?(@organization, current_user)
            .form-group.row.unnested-field.no-divider-row
              = f.label :extra_registration_number,
                registration_field_label(@organization, "reg_extra_registration_number") || t(".additional_serial_sticker_number"),
                class: "form-well-label"
              .form-well-input
                = f.text_field :extra_registration_number,
                  autocomplete: "off",
                  autocorrect: "off",
                  autocapitalize: "off",
                  class: "form-control"

          - if include_field_reg_organization_affiliation?(@organization, current_user)
            .form-group.row.unnested-field.no-divider-row.fancy-select.unfancy
              = f.label :organization_affiliation,
                registration_field_label(@organization, "reg_organization_affiliation") || t(".affiliation", org_name: @organization.short_name),
                class: "form-well-label"
              .form-well-input
                = f.select :organization_affiliation,
                  @organization.organization_affiliation_options,
                  class: "form-control"

          - if include_field_reg_student_id?(@organization, current_user)
            .form-group.row.unnested-field.no-divider-row
              = f.label :student_id,
                registration_field_label(@organization, "reg_student_id") || t(".student_id"),
                class: "form-well-label"
              .form-well-input
                = f.text_field :student_id,
                  autocomplete: "off",
                  autocorrect: "off",
                  autocapitalize: "off",
                  required: @organization.enabled?("require_student_id"),
                  class: "form-control"

          - if include_field_reg_bike_sticker?(@organization, current_user, true)
            .form-group.row.unnested-field.no-divider-row
              = f.label :bike_sticker, t(".sticker_id_html"), class: "form-well-label"
              .form-well-input
                = f.text_field :bike_sticker,
                  autocomplete: "off",
                  autocorrect: "off",
                  autocapitalize: "off",
                  class: "form-control"

          -# With impounded and found bikes, including owner_email is confusing
          - if @bike.status_impounded?
            = f.hidden_field :owner_email, value: @bike.owner_email || current_user&.email
          - else
            .form-group.row.unnested-field.no-divider-row
              = f.label :owner_email,
                registration_field_label(@organization, "owner_email") || t(".owner_email"),
                class: 'form-well-label'
              .form-well-input
                = f.email_field :owner_email,
                  value: @bike.owner_email || current_user&.email,
                  required: true,
                  placeholder: 'required',
                  class: 'form-control'

      .new-bike-submit-wrapper
        - register_text = @bike.creation_organization.present? ? t(".register_with", organization_name: @bike.creation_organization.short_name) : t(".register")
        = submit_tag register_text, class: 'btn btn-lg btn-primary'

- modal_body = capture_haml do
  .modal-body
    .cycleTypeOnly.collapse.in
      %p
        = t(".very_very_few_bikes_html", type_html: type_html)
      %ul
        %li
          = t(".was_made_before_1970")
        %li.li-or
          \-
          = t(".or")
          \-
        %li
          = t(".is_a_handmade_frame")
      %p.mb-1
        = t(".it_probably_has_a_serial_number")
      %p.mb-1
        - how_to_find_link = link_to t('.how_to_find_serial'), serials_url, target: "_blank"
        = t(".read_how_to_find_html", how_to_find_link: how_to_find_link)
    .collapse.notCycleTypeOnly
      = t(".very_few_vehicles_html", type_html: type_html)
  .modal-btn-footer
    .row
      .col-xs-6
        %button.btn.btn-secondary{'data-dismiss' => 'modal', type: 'button'}
          = t(".nevermind")
        = t(".i_just_dont_know_the_serial")
      .col-xs-6
        %button.btn.btn-danger#made-without-serial-button{type: 'button'}
          = t(".im_100_sure")
        = t(".without_serial_html", type_html: type_html)

= render partial: 'shared/modal', locals: {title: t('.are_you_certain'), id: 'made-without-serial-modal', modal_body: modal_body}
