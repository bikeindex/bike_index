#stolen_fields_store
#root_url.hidden{data: { url: ENV['BASE_URL'] }}
= form_for @bike, multipart: true do |f|
  = f.hidden_field :b_param_id_token
  = f.hidden_field :creation_organization_id
  = f.hidden_field :embeded, value: true
  .input-group
    - if @stolen
      %span#stolen_registration_first
    - unless @stolen || @non_stolen
      #registration-type-tabs
        %a.registration-type-tab{ href: '#', data: { stype: 'description' } }
          = t(".registering_a_stolen_bike_click_here")
        %a.registration-type-tab.stolen.current-type{ href: '#', data: { stype: 'serial' } }
          = t(".currently_registering_a_nonstolen_bike")
    .control-group
      = f.label :serial_number, class: "control-label"
      .controls
        = f.text_field :serial_number, :required =>true, autocomplete: 'off', autocorrect: 'off', autocapitalize: 'off'
      - if @organization.include_field_extra_registration_number?
        - label_secondary_serial = @organization.registration_field_label("extra_registration_number") || t(".additional_serial")
        = f.label :extra_registration_number, label_secondary_serial, class: "control-label"
        .controls
          = f.text_field :extra_registration_number, autocomplete: 'off', autocorrect: 'off', autocapitalize: 'off'
    .has-no-serial.optional-block
      %label
        = check_box_tag :has_no_serial, true, @bike.serial_unknown?, tabindex: -1
        = t(".unknown_serial")

  .input-group.with-additional-block
    .control-group.select-jsonified
      = f.label :manufacturer_id, class: "control-label"
      .controls
        = f.text_field :manufacturer_id, value: @bike.manufacturer && @bike.manufacturer.name
        %span.help-block
          = t(".select_other_if_manufacturer_isnt_listed")
    .hidden-other.control-group.manufacturer-other-input
      = f.label :manufacturer_other, t(".other_manufacturer"), class: "control-label"
      .controls
        = f.text_field :manufacturer_other, placeholder: t(".manufacturer_name")

  .input-group
    .control-group.special-select-single
      = f.label :year, t(".model_year"), class: "control-label"
      .controls
        - years = (1900..Time.current.year+1).to_a.reverse.map {|i| [i,i] }
        = f.select :year, years, selected: Time.current.year, prompt: t(".unsure_or_unknown")
    .unknown-year.optional-block
      %label
        %input#bike_unknown_year{ type: 'checkbox', tabindex: -1 }
        = t(".unknown_year")

  .input-group
    .control-group
      = f.label :frame_model, class: "control-label"
      .controls
        = f.text_field :frame_model, autocomplete: 'off'

  .input-group.with-optional-blocks
    .control-group.special-select-single
      = f.label :primary_frame_color_id, t(".frame_color"), class: "control-label"
      .controls
        = select(:bike, :primary_frame_color_id, Color.select_options, required: true, prompt: t(".choose_color"))
    %a#add-secondary.optional-form-block{data: {target: "#secondary-color", toggle: "#rm-secondary"}}
      = t(".add_a_color")
    %a#rm-secondary.optional-form-block.rm-block.currently-hidden{data: {target: "#secondary-color", toggle: "#add-secondary"}}
      = t(".remove_color")
    #secondary-color.hidden-other
      .control-group.special-select-single
        %label.control-label
          = t(".secondary_color")
        .controls
          = select(:bike, :secondary_frame_color_id, Color.select_options, prompt: t(".choose_color"))
      %a#add-tertiary.optional-form-block{data: {target: "#tertiary-color", toggle: "#rm-tertiary"}}
        = t(".add_a_color")
      %a#rm-tertiary.optional-form-block.rm-block.currently-hidden{data: {target: "#tertiary-color", toggle: "#add-tertiary"}}
        = t(".remove_color")
    #tertiary-color.hidden-other
      .control-group
        %label.control-label
          = t(".third_color")
        .controls.special-select-single
          = select(:bike, :tertiary_frame_color_id, Color.select_options, prompt: t(".choose_color"))

  #stolen_fields_container
    #stolen_fields
      = f.hidden_field :stolen, value: true
      = fields_for @stolen_record do |builder|
        = builder.hidden_field :phone_no_show, value: true
        - unless @organization&.include_field_reg_phone?
          .input-group
            .control-group
              = builder.label :phone, class: "control-label"
              .controls
                = builder.text_field :phone, required: "true"
        .input-group#stolenDisplay
          .control-group{ style: "width: 300px; max-width: 100%;" }
            = builder.label :date_stolen, t(".when_was_it_stolen"), class: "control-label"
            - builder.object.date_stolen = TimeParser.round(builder.object.date_stolen || Time.current)
            = builder.hidden_field :timezone, value: "", class: "hiddenFieldTimezone"
            = builder.datetime_local_field :date_stolen, max: Time.current + 1.day, step: 3600, required: true, class: 'form-control', style: "font-size: 90%; width: 100%;"
        #stolen-bike-location.input-group
          .control-group.special-select-single
            = builder.label :street, t(".where_was_it_stolen"), class: 'control-label'
            #country_select_container.controls.special-select-single
              = builder.select(:country_id, Country.select_options, prompt: t(".choose_country"))
          .control-group.extra-group.special-select-single
            .controls
              = builder.text_field :street, placeholder: t(".intersection_or_address")
            .controls.extra-field
              = builder.text_field :city, placeholder: t(".city")
            .controls.extra-field
              = builder.text_field :zipcode, placeholder: t(".zipcode")
            #state-select.controls.extra-field.special-select-single
              = builder.collection_select(:state_id, State.all, :id, :name, include_blank: true, prompt: t(".state") )
        .input-group
          .control-group.large-text
            = builder.label :theft_description, t(".description_of_the_theft"), class: "control-label"
            .controls
              = builder.text_area :theft_description, rows: 3
        .input-group
          %p.stolen-suggestion
            = t(".filing_a_police_report_is_important_html")
          .control-group
            = builder.label :police_report_number, t(".police_report_number"), class: 'control-label'
            .controls
              = builder.text_field :police_report_number
          .control-group.extra-group
            = builder.label :police_report_department, t(".department_city"), class: 'control-label'
            .controls
              = builder.text_field :police_report_department
        .input-group
          .control-group.receive-group
            .receive-notifications
              = builder.label :receive_notifications do
                = builder.check_box :receive_notifications, checked: true
                = t(".receive_notifications_from_bike_index", bike_type: @bike.type)
                %span
                  = t(".eg_if_we_tweet_about_or_someone_searches")
  - if @organization&.include_field_reg_address?
    - label_address = @organization.registration_field_label("reg_address") || t(".owners_street_address")
    / Set all the bike address attrs
    - @bike.attributes = { address: @b_param.address("address"), address_city: @b_param.address("city"), address_zipcode: @b_param.address("zipcode"), address_state: @b_param.address("state") }
    .input-group
      = f.label :address, label_address
      .controls
        = f.text_field :address, required: true, placeholder: t(".address")
      .controls.extra-field
        = f.text_field :address_city, required: true, placeholder: t(".city")
      .controls.extra-field
        = f.text_field :address_zipcode, required: true, placeholder: t(".zipcode")
      #state-select.controls.extra-field.special-select-single
        = f.collection_select(:address_state, State.all, :abbreviation, :name, include_blank: true, required: true, prompt: t(".state"))
  - if @organization&.include_field_reg_phone?
    - label_phone = @organization.registration_field_label("reg_phone") || t(".your_phone_number")
    .input-group
      = f.label :phone, label_phone
      .controls
        = f.text_field :phone, required: true

  .input-group.form-foot
    .control-group
      %label.control-label{ for: 'bike_owner_email' }
        = t(".your_email_address")
      .controls
        = f.email_field :owner_email
    .submit-registration
      = submit_tag t(".register"), class: "button-submit"
      %span.what-you-register
        = t(".this")
      = select(:bike, :cycle_type, CycleType.select_options, { required: true })

  .input-group.optional-group.form-photo-group
    - if @b_param.image.present? or @b_param.image_tmp.present?
      %strong
        = t(".image_has_been_uploaded")
    - else
      .filefield-button
        = f.file_field :image
      #filepath
      %span
        = t(".optional_upload_a_photo")
