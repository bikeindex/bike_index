-# TODO: add translations

.container.public-impounded-bikes
  %h1.cleafix.impounded-bikes-header{ class: (current_organization.display_avatar? ? "with-avatar" : "") }
    - if current_organization.display_avatar?
      = image_tag current_organization.avatar.url(:large)
    %strong.uncap= current_organization.name
    Impounded bikes

  = render partial: "/shared/period_select", locals: { prepend_text: "Impounded during:" }

  .mt-4
    = form_tag organization_impounded_bikes_path(organization_id: current_organization.to_param), id: 'bikes_search_form', class: 'bikes-search-form', method: :get do
      .query-field-wrap.nojs
        - opt_vals = @selected_query_items_options.map { |i| i.is_a?(String) ? [i, i] : [i['text'], i['search_id']]  }
        = select_tag :query_items,                                      |
          options_for_select(opt_vals, selected: opt_vals.map(&:last)), |
          placeholder: t(".search_bike_descriptions"),                  |
          class: 'form-control query-field',                            |
          multiple: true

        = text_field_tag :query, params[:query], placeholder: t(".search_bike_descriptions"), class: 'form-control query-field'
        = text_field_tag :serial, params[:serial], placeholder: t(".search_for_serial_number"), class: 'form-control query-field'

      .search-button-wrap
        = button_tag(type: 'submit', class: 'searchit btn btn-primary') do
          :plain
            <svg id="search-button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 29 29"><defs><style>.cls-1,.cls-2{fill:none;stroke:#fff;stroke-miterlimit:10;stroke-width:2px;}.cls-2{stroke-linecap:round;}</style></defs><title>searcher</title><circle class="cls-1" cx="10.39" cy="10.39" r="9.39"/><line class="cls-2" x1="17.03" y1="17.03" x2="28" y2="28"/></svg>

      = render partial: "/shared/hidden_search_fields", locals: {kind: "organized_bike_search"}

  .mt-4.mb-4
    = pluralize(number_with_delimiter(@impound_records.total_count), "matching impound record")
    %em
      = humanized_time_range(@time_range)

  - skip_location ||= !current_organization&.enabled?("impound_bikes_locations")
  .full-screen-table
    %table.table.table-striped.table-bordered.table-sm.without-exterior-border
      %thead.small-header.hidden-md-down
        %th
          %small= sortable "display_id", "Impound&nbsp;ID"
        %th= sortable "created_at", "Impounded&nbsp;at"
        %th Bike
        - unless skip_location
          %th= sortable "location_id"
        %th Impounded from

      %tbody
        - @impound_records.each do |impound_record|
          %tr
            %td
              = impound_record.display_id
            %td
              %a.convertTime.preciseTime
                = l(impound_record.created_at, format: :convert_time)
            %td
              - if impound_record.bike.present?
                - bike = impound_record.bike
                %a{ href: bike_path(bike.to_param) }
                  = bike.frame_colors.to_sentence
                  %strong
                    = bike.mnfg_name
                  - if bike.frame_model.present?
                    %em
                      = bike.frame_model_truncated
                  - unless bike.cycle_type == "bike"
                    %small= bike.type
            - unless skip_location
              %td
                %small
                  = impound_record.location&.name
            %td
              = impound_record.address(skip_default_country: true)

  .paginate-container.paginate-container-bottom
    = paginate @impound_records

-# include javascript because of period select
= javascript_pack_tag "application"
