- skip_view_just_stolen ||= @bike_sticker.present?

.mb-4
  = render partial: "/shared/bike_search_form", locals: {include_organized_search_fields: true, search_path: organization_bikes_path(organization_id: current_organization.to_param)}

%hr{style: "opacity: .3;"}

:ruby
  search_params = sortable_search_params.merge(@interpreted_params.merge(organization_id: current_organization.to_param))

  # TODO: Now that we have translations, we need to localize this. I believe the easiest way to do so would be to pull the text from the header cell and use that.
  column_renames = {
    "created_at_cell" => "Registered",
    "updated_at_cell" => "Updated",
    "stolen_cell" => "Stolen",
    "manufacturer_cell" => "Manufacturer",
    "model_cell" => "Model",
    "color_cell" => "Color",
    "owner_email_cell" => "Sent to",
    "creation_description_cell" => "Source",
    "owner_name_cell" => "Owner name",
    "reg_organization_affiliation_cell" => "Affiliation",
    "reg_extra_registration_number_cell" => "Secondary#",
    "reg_phone_cell" => "Phone",
    "reg_address_cell" => "Address",
    "reg_student_id_cell" => "Student ID",
    "sticker_cell" => "Sticker",
    "impounded_cell" => "Impounded",
    "avery_cell" => "Avery Exportable",
    "cycle_type_cell" => "Vehicle type",
    "propulsion_type_cell" => "E-vehicle (propulsion)",
    "status_cell" => "Status",
    "url_cell" => "URL"
  }
  # Most columns are enabled by default, including organization specific registration columns
  initially_checked_columns = %w[created_at_cell
    stolen_cell
    manufacturer_cell
    model_cell
    color_cell
    owner_email_cell
    owner_name_cell
    creation_description_cell]
  # We handle bike stickers separately, so exclude that
  additional_registration_fields = current_organization.additional_registration_fields - ["reg_bike_sticker"]
  initially_checked_columns += current_organization.enabled?("bike_stickers") ? ["sticker_cell"] : []
  enabled_columns = initially_checked_columns
  # Some optional columns
  enabled_columns += %w[url_cell updated_at_cell cycle_type_cell propulsion_type_cell status_cell]
  enabled_columns += additional_registration_fields.map { |f| "#{f}_cell" }
  enabled_columns += ["impounded_cell"] if current_organization.enabled?("impound_bikes")
  enabled_columns += ["avery_cell"] if current_organization.enabled?("avery_export")
  # If the search_stickers param or search_address is set, start with the settings panel open
  settings_default_open = @search_stickers.present? || @search_address.present? || params[:search_impoundedness].present? || InputNormalizer.boolean(params[:search_open])
  # NOTE: Checking avery incurs a performance hit - so only render it when the box is checked
  show_avery_export = current_organization.enabled?("avery_export") && InputNormalizer.boolean(params[:search_avery_export])
  initially_checked_columns += ["avery_cell"] if show_avery_export
  initially_checked_columns += ["impounded_cell"] if @search_impoundedness == "impounded"
  enabled_columns = enabled_columns.sort { |a, b| column_renames[a] <=> column_renames[b] }

.collapse#organizedSearchSettings.settings-list{"data-defaultcols" => initially_checked_columns.to_json, class: (settings_default_open ? "in" : "")}
  %h3.header-font-alt
    = t(".visible_columns")
  .row.pb-3
    - enabled_columns.each do |cell_name|
      .col-xs-6.col-md-4
        .form-group
          %label
            = check_box_tag cell_name, cell_name
            = column_renames[cell_name]
  - if current_organization.enabled?("bike_stickers")
    %p.search-sort-btns
      %span.sort-group-label= t(".stickers")
      = link_to t(".all"), organization_bikes_path(search_params.merge(search_stickers: nil)), class: "btn btn-secondary #{@search_stickers.blank? ? 'active' : ''}"
      = link_to organization_bikes_path(search_params.merge(search_stickers: "with")), class: "btn btn-secondary #{@search_stickers == 'with' ? 'active' : ''}" do
        = t(".only_with_stickers_html")
      = link_to organization_bikes_path(search_params.merge(search_stickers: "none")), class: "btn btn-secondary #{@search_stickers == 'none' ? 'active' : ''}" do
        = t(".only_no_sticker_html")
  - if current_organization.enabled?("reg_address")
    %p.search-sort-btns
      %span.sort-group-label= t(".address")
      = link_to t(".all"), organization_bikes_path(search_params.merge(search_address: nil)), class: "btn btn-secondary #{@search_address.blank? ? 'active' : ''}"
      = link_to organization_bikes_path(search_params.merge(search_address: "with_street")), class: "btn btn-secondary #{@search_address == 'with_street' ? 'active' : ''}" do
        = t(".only_with_address_html")
      = link_to organization_bikes_path(search_params.merge(search_address: "without_street")), class: "btn btn-secondary #{@search_address == 'without_street' ? 'active' : ''}" do
        = t(".only_no_address_html")
  %p.search-sort-btns
    %span.sort-group-label= t(".status")
    = link_to t(".all"), organization_bikes_path(search_params.merge(search_status: "all")), class: "btn btn-secondary #{@search_status == 'all' ? 'active' : ''}"
    - if current_organization.enabled?("impound_bikes")
      = link_to organization_bikes_path(search_params.merge(search_status: "not_impounded")), class: "btn btn-secondary #{@search_status == 'not_impounded' ? 'active' : ''}" do
        = t(".only_not_impounded_html")
      = link_to organization_bikes_path(search_params.merge(search_status: "impounded")), class: "btn btn-secondary #{@search_status == 'impounded' ? 'active' : ''}" do
        = t(".only_impounded_html")
    = link_to organization_bikes_path(search_params.merge(search_status: "with_owner")), class: "btn btn-secondary #{@search_status == 'with_owner' ? 'active' : ''}" do
      = t(".only_with_owner_html")
    = link_to organization_bikes_path(search_params.merge(search_status: "stolen")), class: "btn btn-secondary #{@search_status == 'stolen' ? 'active' : ''}" do
      = t(".only_stolen_html")
  - if current_organization.enabled?("csv_exports")
    %p.search-sort-btns.text-right
      = link_to t(".create_export"), organization_bikes_path(search_params.merge(create_export: true)), class: "gray-link"


%p.mt-4
  - if @search_query_present || params[:search_stickers].present? || params[:search_address].present?
    = t(".matching_bikes_html", bikes: pluralize(number_with_delimiter(@bikes.total_count), t(".bike")))
  - else
    = t(".registered_bikes_html",
    bikes: pluralize(number_with_delimiter(@bikes.total_count), t(".bike")),
    org_name: current_organization.short_name)
  %em
    = humanized_time_range(@time_range)
  - unless skip_view_just_stolen
    - if @stolenness == 'all'
      %a.float-right.organized-bikes-stolenness-toggle{href: organization_bikes_path(search_params.merge(stolenness: "stolen")), data: {stolenness: "stolen"}}
        = t(".view_just_stolen_bikes")
    - else
      = t(".stolen_bikes_html")
      %a.organized-bikes-stolenness-toggle{href: organization_bikes_path(search_params.merge(stolenness: "all")), data: {stolenness: "all"}}
        = t(".view_all_bikes")
  %a.float-right.less-strong{href: "#organizedSearchSettings", "aria-controls" => "organizedSearchSettings", "data-toggle" => "collapse", style: "margin: 0 .5rem; color: #bbb"}
    = t(".settings")

.full-screen-table.pl-lg-1.pr-lg-1
  %table.table.table-striped.table-hover.table-bordered.table-sm.without-exterior-border
    %thead.small-header.sortable
      %tr
        %th.hiddenColumn.url_cell
          URL
        %th.hiddenColumn.created_at_cell
          = sortable "id", t(".registered")
        %th.hiddenColumn.updated_at_cell.hidden-xs-down
          = sortable "updated_by_user_at", t(".updated")
        %th.hiddenColumn.hidden-xs-down.stolen_cell
          %small
            = t(".stolen")
        %th.hiddenColumn.hidden-xs-down.propulsion_type_cell
          = sortable "propulsion_type", t(".propulsion_type")
        %th.hiddenColumn.hidden-xs-down.cycle_type_cell
          = sortable "cycle_type", t(".vehicle_type")
        %th.hiddenColumn.hidden-xs-down.manufacturer_cell
          = sortable "manufacturer_id", t(".manufacturer")
        %th.hiddenColumn.hidden-xs-down.model_cell
          = sortable "frame_model", t(".model")
        %th.hiddenColumn.hidden-xs-down.color_cell
          = t(".color")
        %th.hiddenColumn.owner_email_cell
          %small.hidden-sm-up
            = t(".mfg_model_color_html")
            %br
          = sortable "owner_email", t(".sent_to")
        %th.hiddenColumn.creation_description_cell
          Source
        %th.hiddenColumn.owner_name_cell.hidden-xs-down
          %small= t(".owner_name")
        %th.hiddenColumn.status_cell.hidden-xs-down
          %small= t(".status_cell")
        - additional_registration_fields.each do |reg_field|
          - next if reg_field == "extra_registration_number" # All organizations can see additional serial#
          %th.hiddenColumn.hidden-xs-down{class: "#{reg_field}_cell"}
            = column_renames["#{reg_field}_cell"]
        -# All organizations can see additional serial#
        %th.hiddenColumn.hidden-xs-down{class: "extra_registration_number_cell"}
          Secondary#
        - if current_organization.enabled?("bike_stickers")
          %th.hiddenColumn.hidden-xs-down.sticker_cell
            = t(".sticker")
            - if @bike_sticker.present?
              %th
                = t(".link")
        - if current_organization.enabled?("impound_bikes")
          %th.hiddenColumn.hidden-xs-down.impounded_cell=t(".impounded")
        - if show_avery_export
          %th.hiddenColumn.hidden-xs-down.avery_cell=t(".avery")

    %tbody
      - @bikes.each do |bike|
        %tr
          - cache("#{current_organization.id}-#{bike.id}-#{bike.updated_at}-#{@bike_sticker}-2") do
            %td.hiddenColumn.url_cell
              %code.small.p0{style: "word-break: normal"}
                = bike.html_url
            %td.hiddenColumn.created_at_cell
              %a.convertTime{href: bike_path(bike, organization_id: current_organization.to_param)}
                = l bike.created_at, format: :convert_time
            %td.hiddenColumn.updated_at_cell.hidden-xs-down
              %small.convertTime
                = l bike.updated_by_user_fallback, format: :convert_time
            %td.hiddenColumn.hidden-xs-down.table-cell-check.stolen_cell
              = check_mark if bike.status_stolen?
            %td.hiddenColumn.hidden-xs-down.propulsion_type_cell
              %span{class: (bike.propulsion_type == "foot-pedal" ? "less-strong" : "")}
                = bike.propulsion_titleize
            %td.hiddenColumn.hidden-xs-down.cycle_type_cell
              %span{class: (bike.cycle_type == "bike" ? "less-strong" : "")}
                = bike.type_titleize
            %td.hiddenColumn.hidden-xs-down.manufacturer_cell
              = bike.mnfg_name
            %td.hiddenColumn.hidden-xs-down.model_cell
              = bike.frame_model
            %td.hiddenColumn.hidden-xs-down.color_cell
              %span.less-strong
                = bike.frame_colors.join(", ")
            %td.hiddenColumn.owner_email_cell
              %small.hidden-sm-up
                = organized_bike_text(bike)
                %br
              - if bike.email_visible_for?(current_organization)
                = bike.owner_email
                %small= link_to "🔎", url_for(sortable_search_params.merge(search_email: bike.owner_email))
              - else
                %em.less-strong
                  = t(".email_hidden")
            %td.hiddenColumn.creation_description_cell
              - if bike.creation_description
                %small.less-strong
                  = origin_display(bike.creation_description)
            %td.hiddenColumn.owner_name_cell.hidden-xs-down
              - if bike.owner_name.present?
                %em
                  = bike.owner_name
            %td.hiddenColumn.status_cell.small
              - unless bike.status_with_owner?
                = status_display(bike.status_humanized)
            - additional_registration_fields.each do |reg_field|
              - next if reg_field == "extra_registration_number" # All organizations can see additional serial#
              %td.hiddenColumn.hidden-xs-down{class: "#{reg_field}_cell"}
                - bike_attr = OrganizationFeature.reg_field_to_bike_attrs(reg_field)
                - if bike_attr == "address"
                  - if bike.valid_mailing_address?
                    -# Don't show organization address
                    %small{style: "line-height: 1.5;"}
                      = bike.address_hash["street"]
                - elsif bike_attr == "organization_affiliation"
                  = bike.organization_affiliation(current_organization)&.humanize
                - elsif bike_attr == "student_id"
                  = bike.student_id(current_organization)&.humanize
                - else
                  = bike.send(bike_attr)
            -# All organizations can see additional serial#
            %td.hiddenColumn.hidden-xs-down{class: "extra_registration_number_cell"}
              = bike.extra_registration_number

            - if current_organization.enabled?("bike_stickers")
              %td.hidden-xs-down{class: "sticker_cell"}
                - if @bike_sticker.present?
                  %small
                    = link_to t(".link"), bike_sticker_path(id: @bike_sticker.code, organization_id: @bike_sticker.organization_id, bike_id: bike.id), method: "PUT"
                - else
                  - bike.bike_stickers.each_with_index do |bike_sticker, index|
                    - if bike_sticker.organization.present? && bike_sticker.organization_id == current_organization.id
                      = link_to bike_sticker.pretty_code, edit_organization_sticker_path(id: bike_sticker.code, organization_id: bike_sticker.organization&.to_param), class: "small"
                    - else
                      %small
                        = bike_sticker.pretty_code
                    - if index > 0
                      %br
            - if current_organization.enabled?("impound_bikes")
              %td.hiddenColumn.hidden-xs-down{class: "impounded_cell"}
                - if bike.status_impounded? && bike.current_impound_record&.created_at&.present?
                  %small.convertTime
                    = l bike.current_impound_record.created_at, format: :convert_time
          - if show_avery_export # NOTE: this is outside of the cache for the bike
            %td.hiddenColumn.hidden-xs-down{class: "avery_cell"}
              = check_mark if bike.avery_exportable?
- if @bikes.total_count > @bikes.count
  .paginate-container.paginate-container-bottom.row
    .col-sm-6.mb-2
      = paginate @bikes
    .col-sm-6.text-right
      = select_tag :per_page_select, options_for_select([10, 25, 50, 100].map { |i| ["#{i} bikes per page", i] }, selected: @per_page), {class: "form-control d-inline-block", style: "width: 15rem; margin-top:15px;"}
