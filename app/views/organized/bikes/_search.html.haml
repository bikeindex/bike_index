-# If no url_for_search passed in, default to organization bike search

- path_for_search ||= organization_bikes_path(organization_id: current_organization.to_param)
- skip_view_just_stolen ||= @bike_sticker.present?

.mb-4
  = form_tag path_for_search, id: 'bikes_search_form', class: 'bikes-search-form', method: :get do
    .query-field-wrap.nojs
      - opt_vals = @selected_query_items_options.map { |i| i.is_a?(String) ? [i, i] : [i['text'], i['search_id']]  }
      = select_tag :query_items,                                      |
        options_for_select(opt_vals, selected: opt_vals.map(&:last)), |
        placeholder: t(".search_bike_descriptions"),                  |
        class: 'form-control query-field',                            |
        multiple: true

      = text_field_tag :query, params[:query], placeholder: t(".search_bike_descriptions"), class: 'form-control query-field'
      .sidebyside-queries
        = text_field_tag :search_email, params[:search_email], placeholder: t(".search_owner_email"), class: 'form-control query-field email-field-too'
        = text_field_tag :serial, params[:serial], placeholder: t(".search_for_serial_number"), class: 'form-control query-field email-field-too'

    .search-button-wrap
      = button_tag(type: 'submit', class: 'searchit btn btn-primary') do
        :plain
          <svg id="search-button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 29 29"><defs><style>.cls-1,.cls-2{fill:none;stroke:#fff;stroke-miterlimit:10;stroke-width:2px;}.cls-2{stroke-linecap:round;}</style></defs><title>searcher</title><circle class="cls-1" cx="10.39" cy="10.39" r="9.39"/><line class="cls-2" x1="17.03" y1="17.03" x2="28" y2="28"/></svg>
    = hidden_field_tag :stolenness, @stolenness
    = hidden_field_tag :organization_id, passive_organization&.to_param
    = hidden_field_tag :sort, params[:sort]
    = hidden_field_tag :direction, params[:direction]
    = hidden_field_tag :search_stickers, params[:search_stickers]
    = hidden_field_tag :search_address, params[:search_address]

%hr{ style: "opacity: .3;" }

:ruby
  search_params = sortable_search_params.merge(@interpreted_params.merge(organization_id: current_organization.to_param))

  # TODO: Now that we have translations, we need to localize this. I believe the easiest way to do so would be to pull the text from the header cell and use that.
  column_renames = {
    "created_at_cell" => "Registered",
    "updated_at_cell" => "Updated",
    "stolen_cell" => "Stolen",
    "manufacturer_cell" => "Manufacturer",
    "model_cell" => "Model",
    "color_cell" => "Color",
    "owner_email_cell" => "Sent to",
    "owner_name_cell" => "Owner name",
    "organization_affiliation_cell" => "Affiliation",
    "extra_registration_number_cell" => "Secondary#",
    "reg_phone_cell" => "Phone",
    "reg_address_cell" => "Address",
    "sticker_cell" => "Sticker",
    "impounded_cell" => "Impounded",
    "avery_cell" => "Avery Exportable",
  }
  # Most columns are enabled by default, including organization specific registration columns
  default_columns = %w[created_at_cell
                       stolen_cell
                       manufacturer_cell
                       model_cell
                       color_cell
                       owner_email_cell
                       updated_at_cell
                       owner_name_cell]
  default_columns += current_organization.enabled?("bike_stickers") ? ["sticker_cell"] : []
  default_columns += current_organization.additional_registration_fields.map { |f| "#{f}_cell" }
  enabled_columns = default_columns
  # Some optional columns
  enabled_columns += ["extra_registration_number_cell"] unless enabled_columns.include?("extra_registration_number_cell")
  enabled_columns += ["impounded_cell"] if current_organization.enabled?("impound_bikes")
  enabled_columns += ["avery_cell"] if current_organization.enabled?("avery_export")
  # If the search_stickers param or search_address is set, start with the settings panel open
  settings_default_open = @search_stickers.present? || @search_address.present?

.collapse#organizedSearchSettings.settings-list{ "data-defaultcols" => default_columns.to_json, class: (settings_default_open ? "in" : "") }
  %h3.header-font-alt
    = t(".visible_columns")
  .row
    - enabled_columns.each do |cell_name|
      .col-xs-6.col-md-4
        .form-group
          %label
            = check_box_tag cell_name, cell_name
            = column_renames[cell_name]
  - if current_organization.enabled?("bike_stickers")
    %p.stickers-sort-btns
      = t(".stickers")
      = link_to t(".all"), organization_bikes_path(search_params.merge(search_stickers: nil)), class: "btn btn-secondary #{@search_stickers.blank? ? 'active' : ''}"
      = link_to organization_bikes_path(search_params.merge(search_stickers: "with")), class: "btn btn-secondary #{@search_stickers == 'with' ? 'active' : ''}" do
        = t(".only_with_stickers_html")
      = link_to organization_bikes_path(search_params.merge(search_stickers: "none")), class: "btn btn-secondary #{@search_stickers == 'none' ? 'active' : ''}" do
        = t(".only_no_sticker_html")
  - if current_organization.enabled?("reg_address")
    %p.stickers-sort-btns
      = t(".address")
      = link_to t(".all"), organization_bikes_path(search_params.merge(search_address: nil)), class: "btn btn-secondary #{@search_address.blank? ? 'active' : ''}"
      = link_to organization_bikes_path(search_params.merge(search_address: "with")), class: "btn btn-secondary #{@search_address == 'with' ? 'active' : ''}" do
        = t(".only_with_address_html")
      = link_to organization_bikes_path(search_params.merge(search_address: "none")), class: "btn btn-secondary #{@search_address == 'none' ? 'active' : ''}" do
        = t(".only_no_address_html")

%p.mt-4
  - if @search_query_present || params[:search_stickers].present? || params[:search_address].present?
    = t(".matching_bikes_html", bikes: pluralize(number_with_delimiter(@bikes.total_count), t(".bike")))
  - else
    = t(".registered_bikes_html",
    bikes: pluralize(number_with_delimiter(@bikes.total_count), t(".bike")),
    org_name: current_organization.short_name)
  %em
    = humanized_time_range(@time_range)
  - unless skip_view_just_stolen
    - if @stolenness == 'all'
      %a.float-right.organized-bikes-stolenness-toggle{ href: organization_bikes_path(search_params.merge(stolenness: 'stolen')), data: { stolenness: 'stolen' } }
        = t(".view_just_stolen_bikes")
    - else
      = t(".stolen_bikes_html")
      %a.organized-bikes-stolenness-toggle{ href: organization_bikes_path(search_params.merge(stolenness: 'all')), data: { stolenness: 'all' } }
        = t(".view_all_bikes")
  %a.float-right.less-strong{ href: "#organizedSearchSettings", "aria-controls" => "organizedSearchSettings", "data-toggle" => "collapse", style: "margin: 0 .5rem; color: #bbb" }
    = t(".settings")

.full-screen-table
  %table.table.table-striped.table-hover.table-bordered.table-sm.without-exterior-border
    %thead.small-header.sortable
      %tr
        %th.hiddenColumn.created_at_cell
          = sortable "id", t(".registered")
        %th.hiddenColumn.updated_at_cell.hidden-xs-down
          = sortable "updated_at", t(".updated")
        %th.hiddenColumn.hidden-xs-down.stolen_cell
          %small
            = sortable "stolen", t(".stolen")
        %th.hiddenColumn.hidden-xs-down.manufacturer_cell
          = sortable "manufacturer_id", t(".manufacturer")
        %th.hiddenColumn.hidden-xs-down.model_cell
          = sortable "frame_model", t(".model")
        %th.hiddenColumn.hidden-xs-down.color_cell
          = t(".color")
        %th.hiddenColumn.owner_email_cell
          %small.hidden-sm-up
            = t(".mfg_model_color_html")
            %br
          = sortable "owner_email", t(".sent_to")
        %th.hiddenColumn.owner_name_cell.hidden-xs-down
          %small
            = t(".owner_name")
        - current_organization.additional_registration_fields.each do |reg_field|
          - next if reg_field == "extra_registration_number" # All organizations can see additional serial#
          %th.hiddenColumn.hidden-xs-down{ class: "#{reg_field}_cell" }
            = column_renames["#{reg_field}_cell"]
        -# All organizations can see additional serial#
        %th.hiddenColumn.hidden-xs-down{ class: "extra_registration_number_cell" }
          Secondary#
        - if current_organization.enabled?("bike_stickers")
          %th.hiddenColumn.hidden-xs-down.sticker_cell
            = t(".sticker")
            - if @bike_sticker.present?
              %th
                = t(".link")
        - if current_organization.enabled?("avery_export")
          %th.hiddenColumn.hidden-xs-down.avery_cell=t(".avery")
        - if current_organization.enabled?("impound_bikes")
          %th.hiddenColumn.hidden-xs-down.impounded_cell=t(".impounded")

    %tbody
      - @bikes.each do |bike|
        %tr
          - cache("#{current_organization.id}-#{bike.id}-#{bike.updated_at}") do
            %td.hiddenColumn.created_at_cell
              %a.convertTime{ href: bike_path(bike, organization_id: current_organization.to_param) }
                = l bike.created_at, format: :convert_time
            %td.hiddenColumn.updated_at_cell.hidden-xs-down
              %small.convertTime
                = l bike.updated_at, format: :convert_time
            %td.hiddenColumn.hidden-xs-down.table-cell-check.stolen_cell
              = check_mark if bike.stolen?
            %td.hiddenColumn.hidden-xs-down.manufacturer_cell
              = bike.mnfg_name
            %td.hiddenColumn.hidden-xs-down.model_cell
              = bike.frame_model
            %td.hiddenColumn.hidden-xs-down.color_cell
              %span.less-strong
                = bike.frame_colors.join(", ")
            %td.hiddenColumn.owner_email_cell
              %small.hidden-sm-up
                = organized_bike_text(bike)
                %br
              - if bike.email_visible_for?(current_organization)
                = bike.owner_email
              - else
                %em.less-strong
                  = t(".email_hidden")
              - if bike.creation_description
                %small.less-strong
                  = origin_display(bike.creation_description)
            %td.hiddenColumn.owner_name_cell.hidden-xs-down
              - if bike.owner_name.present?
                %em
                  = bike.owner_name
            - current_organization.additional_registration_fields.each do |reg_field|
              - next if reg_field == "extra_registration_number" # All organizations can see additional serial#
              %td.hiddenColumn.hidden-xs-down{ class: "#{reg_field}_cell" }
                - bike_attr = OrganizationFeature.reg_field_bike_attrs[reg_field.to_sym]
                - if bike_attr == "registration_address"
                  - if bike.registration_address.present?
                    %small
                      = bike.registration_address["street"]
                - elsif bike_attr == "organization_affiliation"
                  = bike.organization_affiliation.humanize
                - else
                  = bike.send(bike_attr)
            -# - if current_organization.enabled?("avery_export")
            -#   %td.hiddenColumn{ class: "avery_export" }

            -# All organizations can see additional serial#
            %td.hiddenColumn.hidden-xs-down{ class: "extra_registration_number_cell" }
              = bike.extra_registration_number

            - if current_organization.enabled?("bike_stickers")
              %td.hidden-xs-down{ class: "sticker_cell" }
                - if @bike_sticker.present?
                  %small
                    = link_to t(".link"), bike_sticker_path(id: @bike_sticker.code, organization_id: @bike_sticker.organization_id, bike_id: bike.id), method: "PUT"
                - else
                  - bike.bike_stickers.each_with_index do |bike_sticker, index|
                    - if bike_sticker.organization.present? && bike_sticker.organization_id == current_organization.id
                      = link_to bike_sticker.code, edit_organization_sticker_path(id: bike_sticker.code, organization_id: bike_sticker.organization&.to_param), class: "small"
                    - else
                      %small
                        = bike_sticker.code
                    - if index > 0
                      %br
          - if current_organization.enabled?("avery_export")
            %td.hiddenColumn.hidden-xs-down{ class: "avery_cell" }
              = check_mark if bike.avery_exportable?
          - if current_organization.enabled?("impound_bikes")
            %td.hiddenColumn.hidden-xs-down{ class: "impounded_cell" }
              - if bike.status_impounded? && bike.current_impound_record&.created_at&.present?
                %small.convertTime
                  = l bike.current_impound_record.created_at, format: :convert_time

.paginate-container.paginate-container-bottom
  = paginate @bikes
