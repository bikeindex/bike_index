.organized-page-header.mb-4
  %h1.uncap= translate_with_args(".register_bikes_from_a_csv")

.mt-4.pt-4.mb-4.pb-4
  %h5= translate_with_args(".notes_on_successfully_importing")
  %ul
    %li= translate_with_args(".you_must_upload_a_dot_csv_html")
    %li= translate_with_args(".for_best_results")
    %li= translate_with_args(".your_headers_must_match_html")
    %li= translate_with_args(".doing_an_import")

- render_tabs = @permitted_kinds.count > 1

- if render_tabs
  %ul.nav.nav-tabs.mb-4.mt-4
    - @permitted_kinds.each do |kind|
      - link_class = @active_kind == kind ? "active" : ""
      %li.nav-item
        %a.nav-link{class: link_class, href: "#tab-#{kind}", "data-toggle" => "tab", "data-role" => "tab"}
          - if kind == "organization_import"
            Bikes with their owner
          - else
            #{BulkImport.kind_humanized(kind).titleize} bikes
- elsif @permitted_kinds.count == 1
  - kind = @permitted_kinds.first
  %h2.uncap.mt-4.mt-4
    Importing
    - if kind == "organization_import"
      Bikes with their owner
    - else
      #{BulkImport.kind_humanized(kind).titleize} bikes
%div.mt-4.pb-4{class: (render_tabs ? "tab-content" : "")}
  - if @permitted_kinds.include?("organization_import")
    - tab_classes = "tab-pane fade"
    - tab_classes += " in active" if @active_kind == "organization_import"
    %div{id: "tab-organization_import", role: "tabpanel", class: (render_tabs ? tab_classes : "")}
      .mb-4
        %p
          %strong
            = translate_with_args(".must_have_required_headers_html")
          = translate_with_args(".required_headers_are_html")

        %p
          - link_to_example_csv = link_to translate_with_args(".our_example_csv_here"), "https://raw.githubusercontent.com/bikeindex/bike_index/main/public/import_only_required.csv"
          #{t(".look_at_example_csv_and_html", link_to_example_csv: link_to_example_csv)} #{link_to(t(".example_csv_with_all_options"), "https://raw.githubusercontent.com/bikeindex/bike_index/main/public/import_all_optional_fields.csv")}.

      = form_for @bulk_import, {url: organization_bulk_imports_path(organization_id: current_organization.to_param), action: "create", html: {class: "organized-form"}} do |f|
        = f.hidden_field :kind, value: "organization_import"
        .card.col-sm-6
          .card-block
            = f.label :file, translate_with_args(".csv_file_with_bikes")
            .form-group.row.file-upload-wrapper
              .form-well-input
                %label.file
                  = f.file_field :file, class: "avatar-upload-field"
                  %span.file-custom
                    %span.file-upload-text= translate_with_args(".choose_file")

            .form-group.row
              .form-well-input
                = f.submit translate_with_args(".upload_and_begin_import"), class: "btn btn-secondary btn-lg"

  - if @permitted_kinds.include?("impounded")
    - tab_classes = "tab-pane fade"
    - tab_classes += " in active" if @active_kind == "impounded"
    %div{id: "tab-impounded", role: "tabpanel", class: (render_tabs ? tab_classes : "")}
      .mb-4
        %p
          %strong
            = translate_with_args(".must_have_required_headers_html")
          -# only  show this warning if they can see other import kinds
          - if @permitted_kinds.count > 1
            %strong.text-warning.upcase Note:
            These headers
            %em are different from
            importing "bikes with their owner"
        %p
          The required headers for
          %em impounded imports
          are <code>manufacturer</code>, <code>model</code>, <code>color</code>, <code>serial</code> and <code>impounded_at</code>.
        %p
          <code>impounded_at</code> should be formatted <strong>YYYY-MM-DD</strong> - #{link_to "ISO 8601", "https://www.w3.org/QA/Tips/iso-date"}
          %span.less-strong
            (e.g. if including time, "#{Time.current.iso8601}")

        %p
          Look at
          = link_to "our example impounded CSV here", "https://raw.githubusercontent.com/bikeindex/bike_index/main/public/import_impounded_only_required.csv"
          and also our
          = link_to "example impounded CSV with all optional columns", "https://raw.githubusercontent.com/bikeindex/bike_index/main/public/import_impounded_all_optional_fields.csv"


      = form_for @bulk_import, {url: organization_bulk_imports_path(organization_id: current_organization.to_param), action: "create", html: {class: "organized-form"}} do |f|
        = f.hidden_field :kind, value: "impounded"
        .card.col-sm-6
          .card-block
            = f.label :file, "CSV File with impounded bikes"
            .form-group.row.file-upload-wrapper
              .form-well-input
                %label.file
                  = f.file_field :file, class: "avatar-upload-field"
                  %span.file-custom
                    %span.file-upload-text= translate_with_args(".choose_file")

            .form-group.row
              .form-well-input
                = f.submit translate_with_args(".upload_and_begin_import"), class: "btn btn-secondary btn-lg"
  - if @permitted_kinds.include?("stolen")
    - tab_classes = "tab-pane fade"
    - tab_classes += " in active" if @active_kind == "stolen"
    %div{id: "tab-stolen", role: "tabpanel", class: (render_tabs ? tab_classes : "")}
      .mb-4
        %p
          %strong
            = translate_with_args(".must_have_required_headers_html")
          = translate_with_args(".required_headers_are_html")

        %p
          - link_to_example_csv = link_to translate_with_args(".our_example_csv_here"), "https://raw.githubusercontent.com/bikeindex/bike_index/main/public/import_only_required.csv"
          #{t(".look_at_example_csv_and_html", link_to_example_csv: link_to_example_csv)} #{link_to(t(".example_csv_with_all_options"), "https://raw.githubusercontent.com/bikeindex/bike_index/main/public/import_all_optional_fields.csv")}.

        %p
          This is intended for importing multiple bikes that were stolen at the same time and place - something that's unfortunately become more common recently.
          %em Stolen imports
          all get the stolen attributes entered in the form below. If you want to import bikes with different stolen information, please contact #{link_to "gavin@bikeindex.org", "mailto:gavin@bikeindex.org"}.
        %p
          New registrations will be created for all of the bikes. No emails will be sent on registration.

      = form_for @bulk_import, {url: organization_bulk_imports_path(organization_id: current_organization.to_param), action: "create", html: {class: "organized-form"}} do |f|
        = f.hidden_field :kind, value: "stolen"
        - @bike = Bike.new
        - @stolen_record = @bike.stolen_records.new(phone: current_user.current_user_phone)
        - @bike.current_stolen_record = @stolen_record
        - @edit_templates = ["theft_details"]
        - @edit_template = "theft_details"

        .card.col-sm-8
          .card-block
            .form-well
              = fields_for @stolen_record do |srecord|
                = render partial: "/bikes_edit/theft_details_partial", locals: {srecord: srecord, rendering_bulk_import: true}

              .mt-5
              = f.label :file, translate_with_args(".csv_file_with_bikes")
              .form-group.row.file-upload-wrapper
                .form-well-input
                  %label.file
                    = f.file_field :file, required: true, class: "avatar-upload-field"
                    %span.file-custom
                      %span.file-upload-text= translate_with_args(".choose_file")

              .form-group.row
                .form-well-input
                  = f.submit translate_with_args(".upload_and_begin_import"), class: "btn btn-secondary btn-lg"


%hr.mt-4
%h5.mt-4
  = translate_with_args(".optional_additions")
%ul
  %li= translate_with_args(".we_support_a_few_additional")
  %li= translate_with_args(".if_only_some_of_your_bikes_html")
  - if current_organization.enabled?("bike_stickers")
    %li= translate_with_args(".importing_stickers_html")
  %li
    = translate_with_args(".if_you_are_including_photo_url_html")
    %ul{style: "word-break: break-word;"}
      %li.mt-3{style: "line-height: 1.5;"}
        = translate_with_args(".correct_actual_image_url_html")
        - spokecard_image_url = "https://upload.wikimedia.org/wikipedia/commons/6/68/Bike_Index_registration_spokecard.jpg"
        = link_to spokecard_image_url, spokecard_image_url, style: "word-wrap: break-word;", class: "small"
      %li.mt-3{style: "line-height: 1.5;"}
        = translate_with_args(".incorrect_image_on_webpage_html")
        - spokecard_page_url = "https://en.wikipedia.org/wiki/Bike_Index#/media/File:Bike_Index_registration_spokecard.jpg"
        = link_to spokecard_page_url, spokecard_page_url, style: "word-wrap: break-word;", class: "small"
        %em.text-danger
          \-
          = translate_with_args(".this_will_not_work")
