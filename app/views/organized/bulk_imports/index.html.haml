.organized-page-header.mb-4
  %h1.uncap
    - if current_organization.ascend_pos?
      = t(".org_ascend_imports_html", org_name: current_organization.name)
    - else
      = t(".org_bulk_imports_html", org_name: current_organization.name)

- if @render_chart
  = column_chart time_range_counts(collection: available_bulk_imports), stacked: true, thousands: ",", defer: true

.text-right.mb-2
  %a.btn.btn-sm.less-strong.btn-outline-secondary{ href: organization_bulk_imports_path(sortable_search_params.merge(organization_id: current_organization.to_param, render_chart: !@render_chart)), class: (@render_chart ? "active" : "") }
    Render chart

.mt-2
  = render partial: "/shared/period_select"

.row.pt-4.mt-4.mb-4
  .col-sm-6
    = pluralize(number_with_delimiter(@bulk_imports.total_count), "matching import")
    %em
      = humanized_time_range(@time_range)
  .col-sm-6.text-right
    - if @show_empty
      = link_to t(".exclude_empty_imports"),
      organization_bulk_imports_path(organization_id: current_organization.to_param, without_empty: true),
      class: "btn btn-sm btn-outline-secondary"
    - else
      = link_to t(".include_empty_imports"),
      organization_bulk_imports_path(organization_id: current_organization.to_param),
      class: "btn btn-sm btn-outline-secondary"
    = link_to t(".new_import"),
      new_organization_bulk_import_path(organization_id: current_organization.to_param),
      class: "btn btn-primary ml-2"

%table.table.table-striped.table-hover.table-bordered.table-sm.without-exterior-border
  %thead.small-header
    %th
      = sortable "created_at", t(".added")
    %th= t(".progress")
    - if @show_kind
      %th
        = sortable "kind", t(".kind")
    %th= t(".errors")
    %th
      = sortable "user_id", t(".creator")
    %th= t(".bikes")
  %tbody
    - @bulk_imports.each do |bulk_import|
      %tr
        %td
          %a.convertTime{ href: organization_bulk_import_path(bulk_import, organization_id: current_organization.to_param) }
            = l bulk_import.created_at, format: :convert_time
        - if @show_kind
          %td
            = bulk_import.kind_humanized
        %td
          - if bulk_import.blocking_error?
            %span.text-danger
              = t(".unable_to_process")
          - else
            - bulk_import_progress_class = bulk_import.progress == "finished" ? "text-success" : ""
            %span{ class: bulk_import_progress_class }
              = bulk_import.progress
        %td
          - if bulk_import.line_import_errors.present?
            %span.text-danger= t(".line")
          - if bulk_import.file_import_errors.present?
            %span.text-danger= t(".file")
        %td
          = bulk_import.user.display_name if bulk_import.user_id.present?
        %td
          = bulk_import.creation_states.count # Don't need to do bikes through creation states

.paginate-container.paginate-container-bottom
  = paginate @bulk_imports
