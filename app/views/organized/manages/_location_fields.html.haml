<script>window.unitedStatesID = #{Country.united_states.id};</script>
-# Note - this has to have a separate div with collapse, because the fieldset breaks styles
-# The collapse class is what the slideup is called on
- organization ||= @organization || current_organization
- default_country ||= organization.locations.first&.country_id || current_user&.country_id || Country.united_states.id
- default_name ||= organization.name

- f.object.country_id ||= default_country
- f.object.name ||= default_name
- f.object.state_id ||= organization.locations.first&.state_id || current_user&.state_id
- state_class = (f.object.country_id == Country.united_states.id) ? "unhidden" : ""

-# This is primarily used for the new form
-# BUT! We didn't use to require location, so it's included in the main manage page for orgs without locations
- initial_location_form ||= false

- if initial_location_form
  .form-group.row
    %label.org-form-label
      = f.label :street, t(".address")
    .col-sm-4.address-group
      = f.text_field :city, required: true, placeholder: t(".city"), class: "form-control"
      = f.text_field :zipcode, placeholder: t(".zipcode"), required: true, class: "form-control"
      .row.countrystatezip
        .col-sm-6.fancy-select.unfancy.no-restore-on-backspace#us_id_data{data: {usid: Country.united_states.id}}
          = f.select :country_id, Country.select_options, {prompt: t(".choose_country")}, {class: "form-control country-select-input"}
        .col-sm-6.fancy-select.unfancy.no-restore-on-backspace.hidden-other{class: state_class}
          = f.collection_select(:state_id, State.all, :id, :name, {prompt: t(".state")}, {include_blank: true, class: "form-control"} )

- else
  .col-md-6.collapse.in
    %fieldset.card.location-card
      .card-block
        .row
          .col-sm-6
            .form-group
              = f.label :name, t(".location_name")
              = f.text_field :name, placeholder: t(".name"), required: true, class: "form-control location-name-field"
          .col-sm-6
            .form-group
              = f.label :phone, t(".phone_number")
              = f.text_field :phone, class: "form-control"

        .form-group.address-group
          = f.label :street, t(".address")
          = f.text_field :street, placeholder: t(".street"), class: "form-control"
          = f.text_field :city, required: true, placeholder: t(".city"), class: "form-control"
          .row.countrystatezip
            .col-sm-4.fancy-select.unfancy.no-restore-on-backspace#us_id_data{data: {usid: Country.united_states.id}}
              = f.select :country_id, Country.select_options, {prompt: t(".choose_country")}, {class: "form-control country-select-input"}
            .col-sm-4
              = f.text_field :zipcode, placeholder: t(".zipcode"), required: true, class: "form-control"
            .col-sm-4.fancy-select.unfancy.no-restore-on-backspace.hidden-other{class: state_class}
              = f.collection_select(:state_id, State.all, :id, :name, {prompt: t(".state")}, {include_blank: true, class: "form-control"} )
        .row
          .col-xs-6
            .collapse.publiclyVisibilyCheck{class: (organization.show_on_map ? "in" : "")}
              .checkbox
                = f.check_box :publicly_visible
                = f.label :publicly_visible
          .col-xs-6
            .remove-control.collapse.in
              - if f.object.destroy_forbidden?
                .text-right
                  %em.small.less-strong
                    required for impounded bikes
              - else
                = f.check_box :_destroy, class: "removeFieldsCheck"
                = f.label :_destroy, t(".remove"), class: "remove_fields"
        - if organization.enabled?("impound_bikes")
          .checkbox.mb-0.mt-2
            = f.check_box :impound_location, class: "impoundLocationCheck"
            = f.label :impound_location, class: "d-inline" do
              Impound location
              %em.small.less-strong
                &nbsp;If #{organization.short_name} has multiple locations where impounded bikes go and wants to track them
          .checkbox.mb-0.defaultImpoundLocationCheckWrapper.collapse
            = f.check_box :default_impound_location, class: "defaultImpoundLocationCheck"
            = f.label :default_impound_location
