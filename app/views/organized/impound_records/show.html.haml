-# Need to set ivars here because we rerender the page if update fails
- @bike = @impound_record.bike
- @parking_notification = @impound_record.parking_notification
- impound_record_updates = @impound_record.impound_record_updates.reorder(created_at: :desc)
- locations_enabled = current_organization.enabled?("impound_bikes_locations")

- # TODO: add translations
.organized-page-header
  %h1
    Impound Record
    - if @bike.present? && @bike.created_by_parking_notification
      %small.text-warning
        for
        %em
          unregistered #{@bike.type}

.row
  .col-md-6
    %table.table-list
      %tbody
        %tr
          %td ID
          %td
            %strong= @impound_record.display_id
            - if display_dev_info?
              %small.only-dev-visible.ml-2
                %em.less-strong real id:
                %code
                  = @impound_record.id
        %tr
          %td Created
          %td
            %span.convertTime.preciseTime
              = l(@impound_record.created_at, format: :convert_time)
        %tr
          %td Impounded by
          %td= @impound_record.creator&.display_name
        - if @impound_record.resolved?
          %tr
            %td Resolved
            %td
              %span.convertTime.preciseTime
                = l(@impound_record.resolved_at, format: :convert_time)
          %tr
            %td By
            %td= @impound_record.user&.display_name
        %tr
          %td Bike
          %td
            - if @bike.present?
              = link_to organized_bike_text(@bike), bike_path(@bike, organization_id: current_organization.to_param)
            - if display_dev_info? && @impound_record.impound_claim_retrieved?
              - og_bike = Bike.unscoped.find_by_id(@impound_record.bike_id)
              .only-dev-visible
                %em.small.less-strong Retrieved by impound claim, original bike:
                %br
                = link_to organized_bike_text(og_bike), bike_path(og_bike, organization_id: current_organization.to_param)
  .col-md-6
    %table.table-list
      %tbody
        %tr
          %td Status
          %td
            %strong
              = status_display(@impound_record.status_humanized)
        - if locations_enabled
          %tr
            %td Location
            %td= @impound_record.location&.name
        - if impound_record_updates.any?
          %tr
            %td Updated
            %td
              %span.convertTime.preciseTime
                = l(@impound_record.updated_at, format: :convert_time)
        %tr
          %td last update by
          %td= @impound_record.user&.display_name
        - if @impound_record.resolving_update.present?
          %tr
            %td Resolved
            %td
              - if @impound_record.resolved_at.present?
                %span.convertTime.preciseTime
                  = l(@impound_record.resolved_at, format: :convert_time)

.row.mt-4.mb-4
  - if @impound_record.active?
    .col-md-8.offset-md-2.col-xl-6.offset-xl-0
      .card
        - @impound_record_update ||= ImpoundRecordUpdate.new
        = form_for @impound_record_update, url: organization_impound_record_path(@impound_record.display_id, organization_id: current_organization), action: "update", method: :patch do |f|
          -# This gets us the correct kinds for the current impound_record - e.g. no retrieved_by_owner for unregistered_parking_notification
          - kinds_for_select = ImpoundRecordUpdate.kinds_humanized.slice(*@impound_record.update_kinds.map(&:to_sym))
          -# Never include claim_approved or denied, even if they're valid update kinds - they have to be done through impound_claims
          -# Also - never display "current" because it can't be updated that way
          - kinds_for_select = kinds_for_select.except(:claim_approved, :claim_denied, :current)

          .card-block
            .card-title
              %h3.uncap
                Update impound record
              - if @approved_impound_claim
                - @impound_record_update.kind ||= "retrieved_by_owner"
              - elsif @parking_notification.present? && @parking_notification.unregistered_bike?
                / -# If this is for an unregistered bike, we don't want to show "retrieved by owner"

                %p{ style: "margin: -12px 0 24px; line-height: 1.5;" }
                  %span.text-warning Unregistered bikes
                  cannot be updated with
                  %em
                    = ImpoundRecordUpdate.kinds_humanized[:retrieved_by_owner]
                  %br
                  %small
                    Use either <em>transferred to a new owner</em> or <em>removed from Bike Index</em>.

            .card-body#impoundRecordUpdateForm
              - if @approved_impound_claim
                .collapse.collapseKind.kind_retrieved_by_owner
                  %p.mb-4{ style: "line-height: 1.25em;" }
                    Click <em>Update</em> to record this retrieved by the #{link_to "approved claim", organization_impound_claim_path(@approved_impound_claim.id, organization_id: current_organization.id)}
              .row
                .col-sm-6#kindUpdate.mb-2
                  = f.select :kind,
                    options_for_select(kinds_for_select.map { |k, v| [v.titleize, k] }, @impound_record_update.kind),
                    {},
                    class: "form-control"
                - if locations_enabled
                  .col-sm-6.collapse.collapseKind.kind_move_location.mb-2
                    - @impound_record_update.location_id ||= current_organization.default_impound_location&.id
                    = f.select :location_id,
                      options_for_select(current_organization.locations.impound_locations.map { |l| [l.name, l.id] }),
                      {},
                      class: "form-control"
                .col-sm-6.collapse.collapseKind.kind_transferred_to_new_owner.mb-2
                  = f.email_field :transfer_email, placeholder: "New owner email", class: "form-control"
              .row
                .col-xs-12
                  = f.text_area :notes, placeholder: "Internal note", class: "form-control"
                .col-xs-12.mt-2
                  = submit_tag "Update impound record", class: "btn btn-success btn-md-lg"

  - if impound_record_updates.any?
    %div{class: (@impound_record.active? ? "col-xl-6" : "col-xl-10")}
      %h3.uncap.mt-2.mb-2 Updates to this record
      = render partial: "/organized/impound_records/impound_record_updates_table", locals: {impound_record_updates: impound_record_updates}

- if current_organization.impound_claims?
  %h3.uncap.mt-4.pt-4
    Active claims for this #{@impound_record.bike.type}
    %small
      = link_to "view all claims (#{@impound_record.impound_claims.count})", organization_impound_claims_path(sortable_search_params.merge(search_impound_record_id: @impound_record.id, search_status: "all")), class: "gray-link"
  - if @impound_record.impound_claims.any?
    .full-screen-table
      - impound_claims = @impound_record.impound_claims.reorder(created_at: :desc)
      = render partial: "/organized/impound_claims/table", locals: { impound_claims: impound_claims, render_resolved_at: true, skip_impound_record: true }
  - else
    %p.less-strong
      No impound claims yet

- if @parking_notification.present?
  %hr.mt-4
  %h2.uncap
    Impounded by
    %em
      = link_to "this notification", organization_parking_notification_path(@parking_notification, organization_id: current_organization.to_param)

  = render partial: "/organized/parking_notifications/show_details", locals: { viewing_impound_record: true }
