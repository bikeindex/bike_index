.organized-page-header
  %h1
    = t(".parking_notification")
    - if @parking_notification.unregistered_bike
      %span.text-warning
        for
        %em unregistered
        = @bike.type

- # TODO: add translations
.row
  .col-md-6
    %table.table-list
      %tbody
        %tr
          %td= t(".created")
          %td
            %span.convertTime
              = l(@parking_notification.created_at, format: :convert_time)
        %tr
          %td= t(".by")
          %td= @parking_notification.user.display_name
        %tr
          %td Kind
          %td
            %strong
              = @parking_notification.kind_humanized
            notification
        %tr
          %td
            Status
          %td
            - if @parking_notification.current?
              %em.less-strong
                This is the most recent parking notification
            - elsif @parking_notification.superseded?
            - elsif @parking_notification.impounded?
            - elsif @parking_notification.retrieved?

        %tr
          %td= t(".bike")
          %td
            - if @bike.present?
              = link_to organized_bike_text(@bike), bike_path(@bike, organization_id: current_organization.to_param)
              %br
              %small
                = link_to organization_parking_notifications_path(organization_id: current_organization.to_param, search_bike_id: @bike.id), class: "gray-link" do
                  view all notifications for
                  %em
                    = @bike.type
  .col-md-6
    %table.table-list
      %tbody
        %tr
          %td= t(".address")
          %td= address_formatted(@parking_notification)
        %tr
          %td Location
          %td
            - if @parking_notification.location_from_address
              Address entered
            - else
              From GPS
            - if current_user.developer? && @parking_notification.accuracy.present?
              %small
                %span.less-strong developer info:
                %code
                  #{@parking_notification.accuracy} accuracy

        %tr
          %td= t(".notification_number")
          %td
            - if @parking_notification.initial_record?
              %span.less-strong First notification
            - else
              \ ##{@parking_notification.notification_number}
              %em.small.less-strong.ml-2
                first notification on
                %a.convertTime{ href: organization_parking_notification_path(@parking_notification.initial_record_id, organization_id: current_organization.to_param) }
                  - if @parking_notification.initial_record.present?
                    = l(@parking_notification.initial_record.created_at, format: :convert_time)
                  - else
                    = @parking_notification.initial_record_id
        %tr
          %td= t(".message")
          %td= @parking_notification.message
        %tr
          %td= t(".internal_notes")
          %td= @parking_notification.internal_notes

#map_canvas{ style: "height: 400px;" }

<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
<script src="https://maps.googleapis.com/maps/api/js?key=#{ENV["GOOGLE_MAPS"]}&sensor=false" type="text/javascript">
</script>

:plain
  <script type="text/javascript">
    var map;
    function initialize() {
      var center = new google.maps.LatLng(#{@parking_notification.latitude}, #{@parking_notification.longitude});
      var myOptions = {
        zoom: 13,
        center: center,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

      new google.maps.Marker({
        position: new google.maps.LatLng(#{@parking_notification.latitude}, #{@parking_notification.longitude}),
        map: map
      });
    }
    $(document).ready(function() {
      google.maps.event.addDomListener(window, "load", initialize);
    });
  </script>

- if @parking_notification.active?
  .row
    .mt-4.mb-4.col-md-8.offset-md-2.col-xl-6.offset-xl-3
      .card
        = form_for ParkingNotification.new, url: organization_parking_notifications_path(organization_id: current_organization) do |f|
          = hidden_field_tag :ids, @parking_notification.id
          .card-block
            .card-title
              %h3.uncap
                - if @parking_notification.send_email?
                  Send repeat notification
                - else
                  Repeat notification
            .card-body
              .row
                .col-xs-6
                  = select_tag :kind, options_for_select(ParkingNotification.kinds_humanized.map { |k, v| [v, k] }, selected: @parking_notification.kind), class: "form-control"
                .col-xs-6.text-center
                  = submit_tag "Create notification", class: "btn btn-success btn-md-lg"

- if @related_notifications.any?
  %h3{ style: "margin-top: 60px;" }
    Related Notifications
  = render partial: "/organized/parking_notifications/table", locals: { parking_notifications: @related_notifications, skip_bike: true, skip_map_cell: true }

- if @parking_notification.send_email?
  %h2.uncap.mt-4 Preview of email sent:
  .email-preview
    <iframe src="#{email_organization_parking_notification_path(@parking_notification, organization_id: current_organization.to_param)}"></iframe>
- else
  %p.text-warning.mt-4
    %em
      - if @parking_notification.unregistered_bike?
        No email sent because this #{@bike.type} isn't registered
      - else
        No email sent because we were unable to determine who to send the email to
