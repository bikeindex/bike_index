- related_notifications ||= @parking_notification.associated_notifications.reorder(id: :desc)
- viewing_impound_record ||= false

- # TODO: add translations
.row
  .col-md-6
    %table.table-list
      %tbody
        %tr
          %td= t(".created")
          %td
            %span.convertTime
              = l(@parking_notification.created_at, format: :convert_time)
        %tr
          %td= t(".by")
          %td= @parking_notification.user.display_name
        %tr
          %td Kind
          %td
            %strong
              = @parking_notification.kind_humanized
            notification
        %tr
          %td
            Status
          %td
            - if @parking_notification.current?
              %em.less-strong
                This is the current parking notification for this #{@bike.type}
            - elsif @parking_notification.replaced?
              %em.less-strong
                This parking notification has been replaced by
                = link_to "notification ##{@parking_notification.current_associated_notification.notification_number}", organization_parking_notification_path(@parking_notification.current_associated_notification, organization_id: current_organization.to_param)
            - elsif @parking_notification.impounded?
              %strong.text-danger
                This #{@bike.type} was impounded
              - unless viewing_impound_record
                %ul
                  - if !@parking_notification.impound_notification?
                    - impound_notification = @parking_notification.associated_notifications.impound_notification.last
                    %li
                      View the
                      = link_to "Impound notification", organization_parking_notification_path(impound_notification, organization_id: current_organization.to_param)
                      %small
                        %em
                          created
                          %span.convertTime.preciseTime
                            = l(impound_notification.created_at, format: :convert_time)
                        by #{impound_notification.user.display_name}
                  %li
                    - if @parking_notification.impound_record_id.present?
                      View the
                      = link_to "impound record", organization_impound_record_path(@parking_notification.impound_record&.display_id, organization_id: current_organization.to_param)
                    - else
                      %small.less-strong
                        Impound record not found. Try reloading the page?
            - elsif @parking_notification.retrieved?
              %span.text-warning
                This #{@bike.type} has been retrieved!
              %br
                - retrieved_notification = @parking_notification.associated_retrieved_notification
                - if retrieved_notification.present?
                  Marked retrieved
                  %span.convertTime.preciseTime
                    = l(retrieved_notification.created_at, format: :convert_time)
                  by
                  - if retrieved_notification.organization_recovery?
                    #{current_organization.short_name} (<em>#{retrieved_notification.retrieved_by.display_name}</em>)
                  - else
                    the user
                  - if current_user.developer?
                    %br
                    %small.only-dev-visible
                      %span.less-strong developer info:
                      %code
                        #{retrieved_notification.retrieved_kind}
                      %em.less-strong
                        notification:
                        = link_to "##{retrieved_notification.id}", organization_parking_notification_path(retrieved_notification, organization_id: current_organization.to_param)
                - else
                  %em.text-danger Unable to find retrieved information!

        %tr
          %td= t(".bike")
          %td
            - if @bike.present?
              = link_to organized_bike_text(@bike), bike_path(@bike, organization_id: current_organization.to_param)
              %br
              %small
                = link_to organization_parking_notifications_path(organization_id: current_organization.to_param, search_bike_id: @bike.id), class: "gray-link" do
                  view all notifications for
                  %em
                    = @bike.type
  .col-md-6
    %table.table-list
      %tbody
        %tr
          %td= t(".address")
          %td= address_formatted(@parking_notification)
        %tr
          %td Location
          %td
            - if @parking_notification.location_from_address
              Address entered
            - else
              From GPS
            - if current_user.developer?
              %small.only-dev-visible.ml-2
                %span.less-strong developer info:
                #{@parking_notification.to_coordinates}

                - if @parking_notification.accuracy.present?
                  %code
                    #{@parking_notification.accuracy} accuracy

        %tr
          %td= t(".notification_number")
          %td
            - if @parking_notification.initial_record?
              %span.less-strong First notification
            - else
              %strong
                = @parking_notification.notification_number
              %em.small.less-strong.ml-1
                first notification sent
                %a.convertTime{ href: organization_parking_notification_path(@parking_notification.initial_record_id, organization_id: current_organization.to_param) }
                  - if @parking_notification.initial_record.present?
                    = l(@parking_notification.initial_record.created_at, format: :convert_time)
                  - else
                    = @parking_notification.initial_record_id
        %tr
          %td= t(".message")
          %td= @parking_notification.message
        %tr
          %td= t(".internal_notes")
          %td= @parking_notification.internal_notes

#map_canvas{ style: "height: 400px;" }

<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
<script src="https://maps.googleapis.com/maps/api/js?key=#{ENV["GOOGLE_MAPS"]}&sensor=false" type="text/javascript">
</script>

-# TODO: Put this into the actual JS files :/
:plain
  <script type="text/javascript">
    var map;
    function initialize() {
      var center = new google.maps.LatLng(#{@parking_notification.latitude}, #{@parking_notification.longitude});
      var myOptions = {
        zoom: 13,
        center: center,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

      new google.maps.Marker({
        position: new google.maps.LatLng(#{@parking_notification.latitude}, #{@parking_notification.longitude}),
        map: map
      });
    }
    $(document).ready(function() {
      google.maps.event.addDomListener(window, "load", initialize);
    });
  </script>

-# Never will show on impound record page, because it will never be active.
- if @parking_notification.active?
  .row
    -# similar form on parking notification index
    .mt-4.mb-4.col-md-8.offset-md-2.col-xl-6.offset-xl-3
      .card
        = form_for ParkingNotification.new, url: organization_parking_notifications_path(organization_id: current_organization) do |f|
          = hidden_field_tag :ids, @parking_notification.id
          .card-block
            .card-title
              %h3.uncap
                - if @parking_notification.send_email?
                  Send follow up notification
                - else
                  Create follow up notification
                or mark retrieved
            .card-body
              -# Matching form is on parking notification index
              .row#sendRepeatOrRetrieveFields
                .col-xs-6
                  = select_tag :kind, options_for_select(parking_notification_repeat_kinds, selected: @parking_notification.kind), class: "form-control"
                .col-xs-6.text-center
                  = submit_tag "Create notification", class: "btn btn-success btn-md-lg"

- if related_notifications.any?
  %h2.uncap{ style: "margin-top: 60px;" }
    Related Notifications
    %em
      (#{related_notifications.count + 1} total)
  = render partial: "/organized/parking_notifications/table", locals: { parking_notifications: related_notifications, skip_bike: true, skip_map_cell: true }

- if @parking_notification.send_email?
  %h2.uncap.mt-4 Preview of email sent:
  .email-preview.parking-notification-email-preview
    <iframe src="#{email_organization_parking_notification_path(@parking_notification, organization_id: current_organization.to_param)}"></iframe>
- else
  %p.text-warning.mt-4
    %em
      - if @parking_notification.unregistered_bike?
        No email sent because this #{@bike.type} wasn't registered
      - else
        No email sent because we were unable to determine who to send the email to
