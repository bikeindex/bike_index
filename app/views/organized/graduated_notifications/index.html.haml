-# TODO: add translations

.organized-page-header
  %h1
    Graduated notifications

= render partial: "/shared/period_select"

.mt-4
  = form_tag organization_graduated_notifications_path(organization_id: current_organization.to_param), id: 'bikes_search_form', class: 'bikes-search-form', method: :get do
    .query-field-wrap.nojs
      - opt_vals = @selected_query_items_options.map { |i| i.is_a?(String) ? [i, i] : [i['text'], i['search_id']]  }
      = select_tag :query_items,                                      |
        options_for_select(opt_vals, selected: opt_vals.map(&:last)), |
        placeholder: t(".search_bike_descriptions"),                  |
        class: 'form-control query-field',                            |
        multiple: true

      = text_field_tag :query, params[:query], placeholder: t(".search_bike_descriptions"), class: 'form-control query-field'
      .sidebyside-queries
        = text_field_tag :search_email, params[:search_email], placeholder: t(".search_owner_email"), class: 'form-control query-field email-field-too'
        = text_field_tag :serial, params[:serial], placeholder: t(".search_for_serial_number"), class: 'form-control query-field email-field-too'

    .search-button-wrap
      = button_tag(type: 'submit', class: 'searchit btn btn-primary') do
        :plain
          <svg id="search-button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 29 29"><defs><style>.cls-1,.cls-2{fill:none;stroke:#fff;stroke-miterlimit:10;stroke-width:2px;}.cls-2{stroke-linecap:round;}</style></defs><title>searcher</title><circle class="cls-1" cx="10.39" cy="10.39" r="9.39"/><line class="cls-2" x1="17.03" y1="17.03" x2="28" y2="28"/></svg>

    = hidden_field :search_secondary, params[:search_secondary]
    = render partial: "/shared/hidden_search_fields", locals: {kind: "organized_bike_search"}

.row.mt-4.mb-4
  .col-sm-6
    = pluralize(number_with_delimiter(@graduated_notifications.total_count), "matching graduated notifications")
    %em
      = humanized_time_range(@time_range)
    - if user_search_params_present?
      %span.less-strong
        for searched user
    - elsif params[:search_bike_id].present?
      %span.less-strong
        for searched bike
  .col-sm-6.text-right
    - if display_dev_info?
      %span.only-dev-visible.mr-2.pl-1.pr-1
        = link_to "separate secondary", url_for(sortable_search_params.merge(search_secondary: !separate_secondary_notifications?)), class: (separate_secondary_notifications? ? "active btn btn-primary btn-sm" : "less-strong small")
    %a.dropdown-toggle.btn.btn-outline-primary{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false" }
      = @search_status.humanize || "All statuses"
    .dropdown-menu
      - (GraduatedNotification.statuses + %w[current all]).each do |status|
        - if status == "current" # Add a divider before all
          .dropdown-divider
        - status_active = @search_status == status
        - status_link_params = sortable_search_params.merge(organization_id: current_organization.id, search_status: (status_active ? nil : status))
        - display_status = "Current (pending & active)" if status == "current"
        - display_status ||= status.humanize || "All statuses"
        = link_to display_status, organization_graduated_notifications_path(status_link_params), class: "dropdown-item #{status_active ? 'active' : ''}"


- skip_remaining = (GraduatedNotification.current_statuses + ["current"]).include?(@search_status)

= render partial: "/organized/graduated_notifications/table", locals: {graduated_notifications: @graduated_notifications, render_sortable: true, render_remaining_at: !skip_remaining, separate_secondary_notifications: separate_secondary_notifications?}

.paginate-container.paginate-container-bottom
  = paginate @graduated_notifications
