-# TODO: add translations

.organized-page-header
  %h1
    Graduated notifications

- unless current_organization.deliver_graduated_notifications?
  .row.mt-5.mb-5
    .col-md-6
      .alert.alert-info
        %h3 Not delivering graduated notifications
        #{current_organization.name} doesn't have a notification time period set,
        %span.text-warning bikes are not being graduated.
        %br
        Please email #{link_to "gavin@bikeindex.org", "mailto:gavin@bikeindex.org"} to set up graduated notifications.

= render partial: "/shared/period_select"

.mt-4
  = render partial: "/shared/bike_search_form", locals: {include_organized_search_fields: true, search_path: organization_graduated_notifications_path(organization_id: current_organization.to_param)}

.row.mt-4.mb-4
  .col-sm-6
    = pluralize(number_with_delimiter(@graduated_notifications.total_count), "matching graduated notifications")
    %em
      = humanized_time_range(@time_range)
    - if user_search_params_present?
      %span.less-strong
        for searched user
    - elsif params[:search_bike_id].present?
      %span.less-strong
        for searched bike
  .col-sm-6.text-right
    - if display_dev_info?
      %span.only-dev-visible.mr-2.pl-1.pr-1.pt-1.pb-2
        = link_to "separate secondary", url_for(sortable_search_params.merge(search_secondary: !separate_secondary_notifications?)), class: (separate_secondary_notifications? ? "active btn btn-primary btn-sm" : "less-strong small")
    %a.dropdown-toggle.btn.btn-outline-primary{href: "#", role: "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "false" }
      = GraduatedNotification.status_humanized(@search_status) || "All statuses"
    .dropdown-menu
      - (GraduatedNotification.statuses + %w[current all]).each do |status|
        - if status == "current" # Add a divider before all
          .dropdown-divider
        - status_active = @search_status == status
        - status_link_params = sortable_search_params.merge(organization_id: current_organization.id, search_status: (status_active ? nil : status))
        - display_status = "Current (pending & graduated)" if status == "current"
        - display_status ||= GraduatedNotification.status_humanized(status)&.titleize || "All statuses"
        = link_to display_status, organization_graduated_notifications_path(status_link_params), class: "dropdown-item #{status_active ? 'active' : ''}"


- skip_remaining = (GraduatedNotification.current_statuses + ["current"]).include?(@search_status)

= render partial: "/organized/graduated_notifications/table", locals: {graduated_notifications: @graduated_notifications, render_sortable: true, render_remaining_at: !skip_remaining, separate_secondary_notifications: separate_secondary_notifications?}

.paginate-container.paginate-container-bottom
  = paginate @graduated_notifications
