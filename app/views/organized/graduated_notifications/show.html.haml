-# TODO: add translations
.organized-page-header
  %h1
    Graduated notification
    %small.less-strong for #{@graduated_notification.user_display_name}

%h5.uncap.mb-4
  View
  - user_search_param = @graduated_notification.user_id.present? ? {user_id: @graduated_notification.user_id} : {search_email: @graduated_notification.email}
  = link_to "all user's graduated notifications", organization_graduated_notifications_path(user_search_param.merge(organization_id: current_organization.to_param, search_status: "all"))

.row
  .col-md-6
    %table.table-list
      %tbody
        %tr
          %td Created
          %td
            %span.convertTime.preciseTime
              = l(@graduated_notification.created_at, format: :convert_time)
        %tr
          %td Status
          %td
            %span{class: status_display_class(@graduated_notification.status_humanized)}
              = @graduated_notification.status_humanized.titleize
              - if @graduated_notification.status == "marked_remaining"
                %small (remained registered with #{@graduated_notification.organization&.short_name || "organization"})
            - if @graduated_notification.status == "bike_graduated"
              %small.less-strong
                no longer registered with #{@graduated_notification.organization&.short_name || "organization"}
        - if display_dev_info?
          %tr.small.only-dev-visible
            %td updated
            %td
              %span.convertTime.preciseTime
                = l(@graduated_notification.updated_at, format: :convert_time)
        - if @graduated_notification.processed? && @graduated_notification.processed_at.present?
          %tr
            %td Sent
            %td
              %span.convertTime.preciseTime
                = l(@graduated_notification.processed_at, format: :convert_time)
        - else
          %tr
            %td Will send
            %td
              %span.convertTime.preciseTime
                = l(@graduated_notification.pending_period_ends_at, format: :convert_time)
        - if @graduated_notification.processed?
          %tr
            %td Marked not graduated
            %td
              - if @graduated_notification.marked_remaining_at.present?
                %span.convertTime.preciseTime
                  = l(@graduated_notification.marked_remaining_at, format: :convert_time)
                - if @graduated_notification.marked_remaining_by.present?
                  %small.less-strong
                    by #{@graduated_notification.marked_remaining_by.display_name}
              - elsif @graduated_notification.bike_graduated? && current_user.admin_of?(current_organization)
                %small.less-strong
                  Mark #{@graduated_notification.bike.type}
                  = link_to "not graduated", retrieval_link_url(@graduated_notification), data: {confirm: "Are you sure? It's better for the user do this. You should only mark it not graduated if the user has lost the email."}
                  for the user
        %tr
          %td Email
          %td
            = @graduated_notification.email
            - if @graduated_notification.user.present?
              %em
                (#{@graduated_notification.user&.display_name})

  .col-md-6
    %h3.uncap
      User Bikes
      %small.less-strong (#{@graduated_notification.associated_bikes.count})
    %table.table-list
      %tbody
        - @graduated_notification.associated_bikes.each do |bike|
          %tr
            %td
              %span.convertTime
                = l(bike.created_at, format: :convert_time)
            %td
              = link_to organized_bike_text(bike), bike_path(bike, organization_id: current_organization.to_param)
              - if @graduated_notification.primary_bike_id == bike.id
                %strong.less-strong Primary bike
              - if !@graduated_notification.primary_notification? && bike.id == @graduated_notification.bike_id
                %strong.small - viewing this notification

- if @graduated_notification.send_email?
  %h2.uncap.mt-4
    Preview of email
    - if @graduated_notification.email_success?
      sent:
    - else
      to send:
  - mail_snippet = @graduated_notification.mail_snippet
  - if @graduated_notification.processed_at.present? && mail_snippet.present? && @graduated_notification.processed_at < mail_snippet.updated_at
    .row
      .col-md-6.offset-md-3
        .alert.alert-warning
          %h5
            %em= current_organization.name
            = link_to "custom email content", edit_organization_email_path("graduated_notification", organization_id: current_organization.to_param)
            has changed since this graduated notification was sent!
          %span.text-danger This preview shows the current version of the custom email content,
          not the version the user received.

  .email-preview.parking-notification-email-preview
    .text-center.small.less-strong email for preview only
    <iframe src="#{organization_email_path("graduated_notification", graduated_notification_id: @graduated_notification.to_param, organization_id: current_organization.to_param)}"></iframe>


- else
  .row.mt-4
    .col-md-6
      - if @graduated_notification.primary_notification?
        .alert.alert-danger
          No email will be sent for unknown reason!
          %br
          Please contact support
      - else
        .alert.alert-warning
          This notification didn't send an email because it isn't the
          - if @graduated_notification.primary_notification_id.present?
            = link_to "primary notification", organization_graduated_notification_path(@graduated_notification.primary_notification, organization_id: current_organization.to_param), class: "text-underline"
          - else
            primary notification
          for #{@graduated_notification.user_display_name}
          - if !@graduated_notification.primary_notification? && @graduated_notification.primary_bike.present?
            - primary_bike = @graduated_notification.primary_bike
            .mt-4.text-muted
              %strong The primary notification is for
              = link_to organized_bike_text(primary_bike), bike_path(primary_bike, organization_id: current_organization.to_param)

