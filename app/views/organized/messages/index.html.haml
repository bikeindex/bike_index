.organized-page-header
  %h1
    #{[@kind].flatten.map(&:titleize).join(", ")} Messages

.organized-messages#map

%table.table.table-striped.table-hover.table-bordered.table-sm.without-exterior-border#messages_table
  %thead.small-header
    %th
      Sent&nbsp;<small class="convertTimezone"></small>
    %th
      Bike
    %th
      Sender
  %tbody
/     - @organization_messages = organization_messages
/     - @organization_messages.each do |organization_message|
/       %tr
/         %td
/           %a.convertTime{ href: organization_message_path(organization_message, organization_id: current_organization.to_param) }
/             = l organization_message.created_at, format: :convert_time
/           - if organization_message.delivery_status != "success"
/             %br
/             - if organization_message.delivery_status.blank?
/               %em.text-warning
/                 Pending
/             - else
/               %span.text-danger
/                 = organization_message.delivery_status
/         %td
/           %a{ href: bike_path(organization_message.bike) }
/           = link_to organized_bike_text(organization_message.bike), bike_path(organization_message.bike)
/         %td
/           = organization_message.sender.display_name
/         %td
/           = organization_message.address

/ # - cache "organized-members-#{current_organization.to_param}-#{current_organization.updated_at.to_i}", skip_digest: true do # no digests because we're writing our own cache key
- serialized_members = current_organization.users.map { |u| u && [u.id.to_s, { name: u.name }] }.compact.to_h.to_json
:javascript
  window.pageInfo = {
    "google_maps_key": "#{ENV["GOOGLE_MAPS"]}",
    "members": #{serialized_members},
    "current_path": "#{organization_messages_path(organization_id: current_organization.to_param, kind: @kind)}"
  }

= javascript_pack_tag "application"