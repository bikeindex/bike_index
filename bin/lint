#!/usr/bin/env ruby

# To test linting, rather than automatically fix it, set LINT_TEST. Used for CI
cli_args = ARGV
lint_test = ENV["LINT_TEST"] == "true" || cli_args.include?('--no-fix')

require "fileutils"
include FileUtils

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

def html_files
  # Dir.glob("app/**/*.{html}{+*,}.erb").map { |f| "'#{f}'" }.join(" ")
  # Currently just doing components
  Dir.glob("app/components/**/*.{html}{+*,}.erb").map { |f| "'#{f}'" }.join(" ")
end

chdir APP_ROOT do
  if lint_test
    puts "Testing lint (will not autofix)"
    system!("bundle exec standardrb --no-fix")
    # TEMPORARILY commented out, js not installed on CI
    # system!("npm run lint")
  else
    system!("bundle exec standardrb --fix")
    # system!("erb-format app/components/**/*.html.erb --write")
    system!("npm run lint")
  end
  # Unfortuanately, erb-formatter doesn't support returning a status code
  # So always lint the files, and in the CI action, check if the files changed
  system!("bundle exec erb-formatter app/components/**/*.html.erb --write")
end
